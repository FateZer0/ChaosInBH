(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    306453,       6209]
NotebookOptionsPosition[    302499,       6133]
NotebookOutlinePosition[    302859,       6149]
CellTagsIndexPosition[    302816,       6146]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"1", "/", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"1", "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"u1", "/", "uh"}], ")"}], "^", 
        RowBox[{"(", 
         RowBox[{"2", "+", "z", "-", "\[Theta]"}], ")"}]}], "+", 
       RowBox[{
        RowBox[{"\[Mu]", "^", "2"}], 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"z", "-", "\[Theta]"}], ")"}], "/", "2"}], "/", 
         RowBox[{"(", 
          RowBox[{"2", "-", "\[Theta]"}], ")"}]}], " ", 
        RowBox[{
         RowBox[{"u1", "^", 
          RowBox[{"(", 
           RowBox[{"2", 
            RowBox[{"(", 
             RowBox[{"z", "-", "\[Theta]", "+", "1"}], ")"}]}], ")"}]}], "/", 
         
         RowBox[{"uh", "^", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", "z"}], "-", 
            RowBox[{"2", "\[Theta]"}]}], ")"}]}]}], 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"u1", "/", "uh"}], ")"}], "^", 
           RowBox[{"(", 
            RowBox[{"\[Theta]", "-", "z"}], ")"}]}]}], ")"}]}]}], ",", "u1"}],
      "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{"u1", "\[Rule]", " ", "us"}], "}"}]}], ")"}]}]], "Input",Expressi\
onUUID->"1660daaf-ea3f-4f85-a23e-07410e9b2649"],

Cell[BoxData[
 FractionBox["1", 
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox["us", "uh"], ")"}], 
       RowBox[{"1", "+", "z", "-", "\[Theta]"}]], " ", 
      RowBox[{"(", 
       RowBox[{"2", "+", "z", "-", "\[Theta]"}], ")"}]}], "uh"]}], "+", 
   FractionBox[
    RowBox[{
     SuperscriptBox["uh", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], " ", "z"}], "+", 
       RowBox[{"2", " ", "\[Theta]"}]}]], " ", 
     SuperscriptBox["us", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", "z", "-", "\[Theta]"}], ")"}]}]}]], " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       SuperscriptBox[
        RowBox[{"(", 
         FractionBox["us", "uh"], ")"}], 
        RowBox[{
         RowBox[{"-", "z"}], "+", "\[Theta]"}]]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"z", "-", "\[Theta]"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", "z", "-", "\[Theta]"}], ")"}], " ", 
     SuperscriptBox["\[Mu]", "2"]}], 
    RowBox[{"2", "-", "\[Theta]"}]], "-", 
   FractionBox[
    RowBox[{
     SuperscriptBox["uh", 
      RowBox[{
       RowBox[{"-", "1"}], "-", 
       RowBox[{"2", " ", "z"}], "+", 
       RowBox[{"2", " ", "\[Theta]"}]}]], " ", 
     SuperscriptBox["us", 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", "z", "-", "\[Theta]"}], ")"}]}]], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       FractionBox["us", "uh"], ")"}], 
      RowBox[{
       RowBox[{"-", "1"}], "-", "z", "+", "\[Theta]"}]], " ", 
     RowBox[{"(", 
      RowBox[{"z", "-", "\[Theta]"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "z"}], "+", "\[Theta]"}], ")"}], " ", 
     SuperscriptBox["\[Mu]", "2"]}], 
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{"2", "-", "\[Theta]"}], ")"}]}]]}]]], "Output",
 CellChangeTimes->{
  3.768902122809469*^9},ExpressionUUID->"82a4d9b7-b60a-4469-a3af-\
303fa3dd7019"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"\[Mu]extreme", "[", 
    RowBox[{"uh_", ",", "z_", ",", "\[Theta]_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Sqrt", "[", 
       RowBox[{"2", 
        RowBox[{"(", 
         RowBox[{"2", "-", "\[Theta]"}], ")"}], 
        RowBox[{"(", 
         RowBox[{"2", "+", "z", "-", "\[Theta]"}], ")"}]}], "]"}], "/", 
      "uh"}], "/", 
     RowBox[{"(", 
      RowBox[{"z", "-", "\[Theta]"}], ")"}]}], 
    RowBox[{"Exp", "[", 
     RowBox[{"-", 
      RowBox[{"Sqrt", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"z", "-", "1", "+", 
           RowBox[{"\[Theta]", "/", "2"}]}], ")"}], "/", "2"}], "/", 
        RowBox[{"(", 
         RowBox[{"2", "-", "\[Theta]"}], ")"}]}], "]"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"qcrit", "[", 
    RowBox[{"us_", ",", "uh_", ",", "\[Mu]_", ",", "z_", ",", "\[Theta]_"}], 
    "]"}], ":=", 
   RowBox[{
    RowBox[{"us", "^", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"\[Theta]", "/", "2"}], "-", "z"}], ")"}]}], 
    RowBox[{
     RowBox[{"Sqrt", "[", 
      RowBox[{"1", "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"us", "/", "uh"}], ")"}], "^", 
        RowBox[{"(", 
         RowBox[{"2", "+", "z", "-", "\[Theta]"}], ")"}]}], "+", 
       RowBox[{
        RowBox[{"\[Mu]", "^", "2"}], 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"z", "-", "\[Theta]"}], ")"}], "/", "2"}], "/", 
         RowBox[{"(", 
          RowBox[{"2", "-", "\[Theta]"}], ")"}]}], " ", 
        RowBox[{
         RowBox[{"us", "^", 
          RowBox[{"(", 
           RowBox[{"2", 
            RowBox[{"(", 
             RowBox[{"z", "-", "\[Theta]", "+", "1"}], ")"}]}], ")"}]}], "/", 
         
         RowBox[{"uh", "^", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", "z"}], "-", 
            RowBox[{"2", "\[Theta]"}]}], ")"}]}]}], 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"us", "/", "uh"}], ")"}], "^", 
           RowBox[{"(", 
            RowBox[{"\[Theta]", "-", "z"}], ")"}]}]}], ")"}]}]}], "]"}], "/", 
     
     RowBox[{"(", 
      RowBox[{"\[Mu]", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"us", "/", "uh"}], ")"}], "^", 
          RowBox[{"(", 
           RowBox[{"z", "-", "\[Theta]"}], ")"}]}]}], ")"}]}], ")"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"uz1", "[", 
    RowBox[{
    "q_", ",", "us_", ",", "uh_", ",", "\[Mu]_", ",", "z_", ",", 
     "\[Theta]_"}], "]"}], ":=", 
   RowBox[{"NDSolveValue", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          FractionBox[
           RowBox[{"q", " ", 
            RowBox[{"(", 
             RowBox[{"z", "-", "\[Theta]"}], ")"}], " ", "\[Mu]", " ", 
            SuperscriptBox[
             RowBox[{"(", 
              FractionBox[
               RowBox[{"u", "[", "t", "]"}], "uh"], ")"}], 
             RowBox[{"z", "-", "\[Theta]"}]]}], 
           RowBox[{"u", "[", "t", "]"}]]}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", "\[Theta]"}], ")"}], " ", 
            SuperscriptBox[
             RowBox[{"u", "[", "t", "]"}], 
             RowBox[{
              RowBox[{"-", "2"}], "+", 
              FractionBox["\[Theta]", "2"]}]], " ", 
            SuperscriptBox[
             RowBox[{
              SuperscriptBox["u", "\[Prime]",
               MultilineFunction->None], "[", "t", "]"}], "2"]}], ")"}], "/", 
          
          RowBox[{"(", 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              SuperscriptBox[
               RowBox[{"(", 
                FractionBox[
                 RowBox[{"u", "[", "t", "]"}], "uh"], ")"}], 
               RowBox[{"2", "+", "z", "-", "\[Theta]"}]], "+", 
              FractionBox[
               RowBox[{
                SuperscriptBox["uh", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "2"}], " ", "z"}], "+", 
                  RowBox[{"2", " ", "\[Theta]"}]}]], " ", 
                RowBox[{"(", 
                 RowBox[{"z", "-", "\[Theta]"}], ")"}], " ", 
                SuperscriptBox["\[Mu]", "2"], " ", 
                SuperscriptBox[
                 RowBox[{"u", "[", "t", "]"}], 
                 RowBox[{"2", "+", 
                  RowBox[{"2", " ", "z"}], "-", 
                  RowBox[{"2", " ", "\[Theta]"}]}]], " ", 
                RowBox[{"(", 
                 RowBox[{"1", "-", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    FractionBox[
                    RowBox[{"u", "[", "t", "]"}], "uh"], ")"}], 
                   RowBox[{
                    RowBox[{"-", "z"}], "+", "\[Theta]"}]]}], ")"}]}], 
               RowBox[{"2", " ", 
                RowBox[{"(", 
                 RowBox[{"2", "-", "\[Theta]"}], ")"}]}]]}], ")"}], " ", 
            RowBox[{"\[Sqrt]", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SuperscriptBox[
                 RowBox[{"u", "[", "t", "]"}], 
                 RowBox[{"2", "-", 
                  RowBox[{"2", " ", "z"}]}]], " ", 
                RowBox[{"(", 
                 RowBox[{"1", "-", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    FractionBox[
                    RowBox[{"u", "[", "t", "]"}], "uh"], ")"}], 
                   RowBox[{"2", "+", "z", "-", "\[Theta]"}]], "+", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["uh", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "2"}], " ", "z"}], "+", 
                    RowBox[{"2", " ", "\[Theta]"}]}]], " ", 
                    RowBox[{"(", 
                    RowBox[{"z", "-", "\[Theta]"}], ")"}], " ", 
                    SuperscriptBox["\[Mu]", "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"u", "[", "t", "]"}], 
                    RowBox[{"2", "+", 
                    RowBox[{"2", " ", "z"}], "-", 
                    RowBox[{"2", " ", "\[Theta]"}]}]], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"u", "[", "t", "]"}], "uh"], ")"}], 
                    RowBox[{
                    RowBox[{"-", "z"}], "+", "\[Theta]"}]]}], ")"}]}], 
                   RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{"2", "-", "\[Theta]"}], ")"}]}]]}], ")"}]}], "-", 
               
               FractionBox[
                SuperscriptBox[
                 RowBox[{
                  SuperscriptBox["u", "\[Prime]",
                   MultilineFunction->None], "[", "t", "]"}], "2"], 
                RowBox[{"1", "-", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   FractionBox[
                    RowBox[{"u", "[", "t", "]"}], "uh"], ")"}], 
                  RowBox[{"2", "+", "z", "-", "\[Theta]"}]], "+", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["uh", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "2"}], " ", "z"}], "+", 
                    RowBox[{"2", " ", "\[Theta]"}]}]], " ", 
                   RowBox[{"(", 
                    RowBox[{"z", "-", "\[Theta]"}], ")"}], " ", 
                   SuperscriptBox["\[Mu]", "2"], " ", 
                   SuperscriptBox[
                    RowBox[{"u", "[", "t", "]"}], 
                    RowBox[{"2", "+", 
                    RowBox[{"2", " ", "z"}], "-", 
                    RowBox[{"2", " ", "\[Theta]"}]}]], " ", 
                   RowBox[{"(", 
                    RowBox[{"1", "-", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"u", "[", "t", "]"}], "uh"], ")"}], 
                    RowBox[{
                    RowBox[{"-", "z"}], "+", "\[Theta]"}]]}], ")"}]}], 
                  RowBox[{"2", " ", 
                   RowBox[{"(", 
                    RowBox[{"2", "-", "\[Theta]"}], ")"}]}]]}]]}], ")"}]}]}], 
           ")"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"u", "[", "t", "]"}], 
             RowBox[{"\[Theta]", "/", "2"}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "2"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "2"}], "+", "\[Theta]"}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "2"}], "-", "z", "+", "\[Theta]"}], ")"}], " ", 
               
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"u", "[", "t", "]"}], "uh"], ")"}], 
                RowBox[{"z", "-", "\[Theta]"}]]}], "+", 
              RowBox[{
               SuperscriptBox["uh", 
                RowBox[{"2", "-", 
                 RowBox[{"2", " ", "z"}], "+", 
                 RowBox[{"2", " ", "\[Theta]"}]}]], " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"z", "-", "\[Theta]"}], ")"}], "2"], " ", 
               SuperscriptBox["\[Mu]", "2"], " ", 
               SuperscriptBox[
                RowBox[{"u", "[", "t", "]"}], 
                RowBox[{"2", " ", 
                 RowBox[{"(", 
                  RowBox[{"z", "-", "\[Theta]"}], ")"}]}]], " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"u", "[", "t", "]"}], "uh"], ")"}], 
                RowBox[{
                 RowBox[{"-", "z"}], "+", "\[Theta]"}]]}], "+", 
              RowBox[{"2", " ", 
               SuperscriptBox["uh", 
                RowBox[{"2", "-", 
                 RowBox[{"2", " ", "z"}], "+", 
                 RowBox[{"2", " ", "\[Theta]"}]}]], " ", 
               RowBox[{"(", 
                RowBox[{"z", "-", "\[Theta]"}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{"1", "+", "z", "-", "\[Theta]"}], ")"}], " ", 
               SuperscriptBox["\[Mu]", "2"], " ", 
               SuperscriptBox[
                RowBox[{"u", "[", "t", "]"}], 
                RowBox[{"2", " ", 
                 RowBox[{"(", 
                  RowBox[{"z", "-", "\[Theta]"}], ")"}]}]], " ", 
               RowBox[{"(", 
                RowBox[{"1", "-", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   FractionBox[
                    RowBox[{"u", "[", "t", "]"}], "uh"], ")"}], 
                  RowBox[{
                   RowBox[{"-", "z"}], "+", "\[Theta]"}]]}], ")"}]}]}], ")"}],
             " ", 
            SuperscriptBox[
             RowBox[{
              SuperscriptBox["u", "\[Prime]",
               MultilineFunction->None], "[", "t", "]"}], "2"]}], ")"}], "/", 
          
          RowBox[{"(", 
           RowBox[{"2", " ", 
            SuperscriptBox["uh", "2"], " ", 
            RowBox[{"(", 
             RowBox[{"2", "-", "\[Theta]"}], ")"}], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"u", "[", "t", "]"}], "uh"], ")"}], 
                RowBox[{"2", "+", "z", "-", "\[Theta]"}]], "-", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["uh", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "2"}], " ", "z"}], "+", 
                   RowBox[{"2", " ", "\[Theta]"}]}]], " ", 
                 RowBox[{"(", 
                  RowBox[{"z", "-", "\[Theta]"}], ")"}], " ", 
                 SuperscriptBox["\[Mu]", "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"u", "[", "t", "]"}], 
                  RowBox[{"2", "+", 
                   RowBox[{"2", " ", "z"}], "-", 
                   RowBox[{"2", " ", "\[Theta]"}]}]], " ", 
                 RowBox[{"(", 
                  RowBox[{"1", "-", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"u", "[", "t", "]"}], "uh"], ")"}], 
                    RowBox[{
                    RowBox[{"-", "z"}], "+", "\[Theta]"}]]}], ")"}]}], 
                RowBox[{"2", " ", 
                 RowBox[{"(", 
                  RowBox[{"2", "-", "\[Theta]"}], ")"}]}]]}], ")"}], "2"], 
            " ", 
            RowBox[{"\[Sqrt]", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SuperscriptBox[
                 RowBox[{"u", "[", "t", "]"}], 
                 RowBox[{"2", "-", 
                  RowBox[{"2", " ", "z"}]}]], " ", 
                RowBox[{"(", 
                 RowBox[{"1", "-", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    FractionBox[
                    RowBox[{"u", "[", "t", "]"}], "uh"], ")"}], 
                   RowBox[{"2", "+", "z", "-", "\[Theta]"}]], "+", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["uh", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "2"}], " ", "z"}], "+", 
                    RowBox[{"2", " ", "\[Theta]"}]}]], " ", 
                    RowBox[{"(", 
                    RowBox[{"z", "-", "\[Theta]"}], ")"}], " ", 
                    SuperscriptBox["\[Mu]", "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"u", "[", "t", "]"}], 
                    RowBox[{"2", "+", 
                    RowBox[{"2", " ", "z"}], "-", 
                    RowBox[{"2", " ", "\[Theta]"}]}]], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"u", "[", "t", "]"}], "uh"], ")"}], 
                    RowBox[{
                    RowBox[{"-", "z"}], "+", "\[Theta]"}]]}], ")"}]}], 
                   RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{"2", "-", "\[Theta]"}], ")"}]}]]}], ")"}]}], "-", 
               
               FractionBox[
                SuperscriptBox[
                 RowBox[{
                  SuperscriptBox["u", "\[Prime]",
                   MultilineFunction->None], "[", "t", "]"}], "2"], 
                RowBox[{"1", "-", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   FractionBox[
                    RowBox[{"u", "[", "t", "]"}], "uh"], ")"}], 
                  RowBox[{"2", "+", "z", "-", "\[Theta]"}]], "+", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["uh", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "2"}], " ", "z"}], "+", 
                    RowBox[{"2", " ", "\[Theta]"}]}]], " ", 
                   RowBox[{"(", 
                    RowBox[{"z", "-", "\[Theta]"}], ")"}], " ", 
                   SuperscriptBox["\[Mu]", "2"], " ", 
                   SuperscriptBox[
                    RowBox[{"u", "[", "t", "]"}], 
                    RowBox[{"2", "+", 
                    RowBox[{"2", " ", "z"}], "-", 
                    RowBox[{"2", " ", "\[Theta]"}]}]], " ", 
                   RowBox[{"(", 
                    RowBox[{"1", "-", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"u", "[", "t", "]"}], "uh"], ")"}], 
                    RowBox[{
                    RowBox[{"-", "z"}], "+", "\[Theta]"}]]}], ")"}]}], 
                  RowBox[{"2", " ", 
                   RowBox[{"(", 
                    RowBox[{"2", "-", "\[Theta]"}], ")"}]}]]}]]}], ")"}]}]}], 
           ")"}]}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"u", "[", "t", "]"}], 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              FractionBox["\[Theta]", "2"]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              FractionBox[
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "2"}], "-", "z", "+", "\[Theta]"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"u", "[", "t", "]"}], 
                 RowBox[{"3", "-", 
                  RowBox[{"2", " ", "z"}]}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{"u", "[", "t", "]"}], "uh"], ")"}], 
                 RowBox[{"z", "-", "\[Theta]"}]]}], 
               SuperscriptBox["uh", "2"]], "-", 
              FractionBox[
               RowBox[{
                SuperscriptBox["uh", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "2"}], " ", "z"}], "+", 
                  RowBox[{"2", " ", "\[Theta]"}]}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"z", "-", "\[Theta]"}], ")"}], "2"], " ", 
                SuperscriptBox["\[Mu]", "2"], " ", 
                SuperscriptBox[
                 RowBox[{"u", "[", "t", "]"}], 
                 RowBox[{"3", "-", 
                  RowBox[{"2", " ", "\[Theta]"}]}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{"u", "[", "t", "]"}], "uh"], ")"}], 
                 RowBox[{
                  RowBox[{"-", "z"}], "+", "\[Theta]"}]]}], 
               RowBox[{"2", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "2"}], "+", "\[Theta]"}], ")"}]}]], "+", 
              FractionBox[
               RowBox[{
                SuperscriptBox["uh", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "2"}], " ", "z"}], "+", 
                  RowBox[{"2", " ", "\[Theta]"}]}]], " ", 
                RowBox[{"(", 
                 RowBox[{"z", "-", "\[Theta]"}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{"1", "+", "z", "-", "\[Theta]"}], ")"}], " ", 
                SuperscriptBox["\[Mu]", "2"], " ", 
                SuperscriptBox[
                 RowBox[{"u", "[", "t", "]"}], 
                 RowBox[{"3", "-", 
                  RowBox[{"2", " ", "\[Theta]"}]}]], " ", 
                RowBox[{"(", 
                 RowBox[{"1", "-", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    FractionBox[
                    RowBox[{"u", "[", "t", "]"}], "uh"], ")"}], 
                   RowBox[{
                    RowBox[{"-", "z"}], "+", "\[Theta]"}]]}], ")"}]}], 
               RowBox[{"2", "-", "\[Theta]"}]], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"2", "-", 
                 RowBox[{"2", " ", "z"}]}], ")"}], " ", 
               SuperscriptBox[
                RowBox[{"u", "[", "t", "]"}], 
                RowBox[{"1", "-", 
                 RowBox[{"2", " ", "z"}]}]], " ", 
               RowBox[{"(", 
                RowBox[{"1", "-", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   FractionBox[
                    RowBox[{"u", "[", "t", "]"}], "uh"], ")"}], 
                  RowBox[{"2", "+", "z", "-", "\[Theta]"}]], "+", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["uh", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "2"}], " ", "z"}], "+", 
                    RowBox[{"2", " ", "\[Theta]"}]}]], " ", 
                   RowBox[{"(", 
                    RowBox[{"z", "-", "\[Theta]"}], ")"}], " ", 
                   SuperscriptBox["\[Mu]", "2"], " ", 
                   SuperscriptBox[
                    RowBox[{"u", "[", "t", "]"}], 
                    RowBox[{"2", "+", 
                    RowBox[{"2", " ", "z"}], "-", 
                    RowBox[{"2", " ", "\[Theta]"}]}]], " ", 
                   RowBox[{"(", 
                    RowBox[{"1", "-", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"u", "[", "t", "]"}], "uh"], ")"}], 
                    RowBox[{
                    RowBox[{"-", "z"}], "+", "\[Theta]"}]]}], ")"}]}], 
                  RowBox[{"2", " ", 
                   RowBox[{"(", 
                    RowBox[{"2", "-", "\[Theta]"}], ")"}]}]]}], ")"}]}], "+", 
              
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", 
                    FractionBox[
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"2", "+", "z", "-", "\[Theta]"}], ")"}], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"u", "[", "t", "]"}], "uh"], ")"}], 
                    RowBox[{"1", "+", "z", "-", "\[Theta]"}]]}], "uh"]}], "-", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["uh", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "2"}], " ", "z"}], "+", 
                    RowBox[{"2", " ", "\[Theta]"}]}]], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"z", "-", "\[Theta]"}], ")"}], "2"], " ", 
                    SuperscriptBox["\[Mu]", "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"u", "[", "t", "]"}], 
                    RowBox[{"1", "+", 
                    RowBox[{"2", " ", "z"}], "-", 
                    RowBox[{"2", " ", "\[Theta]"}]}]], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"u", "[", "t", "]"}], "uh"], ")"}], 
                    RowBox[{
                    RowBox[{"-", "z"}], "+", "\[Theta]"}]]}], 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], "+", "\[Theta]"}], ")"}]}]], "+", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["uh", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "2"}], " ", "z"}], "+", 
                    RowBox[{"2", " ", "\[Theta]"}]}]], " ", 
                    RowBox[{"(", 
                    RowBox[{"z", "-", "\[Theta]"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", "z", "-", "\[Theta]"}], ")"}], " ", 
                    SuperscriptBox["\[Mu]", "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"u", "[", "t", "]"}], 
                    RowBox[{"1", "+", 
                    RowBox[{"2", " ", "z"}], "-", 
                    RowBox[{"2", " ", "\[Theta]"}]}]], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"u", "[", "t", "]"}], "uh"], ")"}], 
                    RowBox[{
                    RowBox[{"-", "z"}], "+", "\[Theta]"}]]}], ")"}]}], 
                    RowBox[{"2", "-", "\[Theta]"}]]}], ")"}], " ", 
                 SuperscriptBox[
                  RowBox[{
                   SuperscriptBox["u", "\[Prime]",
                    MultilineFunction->None], "[", "t", "]"}], "2"]}], ")"}], 
               "/", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    FractionBox[
                    RowBox[{"u", "[", "t", "]"}], "uh"], ")"}], 
                   RowBox[{"2", "+", "z", "-", "\[Theta]"}]], "-", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["uh", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "2"}], " ", "z"}], "+", 
                    RowBox[{"2", " ", "\[Theta]"}]}]], " ", 
                    RowBox[{"(", 
                    RowBox[{"z", "-", "\[Theta]"}], ")"}], " ", 
                    SuperscriptBox["\[Mu]", "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"u", "[", "t", "]"}], 
                    RowBox[{"2", "+", 
                    RowBox[{"2", " ", "z"}], "-", 
                    RowBox[{"2", " ", "\[Theta]"}]}]], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"u", "[", "t", "]"}], "uh"], ")"}], 
                    RowBox[{
                    RowBox[{"-", "z"}], "+", "\[Theta]"}]]}], ")"}]}], 
                   RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{"2", "-", "\[Theta]"}], ")"}]}]]}], ")"}], 
                "2"]}]}], ")"}]}], ")"}], "/", 
          RowBox[{"(", 
           RowBox[{"2", " ", 
            RowBox[{"\[Sqrt]", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SuperscriptBox[
                 RowBox[{"u", "[", "t", "]"}], 
                 RowBox[{"2", "-", 
                  RowBox[{"2", " ", "z"}]}]], " ", 
                RowBox[{"(", 
                 RowBox[{"1", "-", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    FractionBox[
                    RowBox[{"u", "[", "t", "]"}], "uh"], ")"}], 
                   RowBox[{"2", "+", "z", "-", "\[Theta]"}]], "+", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["uh", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "2"}], " ", "z"}], "+", 
                    RowBox[{"2", " ", "\[Theta]"}]}]], " ", 
                    RowBox[{"(", 
                    RowBox[{"z", "-", "\[Theta]"}], ")"}], " ", 
                    SuperscriptBox["\[Mu]", "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"u", "[", "t", "]"}], 
                    RowBox[{"2", "+", 
                    RowBox[{"2", " ", "z"}], "-", 
                    RowBox[{"2", " ", "\[Theta]"}]}]], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"u", "[", "t", "]"}], "uh"], ")"}], 
                    RowBox[{
                    RowBox[{"-", "z"}], "+", "\[Theta]"}]]}], ")"}]}], 
                   RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{"2", "-", "\[Theta]"}], ")"}]}]]}], ")"}]}], "-", 
               
               FractionBox[
                SuperscriptBox[
                 RowBox[{
                  SuperscriptBox["u", "\[Prime]",
                   MultilineFunction->None], "[", "t", "]"}], "2"], 
                RowBox[{"1", "-", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   FractionBox[
                    RowBox[{"u", "[", "t", "]"}], "uh"], ")"}], 
                  RowBox[{"2", "+", "z", "-", "\[Theta]"}]], "+", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["uh", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "2"}], " ", "z"}], "+", 
                    RowBox[{"2", " ", "\[Theta]"}]}]], " ", 
                   RowBox[{"(", 
                    RowBox[{"z", "-", "\[Theta]"}], ")"}], " ", 
                   SuperscriptBox["\[Mu]", "2"], " ", 
                   SuperscriptBox[
                    RowBox[{"u", "[", "t", "]"}], 
                    RowBox[{"2", "+", 
                    RowBox[{"2", " ", "z"}], "-", 
                    RowBox[{"2", " ", "\[Theta]"}]}]], " ", 
                   RowBox[{"(", 
                    RowBox[{"1", "-", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"u", "[", "t", "]"}], "uh"], ")"}], 
                    RowBox[{
                    RowBox[{"-", "z"}], "+", "\[Theta]"}]]}], ")"}]}], 
                  RowBox[{"2", " ", 
                   RowBox[{"(", 
                    RowBox[{"2", "-", "\[Theta]"}], ")"}]}]]}]]}], ")"}]}]}], 
           ")"}]}], "-", 
         RowBox[{
          FractionBox["1", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "\[Theta]"}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"u", "[", "t", "]"}], 
           RowBox[{
            RowBox[{"-", "2"}], "+", 
            FractionBox["\[Theta]", "2"]}]], " ", 
          RowBox[{"\[Sqrt]", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SuperscriptBox[
               RowBox[{"u", "[", "t", "]"}], 
               RowBox[{"2", "-", 
                RowBox[{"2", " ", "z"}]}]], " ", 
              RowBox[{"(", 
               RowBox[{"1", "-", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{"u", "[", "t", "]"}], "uh"], ")"}], 
                 RowBox[{"2", "+", "z", "-", "\[Theta]"}]], "+", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["uh", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"-", "2"}], " ", "z"}], "+", 
                    RowBox[{"2", " ", "\[Theta]"}]}]], " ", 
                  RowBox[{"(", 
                   RowBox[{"z", "-", "\[Theta]"}], ")"}], " ", 
                  SuperscriptBox["\[Mu]", "2"], " ", 
                  SuperscriptBox[
                   RowBox[{"u", "[", "t", "]"}], 
                   RowBox[{"2", "+", 
                    RowBox[{"2", " ", "z"}], "-", 
                    RowBox[{"2", " ", "\[Theta]"}]}]], " ", 
                  RowBox[{"(", 
                   RowBox[{"1", "-", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"u", "[", "t", "]"}], "uh"], ")"}], 
                    RowBox[{
                    RowBox[{"-", "z"}], "+", "\[Theta]"}]]}], ")"}]}], 
                 RowBox[{"2", " ", 
                  RowBox[{"(", 
                   RowBox[{"2", "-", "\[Theta]"}], ")"}]}]]}], ")"}]}], "-", 
             FractionBox[
              SuperscriptBox[
               RowBox[{
                SuperscriptBox["u", "\[Prime]",
                 MultilineFunction->None], "[", "t", "]"}], "2"], 
              RowBox[{"1", "-", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"u", "[", "t", "]"}], "uh"], ")"}], 
                RowBox[{"2", "+", "z", "-", "\[Theta]"}]], "+", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["uh", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "2"}], " ", "z"}], "+", 
                   RowBox[{"2", " ", "\[Theta]"}]}]], " ", 
                 RowBox[{"(", 
                  RowBox[{"z", "-", "\[Theta]"}], ")"}], " ", 
                 SuperscriptBox["\[Mu]", "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"u", "[", "t", "]"}], 
                  RowBox[{"2", "+", 
                   RowBox[{"2", " ", "z"}], "-", 
                   RowBox[{"2", " ", "\[Theta]"}]}]], " ", 
                 RowBox[{"(", 
                  RowBox[{"1", "-", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"u", "[", "t", "]"}], "uh"], ")"}], 
                    RowBox[{
                    RowBox[{"-", "z"}], "+", "\[Theta]"}]]}], ")"}]}], 
                RowBox[{"2", " ", 
                 RowBox[{"(", 
                  RowBox[{"2", "-", "\[Theta]"}], ")"}]}]]}]]}], ")"}]}]}], 
         "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"u", "[", "t", "]"}], 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              FractionBox["\[Theta]", "2"]}]], " ", 
            RowBox[{
             SuperscriptBox["u", "\[Prime]\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], ")"}], "/", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "-", 
              SuperscriptBox[
               RowBox[{"(", 
                FractionBox[
                 RowBox[{"u", "[", "t", "]"}], "uh"], ")"}], 
               RowBox[{"2", "+", "z", "-", "\[Theta]"}]], "+", 
              FractionBox[
               RowBox[{
                SuperscriptBox["uh", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "2"}], " ", "z"}], "+", 
                  RowBox[{"2", " ", "\[Theta]"}]}]], " ", 
                RowBox[{"(", 
                 RowBox[{"z", "-", "\[Theta]"}], ")"}], " ", 
                SuperscriptBox["\[Mu]", "2"], " ", 
                SuperscriptBox[
                 RowBox[{"u", "[", "t", "]"}], 
                 RowBox[{"2", "+", 
                  RowBox[{"2", " ", "z"}], "-", 
                  RowBox[{"2", " ", "\[Theta]"}]}]], " ", 
                RowBox[{"(", 
                 RowBox[{"1", "-", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    FractionBox[
                    RowBox[{"u", "[", "t", "]"}], "uh"], ")"}], 
                   RowBox[{
                    RowBox[{"-", "z"}], "+", "\[Theta]"}]]}], ")"}]}], 
               RowBox[{"2", " ", 
                RowBox[{"(", 
                 RowBox[{"2", "-", "\[Theta]"}], ")"}]}]]}], ")"}], " ", 
            RowBox[{"\[Sqrt]", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SuperscriptBox[
                 RowBox[{"u", "[", "t", "]"}], 
                 RowBox[{"2", "-", 
                  RowBox[{"2", " ", "z"}]}]], " ", 
                RowBox[{"(", 
                 RowBox[{"1", "-", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    FractionBox[
                    RowBox[{"u", "[", "t", "]"}], "uh"], ")"}], 
                   RowBox[{"2", "+", "z", "-", "\[Theta]"}]], "+", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["uh", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "2"}], " ", "z"}], "+", 
                    RowBox[{"2", " ", "\[Theta]"}]}]], " ", 
                    RowBox[{"(", 
                    RowBox[{"z", "-", "\[Theta]"}], ")"}], " ", 
                    SuperscriptBox["\[Mu]", "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"u", "[", "t", "]"}], 
                    RowBox[{"2", "+", 
                    RowBox[{"2", " ", "z"}], "-", 
                    RowBox[{"2", " ", "\[Theta]"}]}]], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"u", "[", "t", "]"}], "uh"], ")"}], 
                    RowBox[{
                    RowBox[{"-", "z"}], "+", "\[Theta]"}]]}], ")"}]}], 
                   RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{"2", "-", "\[Theta]"}], ")"}]}]]}], ")"}]}], "-", 
               
               FractionBox[
                SuperscriptBox[
                 RowBox[{
                  SuperscriptBox["u", "\[Prime]",
                   MultilineFunction->None], "[", "t", "]"}], "2"], 
                RowBox[{"1", "-", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   FractionBox[
                    RowBox[{"u", "[", "t", "]"}], "uh"], ")"}], 
                  RowBox[{"2", "+", "z", "-", "\[Theta]"}]], "+", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["uh", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "2"}], " ", "z"}], "+", 
                    RowBox[{"2", " ", "\[Theta]"}]}]], " ", 
                   RowBox[{"(", 
                    RowBox[{"z", "-", "\[Theta]"}], ")"}], " ", 
                   SuperscriptBox["\[Mu]", "2"], " ", 
                   SuperscriptBox[
                    RowBox[{"u", "[", "t", "]"}], 
                    RowBox[{"2", "+", 
                    RowBox[{"2", " ", "z"}], "-", 
                    RowBox[{"2", " ", "\[Theta]"}]}]], " ", 
                   RowBox[{"(", 
                    RowBox[{"1", "-", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"u", "[", "t", "]"}], "uh"], ")"}], 
                    RowBox[{
                    RowBox[{"-", "z"}], "+", "\[Theta]"}]]}], ")"}]}], 
                  RowBox[{"2", " ", 
                   RowBox[{"(", 
                    RowBox[{"2", "-", "\[Theta]"}], ")"}]}]]}]]}], ")"}]}]}], 
           ")"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"u", "[", "t", "]"}], 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              FractionBox["\[Theta]", "2"]}]], " ", 
            RowBox[{
             SuperscriptBox["u", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"2", "-", 
                 RowBox[{"2", " ", "z"}]}], ")"}], " ", 
               SuperscriptBox[
                RowBox[{"u", "[", "t", "]"}], 
                RowBox[{"1", "-", 
                 RowBox[{"2", " ", "z"}]}]], " ", 
               RowBox[{"(", 
                RowBox[{"1", "-", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   FractionBox[
                    RowBox[{"u", "[", "t", "]"}], "uh"], ")"}], 
                  RowBox[{"2", "+", "z", "-", "\[Theta]"}]], "+", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["uh", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "2"}], " ", "z"}], "+", 
                    RowBox[{"2", " ", "\[Theta]"}]}]], " ", 
                   RowBox[{"(", 
                    RowBox[{"z", "-", "\[Theta]"}], ")"}], " ", 
                   SuperscriptBox["\[Mu]", "2"], " ", 
                   SuperscriptBox[
                    RowBox[{"u", "[", "t", "]"}], 
                    RowBox[{"2", "+", 
                    RowBox[{"2", " ", "z"}], "-", 
                    RowBox[{"2", " ", "\[Theta]"}]}]], " ", 
                   RowBox[{"(", 
                    RowBox[{"1", "-", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"u", "[", "t", "]"}], "uh"], ")"}], 
                    RowBox[{
                    RowBox[{"-", "z"}], "+", "\[Theta]"}]]}], ")"}]}], 
                  RowBox[{"2", " ", 
                   RowBox[{"(", 
                    RowBox[{"2", "-", "\[Theta]"}], ")"}]}]]}], ")"}], " ", 
               RowBox[{
                SuperscriptBox["u", "\[Prime]",
                 MultilineFunction->None], "[", "t", "]"}]}], "+", 
              RowBox[{
               FractionBox["1", 
                RowBox[{"2", " ", 
                 SuperscriptBox["uh", "2"], " ", 
                 RowBox[{"(", 
                  RowBox[{"2", "-", "\[Theta]"}], ")"}]}]], 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"u", "[", "t", "]"}], 
                 RowBox[{"3", "-", 
                  RowBox[{"2", " ", "z"}]}]], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "2"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], "+", "\[Theta]"}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], "-", "z", "+", "\[Theta]"}], ")"}], 
                   " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"u", "[", "t", "]"}], "uh"], ")"}], 
                    RowBox[{"z", "-", "\[Theta]"}]]}], "+", 
                  RowBox[{
                   SuperscriptBox["uh", 
                    RowBox[{"2", "-", 
                    RowBox[{"2", " ", "z"}], "+", 
                    RowBox[{"2", " ", "\[Theta]"}]}]], " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"z", "-", "\[Theta]"}], ")"}], "2"], " ", 
                   SuperscriptBox["\[Mu]", "2"], " ", 
                   SuperscriptBox[
                    RowBox[{"u", "[", "t", "]"}], 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{"z", "-", "\[Theta]"}], ")"}]}]], " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"u", "[", "t", "]"}], "uh"], ")"}], 
                    RowBox[{
                    RowBox[{"-", "z"}], "+", "\[Theta]"}]]}], "+", 
                  RowBox[{"2", " ", 
                   SuperscriptBox["uh", 
                    RowBox[{"2", "-", 
                    RowBox[{"2", " ", "z"}], "+", 
                    RowBox[{"2", " ", "\[Theta]"}]}]], " ", 
                   RowBox[{"(", 
                    RowBox[{"z", "-", "\[Theta]"}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{"1", "+", "z", "-", "\[Theta]"}], ")"}], " ", 
                   SuperscriptBox["\[Mu]", "2"], " ", 
                   SuperscriptBox[
                    RowBox[{"u", "[", "t", "]"}], 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{"z", "-", "\[Theta]"}], ")"}]}]], " ", 
                   RowBox[{"(", 
                    RowBox[{"1", "-", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"u", "[", "t", "]"}], "uh"], ")"}], 
                    RowBox[{
                    RowBox[{"-", "z"}], "+", "\[Theta]"}]]}], ")"}]}]}], 
                 ")"}], " ", 
                RowBox[{
                 SuperscriptBox["u", "\[Prime]",
                  MultilineFunction->None], "[", "t", "]"}]}]}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"u", "[", "t", "]"}], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "2"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], "+", "\[Theta]"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], "-", "z", "+", "\[Theta]"}], ")"}], 
                    " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"u", "[", "t", "]"}], "uh"], ")"}], 
                    RowBox[{"z", "-", "\[Theta]"}]]}], "+", 
                   RowBox[{
                    SuperscriptBox["uh", 
                    RowBox[{"2", "-", 
                    RowBox[{"2", " ", "z"}], "+", 
                    RowBox[{"2", " ", "\[Theta]"}]}]], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"z", "-", "\[Theta]"}], ")"}], "2"], " ", 
                    SuperscriptBox["\[Mu]", "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"u", "[", "t", "]"}], 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{"z", "-", "\[Theta]"}], ")"}]}]], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"u", "[", "t", "]"}], "uh"], ")"}], 
                    RowBox[{
                    RowBox[{"-", "z"}], "+", "\[Theta]"}]]}], "+", 
                   RowBox[{"2", " ", 
                    SuperscriptBox["uh", 
                    RowBox[{"2", "-", 
                    RowBox[{"2", " ", "z"}], "+", 
                    RowBox[{"2", " ", "\[Theta]"}]}]], " ", 
                    RowBox[{"(", 
                    RowBox[{"z", "-", "\[Theta]"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", "z", "-", "\[Theta]"}], ")"}], " ", 
                    SuperscriptBox["\[Mu]", "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"u", "[", "t", "]"}], 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{"z", "-", "\[Theta]"}], ")"}]}]], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"u", "[", "t", "]"}], "uh"], ")"}], 
                    RowBox[{
                    RowBox[{"-", "z"}], "+", "\[Theta]"}]]}], ")"}]}]}], 
                  ")"}], " ", 
                 SuperscriptBox[
                  RowBox[{
                   SuperscriptBox["u", "\[Prime]",
                    MultilineFunction->None], "[", "t", "]"}], "3"]}], ")"}], 
               "/", 
               RowBox[{"(", 
                RowBox[{"2", " ", 
                 SuperscriptBox["uh", "2"], " ", 
                 RowBox[{"(", 
                  RowBox[{"2", "-", "\[Theta]"}], ")"}], " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"u", "[", "t", "]"}], "uh"], ")"}], 
                    RowBox[{"2", "+", "z", "-", "\[Theta]"}]], "-", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["uh", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "2"}], " ", "z"}], "+", 
                    RowBox[{"2", " ", "\[Theta]"}]}]], " ", 
                    RowBox[{"(", 
                    RowBox[{"z", "-", "\[Theta]"}], ")"}], " ", 
                    SuperscriptBox["\[Mu]", "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"u", "[", "t", "]"}], 
                    RowBox[{"2", "+", 
                    RowBox[{"2", " ", "z"}], "-", 
                    RowBox[{"2", " ", "\[Theta]"}]}]], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"u", "[", "t", "]"}], "uh"], ")"}], 
                    RowBox[{
                    RowBox[{"-", "z"}], "+", "\[Theta]"}]]}], ")"}]}], 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{"2", "-", "\[Theta]"}], ")"}]}]]}], ")"}], "2"]}],
                 ")"}]}], "-", 
              FractionBox[
               RowBox[{"2", " ", 
                RowBox[{
                 SuperscriptBox["u", "\[Prime]",
                  MultilineFunction->None], "[", "t", "]"}], " ", 
                RowBox[{
                 SuperscriptBox["u", "\[Prime]\[Prime]",
                  MultilineFunction->None], "[", "t", "]"}]}], 
               RowBox[{"1", "-", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{"u", "[", "t", "]"}], "uh"], ")"}], 
                 RowBox[{"2", "+", "z", "-", "\[Theta]"}]], "+", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["uh", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"-", "2"}], " ", "z"}], "+", 
                    RowBox[{"2", " ", "\[Theta]"}]}]], " ", 
                  RowBox[{"(", 
                   RowBox[{"z", "-", "\[Theta]"}], ")"}], " ", 
                  SuperscriptBox["\[Mu]", "2"], " ", 
                  SuperscriptBox[
                   RowBox[{"u", "[", "t", "]"}], 
                   RowBox[{"2", "+", 
                    RowBox[{"2", " ", "z"}], "-", 
                    RowBox[{"2", " ", "\[Theta]"}]}]], " ", 
                  RowBox[{"(", 
                   RowBox[{"1", "-", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"u", "[", "t", "]"}], "uh"], ")"}], 
                    RowBox[{
                    RowBox[{"-", "z"}], "+", "\[Theta]"}]]}], ")"}]}], 
                 RowBox[{"2", " ", 
                  RowBox[{"(", 
                   RowBox[{"2", "-", "\[Theta]"}], ")"}]}]]}]]}], ")"}]}], 
           ")"}], "/", 
          RowBox[{"(", 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              SuperscriptBox[
               RowBox[{"(", 
                FractionBox[
                 RowBox[{"u", "[", "t", "]"}], "uh"], ")"}], 
               RowBox[{"2", "+", "z", "-", "\[Theta]"}]], "+", 
              FractionBox[
               RowBox[{
                SuperscriptBox["uh", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "2"}], " ", "z"}], "+", 
                  RowBox[{"2", " ", "\[Theta]"}]}]], " ", 
                RowBox[{"(", 
                 RowBox[{"z", "-", "\[Theta]"}], ")"}], " ", 
                SuperscriptBox["\[Mu]", "2"], " ", 
                SuperscriptBox[
                 RowBox[{"u", "[", "t", "]"}], 
                 RowBox[{"2", "+", 
                  RowBox[{"2", " ", "z"}], "-", 
                  RowBox[{"2", " ", "\[Theta]"}]}]], " ", 
                RowBox[{"(", 
                 RowBox[{"1", "-", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    FractionBox[
                    RowBox[{"u", "[", "t", "]"}], "uh"], ")"}], 
                   RowBox[{
                    RowBox[{"-", "z"}], "+", "\[Theta]"}]]}], ")"}]}], 
               RowBox[{"2", " ", 
                RowBox[{"(", 
                 RowBox[{"2", "-", "\[Theta]"}], ")"}]}]]}], ")"}], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SuperscriptBox[
                 RowBox[{"u", "[", "t", "]"}], 
                 RowBox[{"2", "-", 
                  RowBox[{"2", " ", "z"}]}]], " ", 
                RowBox[{"(", 
                 RowBox[{"1", "-", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    FractionBox[
                    RowBox[{"u", "[", "t", "]"}], "uh"], ")"}], 
                   RowBox[{"2", "+", "z", "-", "\[Theta]"}]], "+", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["uh", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "2"}], " ", "z"}], "+", 
                    RowBox[{"2", " ", "\[Theta]"}]}]], " ", 
                    RowBox[{"(", 
                    RowBox[{"z", "-", "\[Theta]"}], ")"}], " ", 
                    SuperscriptBox["\[Mu]", "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"u", "[", "t", "]"}], 
                    RowBox[{"2", "+", 
                    RowBox[{"2", " ", "z"}], "-", 
                    RowBox[{"2", " ", "\[Theta]"}]}]], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"u", "[", "t", "]"}], "uh"], ")"}], 
                    RowBox[{
                    RowBox[{"-", "z"}], "+", "\[Theta]"}]]}], ")"}]}], 
                   RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{"2", "-", "\[Theta]"}], ")"}]}]]}], ")"}]}], "-", 
               
               FractionBox[
                SuperscriptBox[
                 RowBox[{
                  SuperscriptBox["u", "\[Prime]",
                   MultilineFunction->None], "[", "t", "]"}], "2"], 
                RowBox[{"1", "-", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   FractionBox[
                    RowBox[{"u", "[", "t", "]"}], "uh"], ")"}], 
                  RowBox[{"2", "+", "z", "-", "\[Theta]"}]], "+", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["uh", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "2"}], " ", "z"}], "+", 
                    RowBox[{"2", " ", "\[Theta]"}]}]], " ", 
                   RowBox[{"(", 
                    RowBox[{"z", "-", "\[Theta]"}], ")"}], " ", 
                   SuperscriptBox["\[Mu]", "2"], " ", 
                   SuperscriptBox[
                    RowBox[{"u", "[", "t", "]"}], 
                    RowBox[{"2", "+", 
                    RowBox[{"2", " ", "z"}], "-", 
                    RowBox[{"2", " ", "\[Theta]"}]}]], " ", 
                   RowBox[{"(", 
                    RowBox[{"1", "-", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"u", "[", "t", "]"}], "uh"], ")"}], 
                    RowBox[{
                    RowBox[{"-", "z"}], "+", "\[Theta]"}]]}], ")"}]}], 
                  RowBox[{"2", " ", 
                   RowBox[{"(", 
                    RowBox[{"2", "-", "\[Theta]"}], ")"}]}]]}]]}], ")"}], 
             RowBox[{"3", "/", "2"}]]}], ")"}]}]}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"u", "[", "0", "]"}], "\[Equal]", " ", "us"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"u", "'"}], "[", "0", "]"}], "\[Equal]", "0"}]}], "}"}], ",",
      "u", ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0.1", ",", "5.7"}], "}"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"fu1", "[", 
    RowBox[{
    "t_", ",", "q_", ",", "us_", ",", "uh_", ",", "\[Mu]_", ",", "z_", ",", 
     "\[Theta]_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"uz1", "[", 
     RowBox[{
     "q", ",", "us", ",", "uh", ",", "\[Mu]", ",", "z", ",", "\[Theta]"}], 
     "]"}], "[", "t", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dfu1", "[", 
    RowBox[{
    "t_", ",", "q_", ",", "us_", ",", "uh_", ",", "\[Mu]_", ",", "z_", ",", 
     "\[Theta]_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"uz1", "[", 
        RowBox[{
        "q", ",", "us", ",", "uh", ",", "\[Mu]", ",", "z", ",", "\[Theta]"}], 
        "]"}], "[", "t1", "]"}], ",", "t1"}], "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{"t1", "\[Rule]", "t"}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"pu", "[", 
    RowBox[{
    "t_", ",", "q_", ",", "us_", ",", "uh_", ",", "\[Mu]_", ",", "z_", ",", 
     "\[Theta]_"}], "]"}], ":=", 
   RowBox[{"Block", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"du", ",", "u", ",", "fu"}], "}"}], ",", "\[IndentingNewLine]", 
     
     RowBox[{
      RowBox[{"du", "=", 
       RowBox[{"dfu1", "[", 
        RowBox[{
        "t", ",", "q", ",", "us", ",", "uh", ",", "\[Mu]", ",", "z", ",", 
         "\[Theta]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"u", "=", 
       RowBox[{"fu1", "[", 
        RowBox[{
        "t", ",", "q", ",", "us", ",", "uh", ",", "\[Mu]", ",", "z", ",", 
         "\[Theta]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"fu", "=", 
       RowBox[{"1", "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"us", "/", "uh"}], ")"}], "^", 
         RowBox[{"(", 
          RowBox[{"2", "+", "z", "-", "\[Theta]"}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"\[Mu]", "^", "2"}], 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"z", "-", "\[Theta]"}], ")"}], "/", "2"}], "/", 
          RowBox[{"(", 
           RowBox[{"2", "-", "\[Theta]"}], ")"}]}], " ", 
         RowBox[{
          RowBox[{"us", "^", 
           RowBox[{"(", 
            RowBox[{"2", 
             RowBox[{"(", 
              RowBox[{"z", "-", "\[Theta]", "+", "1"}], ")"}]}], ")"}]}], "/", 
          RowBox[{"uh", "^", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", "z"}], "-", 
             RowBox[{"2", "\[Theta]"}]}], ")"}]}]}], 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"us", "/", "uh"}], ")"}], "^", 
            RowBox[{"(", 
             RowBox[{"\[Theta]", "-", "z"}], ")"}]}]}], ")"}]}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{
        RowBox[{"u", "^", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Theta]", "/", "2"}], "-", "1"}], ")"}]}], 
        RowBox[{"du", "/", 
         RowBox[{"(", 
          RowBox[{"fu", " ", 
           RowBox[{"Sqrt", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"u", "^", 
               RowBox[{"(", 
                RowBox[{"2", 
                 RowBox[{"(", 
                  RowBox[{"1", "-", "z"}], ")"}]}], ")"}]}], "fu"}], " ", "-",
              " ", 
             RowBox[{
              RowBox[{"du", "^", "2"}], "/", "fu"}]}], "]"}]}], ")"}]}]}], 
       "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Beta]pu", "[", 
    RowBox[{
    "t_", ",", "q_", ",", "us_", ",", "uh_", ",", "\[Mu]_", ",", "z_", ",", 
     "\[Theta]_"}], "]"}], ":=", 
   RowBox[{"Block", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"du", ",", "u", ",", "fu", ",", "\[Beta]"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"du", "=", 
       RowBox[{"dfu1", "[", 
        RowBox[{
        "t", ",", "q", ",", "us", ",", "uh", ",", "\[Mu]", ",", "z", ",", 
         "\[Theta]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"u", "=", 
       RowBox[{"fu1", "[", 
        RowBox[{
        "t", ",", "q", ",", "us", ",", "uh", ",", "\[Mu]", ",", "z", ",", 
         "\[Theta]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"fu", "=", 
       RowBox[{"1", "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"us", "/", "uh"}], ")"}], "^", 
         RowBox[{"(", 
          RowBox[{"2", "+", "z", "-", "\[Theta]"}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"\[Mu]", "^", "2"}], 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"z", "-", "\[Theta]"}], ")"}], "/", "2"}], "/", 
          RowBox[{"(", 
           RowBox[{"2", "-", "\[Theta]"}], ")"}]}], " ", 
         RowBox[{
          RowBox[{"us", "^", 
           RowBox[{"(", 
            RowBox[{"2", 
             RowBox[{"(", 
              RowBox[{"z", "-", "\[Theta]", "+", "1"}], ")"}]}], ")"}]}], "/", 
          RowBox[{"uh", "^", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", "z"}], "-", 
             RowBox[{"2", "\[Theta]"}]}], ")"}]}]}], 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"us", "/", "uh"}], ")"}], "^", 
            RowBox[{"(", 
             RowBox[{"\[Theta]", "-", "z"}], ")"}]}]}], ")"}]}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"\[Beta]", "=", 
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{"1", "-", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"u1", "/", "uh"}], ")"}], "^", 
              RowBox[{"(", 
               RowBox[{"2", "+", "z", "-", "\[Theta]"}], ")"}]}], "+", 
             RowBox[{
              RowBox[{"\[Mu]", "^", "2"}], 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"z", "-", "\[Theta]"}], ")"}], "/", "2"}], "/", 
               RowBox[{"(", 
                RowBox[{"2", "-", "\[Theta]"}], ")"}]}], " ", 
              RowBox[{
               RowBox[{"u1", "^", 
                RowBox[{"(", 
                 RowBox[{"2", 
                  RowBox[{"(", 
                   RowBox[{"z", "-", "\[Theta]", "+", "1"}], ")"}]}], ")"}]}],
                "/", 
               RowBox[{"uh", "^", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", "z"}], "-", 
                  RowBox[{"2", "\[Theta]"}]}], ")"}]}]}], 
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"u1", "/", "uh"}], ")"}], "^", 
                 RowBox[{"(", 
                  RowBox[{"\[Theta]", "-", "z"}], ")"}]}]}], ")"}]}]}], ",", 
            "u1"}], "]"}], "/.", 
          RowBox[{"{", 
           RowBox[{"u1", "\[Rule]", " ", "us"}], "}"}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{"\[Beta]", " ", 
        RowBox[{"u", "^", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Theta]", "/", "2"}], "-", "1"}], ")"}]}], 
        RowBox[{"du", "/", 
         RowBox[{"(", 
          RowBox[{"fu", " ", 
           RowBox[{"Sqrt", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"u", "^", 
               RowBox[{"(", 
                RowBox[{"2", 
                 RowBox[{"(", 
                  RowBox[{"1", "-", "z"}], ")"}]}], ")"}]}], "fu"}], " ", "-",
              " ", 
             RowBox[{
              RowBox[{"du", "^", "2"}], "/", "fu"}]}], "]"}]}], ")"}]}]}], 
       "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.760192592390452*^9, 3.7601929217464333`*^9}, {
   3.7601929722065077`*^9, 3.760192993329393*^9}, {3.760193040762793*^9, 
   3.760193091078969*^9}, {3.760193171529488*^9, 3.7601931758456087`*^9}, {
   3.7601932067931223`*^9, 3.76019325452666*^9}, {3.760193288386395*^9, 
   3.760193323991431*^9}, {3.760193359986504*^9, 3.7601934730981483`*^9}, {
   3.76019359689893*^9, 3.760193613906886*^9}, {3.760193726224662*^9, 
   3.760193731011959*^9}, {3.760194763454104*^9, 3.760194797724354*^9}, {
   3.760195052619513*^9, 3.7601950904067793`*^9}, {3.760195140051777*^9, 
   3.760195191434626*^9}, {3.76019530188863*^9, 3.760195306139287*^9}, {
   3.760195379105094*^9, 3.760195379865697*^9}, {3.7601954544735813`*^9, 
   3.760195461877096*^9}, {3.760195548636257*^9, 3.760195560722537*^9}, {
   3.760195644850791*^9, 3.7601956504670067`*^9}, {3.760195715019919*^9, 
   3.76019571664364*^9}, {3.7602289404292517`*^9, 3.7602289778632402`*^9}, {
   3.7602293012863703`*^9, 3.760229318001708*^9}, {3.760231233851493*^9, 
   3.760231244860889*^9}, {3.760231275248008*^9, 3.760231304530704*^9}, {
   3.760231340883648*^9, 3.760231359480624*^9}, {3.760231663368948*^9, 
   3.760231761778689*^9}, {3.760231798806758*^9, 3.760231868625379*^9}, {
   3.760232034376698*^9, 3.7602320536962442`*^9}, {3.760232104469057*^9, 
   3.760232202625416*^9}, {3.7602326001879807`*^9, 3.760232611220429*^9}, {
   3.7602330217420397`*^9, 3.760233107082766*^9}, 3.760233214777938*^9, 
   3.76023325041366*^9, {3.760233395449629*^9, 3.760233398291109*^9}, 
   3.7602338257458982`*^9, {3.76023390166223*^9, 3.7602339233403273`*^9}, {
   3.760235713758239*^9, 3.7602357196761*^9}, {3.7602361706677427`*^9, 
   3.760236172433873*^9}, {3.760236205317773*^9, 3.760236206532155*^9}, {
   3.760236311363817*^9, 3.760236314144167*^9}, {3.760236391842897*^9, 
   3.760236393125551*^9}, {3.760497435137169*^9, 3.7604975544205437`*^9}, {
   3.76050286983044*^9, 3.76050290996631*^9}, {3.7605029400266523`*^9, 
   3.760502940421422*^9}, {3.76050299190031*^9, 3.760502992269438*^9}, {
   3.760503060719717*^9, 3.7605030621814547`*^9}, 3.7605030971323338`*^9, {
   3.7605032713364573`*^9, 3.760503277192334*^9}, 3.7605033125705147`*^9, {
   3.762145047382289*^9, 3.762145123000971*^9}, {3.7621453680680323`*^9, 
   3.762145383025593*^9}, {3.7621454268046827`*^9, 3.7621454521154757`*^9}, {
   3.76214896887669*^9, 3.7621489883431597`*^9}, {3.762149228513151*^9, 
   3.762149242777278*^9}, 3.762149835760147*^9, {3.7621499066265287`*^9, 
   3.762149910097723*^9}, {3.762150058516011*^9, 3.7621500623996077`*^9}, {
   3.7621503917168818`*^9, 3.762150396658319*^9}, 3.762150646321416*^9, {
   3.762150916247822*^9, 3.762150966102374*^9}, {3.762151032728849*^9, 
   3.7621510332023153`*^9}, 3.762151277503982*^9, {3.762151440143034*^9, 
   3.762151443858829*^9}, {3.762151834178965*^9, 3.7621518684212017`*^9}, {
   3.762152188519496*^9, 3.7621521931224213`*^9}, {3.762221964391509*^9, 
   3.762221983950963*^9}, 3.762224947391728*^9, {3.768902421602579*^9, 
   3.768902422722625*^9}},ExpressionUUID->"a503bebb-a38b-4cbd-ab05-\
3e8f496e49af"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ListLinePlot", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Abs", "[", 
            RowBox[{"\[Beta]pu", "[", 
             RowBox[{"i", ",", "10", ",", "0.1", ",", "1", ",", 
              RowBox[{"0.75", 
               RowBox[{"\[Mu]extreme", "[", 
                RowBox[{"1", ",", "1.5389", ",", "1.0"}], "]"}]}], ",", 
              "1.5389", ",", "1.0"}], "]"}], "]"}], "//", "Log"}], ")"}]}]}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "0.1", ",", "5", ",", "0.05"}], "}"}]}], "]"}], 
    "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Abs", "[", 
             RowBox[{"\[Beta]pu", "[", 
              RowBox[{"i", ",", "10", ",", "0.1", ",", "1", ",", 
               RowBox[{"0.75", 
                RowBox[{"\[Mu]extreme", "[", 
                 RowBox[{"1", ",", "1.55", ",", "1.0"}], "]"}]}], ",", "1.55",
                ",", "1.0"}], "]"}], "]"}], "//", "Log"}], ")"}]}]}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0.1", ",", "5", ",", "0.05"}], "}"}]}], "]"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Orange"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Abs", "[", 
             RowBox[{"\[Beta]pu", "[", 
              RowBox[{"i", ",", "10", ",", "0.1", ",", "1", ",", 
               RowBox[{"0.75", 
                RowBox[{"\[Mu]extreme", "[", 
                 RowBox[{"1", ",", "1.60", ",", "1.0"}], "]"}]}], ",", "1.60",
                ",", "1.0"}], "]"}], "]"}], "//", "Log"}], ")"}]}]}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0.1", ",", "5", ",", "0.05"}], "}"}]}], "]"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0.1", ",", "5"}], "}"}], ",", "All"}], "}"}]}], ",", 
   RowBox[{"AxesOrigin", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.7621499400469303`*^9, 3.76214995788577*^9}, 
   3.7621504060089197`*^9, {3.7622220032765512`*^9, 3.7622220122290783`*^9}, {
   3.7622221031923103`*^9, 3.76222211569545*^9}, {3.762222195393902*^9, 
   3.762222207758762*^9}, {3.76222228040239*^9, 3.762222321589086*^9}, {
   3.762222545360361*^9, 3.7622225662647657`*^9}, {3.762222661267963*^9, 
   3.762222670416327*^9}, {3.762222734597642*^9, 3.762222737594122*^9}, {
   3.762222797837229*^9, 3.762222815592383*^9}, {3.762222849560255*^9, 
   3.762222852406355*^9}, {3.762222893602281*^9, 3.762222905160592*^9}, {
   3.762222950977325*^9, 3.762222961387184*^9}, {3.76222299625073*^9, 
   3.762222999671578*^9}, {3.762223037987764*^9, 3.7622230418512907`*^9}, {
   3.762224904821651*^9, 3.7622249348607807`*^9}, {3.7622250160612926`*^9, 
   3.7622250317400637`*^9}, {3.76222509634979*^9, 3.762225099578236*^9}, {
   3.7622251436673393`*^9, 3.762225145665094*^9}, {3.762227582763955*^9, 
   3.76222758619326*^9}, {3.762227627441709*^9, 3.762227630655265*^9}, {
   3.762227665362673*^9, 3.762227668473093*^9}, {3.762227709739233*^9, 
   3.762227712973514*^9}, {3.7622277527423763`*^9, 3.762227754852363*^9}, {
   3.7622277958025208`*^9, 3.76222779893643*^9}, {3.762227836234685*^9, 
   3.7622278435492287`*^9}, {3.763727142453827*^9, 3.763727155313245*^9}, {
   3.763728036764051*^9, 
   3.7637280415554113`*^9}},ExpressionUUID->"aae50cd5-2258-4c0f-aa85-\
2368245654a4"],

Cell[BoxData[
 GraphicsBox[{{{}, {{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.016666666666666666`], AbsoluteThickness[1.6], LineBox[CompressedData["

1:eJw91AtMU2cUB/C+KO0tIC3ImG4zQPZgJZuKSoSMc3yBEyeRxRfRTSWAikzd
poKMgcMhIugcEOxUxkKmZToHPnjIo3UiU1EQQVknKogwKhTBUsqj0EnvuTvJ
zc2Xe87vy/3nu9dj846wSAGPx4t4dU3ef1JNVjmkVQRtDK5ntHN8J+sa+L5b
UbVSLdWyz2/ChpaZClRItDxb3YUnacplzF4x9TeBMjh7Z5JRpI2y1QNQBESn
dB8W0rwOup5pPIo+Emjrb09WK9Qk3u1oFvHJa4Orn4VN41dYNWx/OyzLX9Wo
SxvX2HjfDlh37smb92PHNHds889AfM6r80TkiCbatl8XLE7ac7xou1nDet3g
pe6LXpJsIk8PVa8FzpiWZySvBwIi3jm1sWaAvF4wv7wlXtHxgrw+YFIFDZkf
95LXDxeirIF/lHdTfz+4R7h5B8/uJH8Abi6viIML7TT/EmbXj6T8uKtVw+Zj
BINntKwg/b6Gb/MG4WR2TMPjDXc0bB6DEP+9q3JunIY8EzStKz77e+Ix8oag
b+D22g+OlADrmaFnXOn325kbwHrD0Oiz9osDw/eA9YZh7kv1M/MPOmC9Edh/
dMTg59QGrDcKhe1PBcwnHeSNwennuivJB7rIs0C1j59l+iU9eRa4OJ6Ws+lh
L3njEGh2r7s98oK8CahuODh/x8EB8qxQe7nlKONoBDY/HsoMoaq4zEHq52Gh
5dODCZIhYPPkYYTVmPQg0UzzfIy1nhWuMAzTfnwMkESCevUoeQJsyy59eK58
jDwB/npB7+HpNk6eAEOSDR2NMRPkCbH4iUWUcsVKnhDDWtZfm0jmIfu+IrTs
0q8RevCR9UQ49Uxg2awqPrKeCLv35aZvWyVA1rPDLeHTWjL1AmQ9O1TN39cW
Hy8kT4yprjXVMjsReWIcUpbUvpUhIk+Ma4tUizOd7MizR//GjpyZGXbk2WPq
mm/c20Vi8iRYqIVVe+PE5ElwQUZZZV2XmDwJFixcGFUWak+eFD+3Tj3iftGe
PCnG7lk9o85ZQh6Db4iV7cVbJOQxKMz/1vfSFQl5DH5duntTtVhKngzV22K8
ri+XkifDpoLUKVczpOQ5oNui73SltVLyHDDvlxNeJaNS8hwwuvSvk43vMeQ5
YsTw9P3KlQx5jii/FYiGrxjynDBE5r4z5BhDnhPG/9NvSilkyHNCb08H/qNK
zpuCndo5PqfrOG8KnjfVCOY9YJA9L86ojAga07cyyH7/zpi7qPj1t9sYZP9X
zngq+Hpo6Ku1bVzljJuOGI83P+L2c0bdvJxBLx3nyfFQlrD1/D3Ok6PS4en2
f29xnhxXqmFiwZ+cJ8eCngTTrHLOk2Okd5L/+0Wcp8C/lbsr889wngKX7gsK
sM/nPAVec3iuvqHiPAV6+wd5bcjhPAW6bc3a7JfFeS74c1Fv2OUsznPBx6at
IQtzOc8Flx5q5q/P4/JywQM7mPTw//N1wS8PfxieWcZ5rjgkSYDYV+fiP19+
pJo=
       "]]}}, {}, {}, {}, {}}, {{}, {{}, {}, 
     {RGBColor[1, 0.5, 0], PointSize[0.016666666666666666`], 
      AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJwt1A1Qk3UcB/CNDTbGNvYC8rLxZpaQnlQgHib+f1RgQm9AlITABS6DMcEr
xBPOwJc8iSKluhA5gkQwISR5LWAjSAUEOd4c0gnIYqBCE7Y2eU32/H53zz33
3PP7fX73fO95Ho/4lHCZBY1GS3h2rJ8vFKxXE/EaGt5W7Gej8vVZr3bSkWNt
KlqyVlH3O8mY6WeG+wdsFc1cfeT0A2FsXI0V9g8QMrRzzxZPS9Un5hom0aW5
Z0JbGDg/QhaH8+tDFBaq3tvr9TepuRnYetWHjt44CZBMfB7JpWH/BHG7PqBp
1q4ozbzPJImPjarg3llS9pjnNURctTfbr+up8qB53xRhdfN+bR4yKilvmtRf
371NPWdQUt4MeWn7qw7hYj16j8i+3LzDssB59B6Tu6wtjZfTdejNEYW7p+9E
4ix6OnKsiPdthW4G+3XkxYdny51OTKH/hJTFTNTMSCdxfp7cgq5m0xdjSiqf
BTKY5tVdOahW0s2enkgbTti+4NevpPLQE3120qepQTfRM5Cs9/ldGxNq0fuP
RL1yb+Bs/g+E8oykZ8Flc0S+klCeiRTVXih2a7hNKM9EVIGVe6Z6BwnlPSWq
a23BITBKKG+RFIYw2/LU4+gtEfeNb2VFCzXoLZMHbNeITaFa9JbJsqI1+eiX
D9FbIUnN3E3D7bPorZKxsK92DWXr0Fsj6X2aEM/n5gmVHw3E+VUa9o0F7KcB
aXTvOJ9kIFSeNEik9cpHBEacp4NCMv3ddKMJ99FBm/zn/Y74RfQsYGvQ8qVk
/jJ6FqD2P76q/mMFPQtYrGMVriatoceA0SinfdqvaUB5z66PJnZLDtKBel4m
OGaw6kWBFkB5THjvX2Zpm4QBlMeEJufM8y5GBlCeJaR8HDonHWCiZwllWV6j
1dWW6FlB0++TH/XnWqFnBS+zmQuHk1joWcG7usoDuW+y0WNBQvbr50SbrdFj
Qa1GUbZkyUGPDecSg/zf+IeDHhuEP/YW3euwQY8N3rLP3NovcdGzhoaTjCOz
p3joWYNv7qG+aBkfPQ4clz9fpQ+yRY8DdcYAjxixAD0OGIIqvteeFKBnA+8s
exiO6QXo2cD4mVZvT5kQPS7kBNcwJ4eE6HEhvUWWWBUsQo8LvKSViZwGEXo8
qCh3CEv1FKPHgys7Kk7HFIjR40OGa1hRBMcOPT7o79ZLojPs0OODp/TUjtjH
dujZQp1fZGxajD16tpBD221X0msP1PsiAI+B/TW/kA1Aff8CSJimHVBf2wDU
/0oAnVt/Kl/zcADzeIEA6Hm/TXnlO+A+AYgOaav3Mx3REwJHHnwkL80RPSHE
35IF3phyRE8I4aW8R7MfOqEnhDrLYv/tnU7oCeHt1+7vku90Rk8E+WMnr7Rc
dUZPBG1/rcYZpBL0RNCvtCrZ+40EPRGkX+5JyVyToCcC42zWsDpVip4Y5LKL
nasTUvTE8GTkDl0R4YKeGGwyq+1LOlwwLzEEyKV8hp8remKYj4wb8i93Rc8O
LnpbJxQ6usH/Ou+d0g==
       "]]}}, {}, {}, {}, {}}, {{}, {{}, {}, 
     {RGBColor[1, 0, 0], PointSize[0.016666666666666666`], AbsoluteThickness[
      1.6], LineBox[CompressedData["
1:eJwt1HlQlHUYB/Bd2AV2WZY9ALnkkiKOweQwIup5BqRBlCNw0NDRhAF1SIgo
B7QEY9AYICaJQ4gobiWECLWgYbcEIYTiUJBGToXhUALlWJZ1LfZ9vjPvvH+8
z/N55vfM+762UQlhMVosFiv6/2vrXnxlK79C4NJg4eCQQO7hvpXbMLDgzol7
XV/OPP8T7g2+oW7158lZmvTBRMjxjLZkXaofhGvhCd17hrnyWE2GoFFwOuXi
EQ71j0Bv/fJdU7a2/K+erTyEhR7zwqg2NnkTcMwimGeZy6L6SXjNK98qZEwt
0/Duj+DMaOBI5U2VrFfT/xhyxoKivcuVshOaeTPg1pp5w7ZUIWO8WcgTShre
rlyTMd4cVIDeTcmNFfIW4JMH92Mrep+R9wRqA07pRjxZIm8R9t2BD+XWi+Qt
AYfznTw+fp7qlyCyoL5P7/YM+cuwaW2mdrd8RP3PoL0s78jPy2MyZj/PQeYU
YLy7cVjG1ngrkFpw71D2x30yZh8r0Flc8tQr4Q/yVmEs6NRE/mwZeWtwoMaP
GzvdDIy3DqOwEmo32QWMp4CPfjmw8UXNIDCeAm65dfSfHfsHGG8DLh3SvzXM
nwTGU0JqbrZ9ZfVj8jbBbY+LssF3ljwVODspFjnjC+SpoPTowR1V5/4l7wW0
JkX5BGYvk6eG9XcTRHORz8l7CTFrRa7XHVeB2R8LD/7Ut7tIsUb1LIxQsfjV
nQpg9snC1HAHx8ECJfWzsX4z9bRFrIrmsVG037Em01NNnhbiYnPPJS0WMp4W
+gWnXY6YZyHjaaGHX7hq5wAbGU8bAwZCk4xatJDxtPE3s5IH7HJtZM7LQbvG
s9+uZ3LI42C787WvVxO55HEwVduKv/6+DnlcHG9JzOL66pLHxbxv/o42ctIj
TwftvR12uUh45Ong3GZugL+SR54OeklaQ2Km+OTpYlKyOVzs1idPF885yv3r
mwTk6WEDWxh0v9iAPD2scS08z04XkqeHd090xLvGGZLHwy7hV5cbHEXk8TBd
/VZJV6mIPD46tyVdmBKLyePjQ7usJlWGmDw+NnlXsEyVYvL0cV7XMccjXkKe
Pu7aKOsPnZKQJ0DbnM598RFS8gS4d//n32d1S8kTIDaeDLv6jhF5BtiQGIJ3
mozIM8BpcK+aedWYPCHOdUgSuCXG5Amxrt/hsL2hCXlCnOzSSfZLNyHPEI8O
hZlHr5uQZ4jq/jNBaXHbkHlfRFh4XGetfHwbMt+/CPtEDT/Kwk2R+V+JMKK5
/dPJTlPUtF8RYcdmsSvPx4zmiVBVNFK3s9GMPDHOrXxw3dfenDwxXlo+bJZY
ZE6eGEtdXulKF1iQJ8anExhbnWZBnhgN6i7UdqxYkCdBZWCG5/RJS/IkeH7O
3kd/1JI8Cb4cO9Zq99528iT4WWRlsn/HdvIkaJsSvCPmTSvypJjk+UPVl/VW
5ElxXmYDV22tyZNiQUT+71351rQvKb7wqtur4NiQJ8WQ9ZZabbAhzwj7IpU9
0hQb/A9G4pvJ
       "]]}}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0.1, 5}, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.768902477643077*^9},ExpressionUUID->"0de0d2b6-92f0-46e6-94e2-\
848b5b28d5b6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ListLinePlot", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Abs", "[", 
            RowBox[{"pu", "[", 
             RowBox[{"i", ",", "10", ",", "0.1", ",", "1", ",", 
              RowBox[{"0.75", 
               RowBox[{"\[Mu]extreme", "[", 
                RowBox[{"1", ",", "1.5389", ",", "1.0"}], "]"}]}], ",", 
              "1.5389", ",", "1.0"}], "]"}], "]"}], "//", "Log"}], ")"}]}]}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "0.1", ",", "5", ",", "0.05"}], "}"}]}], "]"}], 
    "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Abs", "[", 
             RowBox[{"pu", "[", 
              RowBox[{"i", ",", "10", ",", "0.1", ",", "1", ",", 
               RowBox[{"0.75", 
                RowBox[{"\[Mu]extreme", "[", 
                 RowBox[{"1", ",", "1.55", ",", "1.0"}], "]"}]}], ",", "1.55",
                ",", "1.0"}], "]"}], "]"}], "//", "Log"}], ")"}]}]}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0.1", ",", "5", ",", "0.05"}], "}"}]}], "]"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Orange"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Abs", "[", 
             RowBox[{"pu", "[", 
              RowBox[{"i", ",", "10", ",", "0.1", ",", "1", ",", 
               RowBox[{"0.75", 
                RowBox[{"\[Mu]extreme", "[", 
                 RowBox[{"1", ",", "1.60", ",", "1.0"}], "]"}]}], ",", "1.60",
                ",", "1.0"}], "]"}], "]"}], "//", "Log"}], ")"}]}]}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0.1", ",", "5", ",", "0.05"}], "}"}]}], "]"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0.1", ",", "5"}], "}"}], ",", "All"}], "}"}]}], ",", 
   RowBox[{"AxesOrigin", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.7621499400469303`*^9, 3.76214995788577*^9}, 
   3.7621504060089197`*^9, {3.7622220032765512`*^9, 3.7622220122290783`*^9}, {
   3.7622221031923103`*^9, 3.76222211569545*^9}, {3.762222195393902*^9, 
   3.762222207758762*^9}, {3.76222228040239*^9, 3.762222321589086*^9}, {
   3.762222545360361*^9, 3.7622225662647657`*^9}, {3.762222661267963*^9, 
   3.762222670416327*^9}, {3.762222734597642*^9, 3.762222737594122*^9}, {
   3.762222797837229*^9, 3.762222815592383*^9}, {3.762222849560255*^9, 
   3.762222852406355*^9}, {3.762222893602281*^9, 3.762222905160592*^9}, {
   3.762222950977325*^9, 3.762222961387184*^9}, {3.76222299625073*^9, 
   3.762222999671578*^9}, {3.762223037987764*^9, 3.7622230418512907`*^9}, {
   3.762224904821651*^9, 3.7622249348607807`*^9}, {3.7622250160612926`*^9, 
   3.7622250317400637`*^9}, {3.76222509634979*^9, 3.762225099578236*^9}, {
   3.7622251436673393`*^9, 3.762225145665094*^9}, {3.762227582763955*^9, 
   3.76222758619326*^9}, {3.762227627441709*^9, 3.762227630655265*^9}, {
   3.762227665362673*^9, 3.762227668473093*^9}, {3.762227709739233*^9, 
   3.762227712973514*^9}, {3.7622277527423763`*^9, 3.762227754852363*^9}, {
   3.7622277958025208`*^9, 3.76222779893643*^9}, {3.762227836234685*^9, 
   3.7622278435492287`*^9}, {3.763727142453827*^9, 3.763727155313245*^9}, {
   3.763728036764051*^9, 3.7637280415554113`*^9}, {3.7689024859497423`*^9, 
   3.768902487762648*^9}},ExpressionUUID->"6b98588f-f740-4a76-b687-\
705ce5d24bf4"],

Cell[BoxData[
 GraphicsBox[{{{}, {{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.016666666666666666`], AbsoluteThickness[1.6], LineBox[CompressedData["

1:eJw91HlMFHcUB/BlL2BZYM+hpWgptbVcEaUctsDvtcqRSpVQCUW5FESuFKmR
CoQ0C7ZgKD1UaBf/WGrQSkuKFUKAUDZBoIJCW5CzoCCwYEVcYGE5drGw86Yv
mUwm897nl983v5nXTmaEn2KzWKyErWv7Xq7crkaizhHf3PvBgvptz+26Q1wr
de1fGZ6p6fedpC/xnl1Q5YyaZaq/yJBLvf4Tnwns7yNUyG2nwvABdZKpBoiy
5/KnKtcOnB8mbi0aRanigrrn/naNkiD+0Jflga2E9sZJQNaN1YyYXkL3T5Cd
Z5QO1m/+Q0y85yTRqnyXbTsnSLdpfoqUVdxKyh+eJqdN62mI/bqAFXXvCXqz
5PhN+xN7Kp+h94RcmfJfe79Oi95TQikjcg0li+jNkf58Sl4fr0NvnoQ2rnuU
ua+gpyWrIYbzXyzrsV9L2ru0Bfsb19BfIHMRO6P9szdwfpG0FeV9tuplJHQ+
S6TM81pE3fNNYmbydOThwWBV2EcsoPPQEWPU9ON0dzOgvWVy7qrGw5PPBtpb
IQ2nuC9UY2ygPT0xb7m1p6qWA7S3Su5wLO1JERe9VZLh0Ff04XEeemvE4mRz
YbMbH711cql+RZhp4KO3QXrP65oOd5mjZyAfdx4q9iqzQM9ASv0rFvjxlugZ
yeq7XPWPuwXobRILjZmzZk6A3gsiHHZ+UFtjBXR+LPhVNz30b4YQ+1mQZ5g5
ku5uDXSeLBgx+tx/edYa583gkVH6db/KBtczg6B87S/5R23RY0PolDCPzRGh
x4aWNGXPq8dE6LFhd5y9urhGhN5WTj6x5r4cMXoc+D21+ycqQoz75YKkQbr4
0nUxelxQhQc4eSyJ0ePCxebU4lAiQY8HIW7Ve2MvStDjwcQr0d5H/5agx4dI
S8UbO+yk6PHBVp5TdeOYFD0+wGDa7NhVKXrm8NuM6LuaESl65jDoEtNrbidD
zwJSHrVoe8Nk6FmAV2DuLmOhDD0LSHKE7LPNMvQsoW3TueT1eRl6lnDona5+
g4McPQE45dd5a0Pk6AmAOvIwbiFTjp4AekaGs1a+l6NnBcl1DwbXmuToWcFm
2ONu/QjjCUHlOL5vSc94Qpj8cy5yUUyhJ4S7I/kyljOFnjUEbVTz3f0p9Kxh
R2KApuQwhZ4NNHFdN/1iKPRsICzd7r2oFMazgbdE1zt4ZxnPFgrj9ken5jCe
LTzNVgTf/pzC8yKCnz1aDwgLKKC/fxGMV+h7qy5QQP+vRDB5zWy+ZevZNK4U
QWDHD5cUBcx6IlCUp4CzgvHEMHzXsW4+j/HE4ML71iDIYTwx+PUFBDacYzwx
aHSj4JHJeGL443JsQnU640mAVRpVeTqZ8STg69c6WZ7IeBLI4l0pzz3BeBJw
dmgdDIxjPAmoapP1+2IZTwqJkaXPM2MZTwqc9b4033jGk0LDAcvg9gQmLykM
eO8qPvh/vlvntM17aewM48ngm4LR6e6t/f0HacqLqw==
       
       "]]}}, {}, {}, {}, {}}, {{}, {{}, {}, 
     {RGBColor[1, 0.5, 0], PointSize[0.016666666666666666`], 
      AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJwt1HswXHcUB/C7y9rFYu+uxXosazWNaAzxGJm0fidar800DRUVaZA0KI1J
FNtYOpU00xC0EprEo2pCIpkxKUaTCLFKPTqToijV0FQQr9ClJBGyae0935k7
9497zufM78y9V3bkeGgsm6Koj/6/Nu8lxZtpJMNnS5Pfu7Wk9vTYTDuxeczi
lWQtqpnnv5Avyz/xvjI3raZ06SM2/vKK7z8Yx/oBwnf4Oqc8dkgdp8sQGaZ3
Wu2268T+ESJs7jgHA6fUPfc3M0r6L6dmNmW2Ecb7m3BriaEgvZ8w9eMk5d6a
bfebD4iO95ggntnJZ3/uHSe/6vonSf9cwe8nRqZIvG7eYzJ7k5d5tG0WvRmS
O3YtY3vBAnqzZM/C0GBZpQa9eSK/eFqVk7aM3hNSZT3tEURW0Fsk/kJtiJb1
FD0NUb9vXFXS8gzrNSRu+7tWj9LW0F8iN1JkItXWdexfJooLD5s1QxuE2c+/
hNsR2Nh+SktYOm+FRN61aqg3p4DZxwqxTzh93GGaAsZbJSXld6Kj7rCA8Z6S
Kx21OeXZbGC8Z2SU8jMTRugB4z0n2c3sE7Nb9NF7TpTFWt+wVX301kh44HhL
VjsHvRdkUq6IKz1vgN466ZTYhvdEc9HbIMrCvnPgykNvg9yr8TkvfslD7yWJ
AP6rY/cN0dMS17t7zY+UGaH3iqjSM0qNk4yB2R8F3X9Gz2T48rGegkNJkj9a
BSbA7JOCFFrjMjlhgv0sWJV+3jp/2xTnsaA+MHFqJM8MPTbMFb89Ge4uQI8N
YsuqF3VlAvTYIFV2Hs7g0ejpQb4XHf9DKo2eHvD9GyuCx2k8rz64BPAs/PcK
0dOHQIqbV9YkRE8fNr71O6NwFqHHgfCd23YoLonQ48ByUPH1Qo45egawHquc
cUo1R88Abud91bDyyBw9A+iiDi6wQsXocSEk+Jqe/09i9LiwpmrKb3SzQI8H
8W9VDx+qsECPB9cH5w2dBZbo8cB7V4vCLssSPUNQKQyUOzSW6BlCY8+uyoQY
K/SMIMr3En2rzwo9IwjL8hu12i1BzwiKemr2VdZJ0DOGhTNbar0drdEzhi8E
7XMTF6zR44Nz74/qcj0b9PhgEZDolJBqgx4fapZZ3wVM2aBnAoFutvw3wm3R
M4Gg1hqQdNmiZwrW1fsjzHzs0DOFwpimIYsbduiZQldV9rLEWoqeGYSpD0jc
c6XomYFzjl/vhxtSfF8E0Hrw8LG4JHtgvn8BsJM59kV/2QPzvxJAQ2Ro3djr
DqBrLxZAX+6Dvk9jHHCeAA6sp3nxix3Qo2Ew/erlq785oEdD1lYvLRjJ0KPh
pNhwYNBPhh4N27pCVCczZOjRoIxdyhA1yNATgsTznfrmJzL0hOBWfSo/4jVH
9ITgU8W5yY5yRE8IuZYJ4rKLjugJYU9TW5Ci1xE9EXA+2+c3xpWjJ4Ig98So
IpCjJ4L97MiPXdPluC8RLKYXHH1YJ0dPBMH/uHer5uTomYN01OAbF7kT/AcF
/nmZ
       "]]}}, {}, {}, {}, {}}, {{}, {{}, {}, 
     {RGBColor[1, 0, 0], PointSize[0.016666666666666666`], AbsoluteThickness[
      1.6], LineBox[CompressedData["
1:eJwt1HtMU3cUB/DS8ijQlt6W90PaAiIbgzHE6aKew2YEYQEfbDAmDmGggISH
Ywyjc4aBOmFOZVFAmbgAGQthwgQFpYCwyXMKBSECAXmoQBDk2fHoRnu+yc39
457zOfmd3HulYXH7I9gsFiv8/2v9npO9nnsguZ94rPC9Wflm9/U8hMORET8U
t7yWa543QZRuUuKU5KWcpc5jyF6wvLg0OUj1nfCtYeFuu3aFPFKdbogpcjx1
eLqO+nshbUuiotk9D9pb19MHiwErRX0zf4PGG4SnFeH1suNdoKkfgndvn778
V+IAqHn3YVjJVHRWnhuGNnX/CLRdaJdn3H4BR9TzxiC141OrmuoJ8l5Cw9u7
N6WXvCbvFTweceZPNc6QNwFaH39xMKRklrxJaHvWUl384zx5U+DvaZIpiVkk
bxoSZWNhTR8pqX4avD4bCD5psUz+DCRnbWoYm1yh/jeQul04eaVmDTT7mYXn
GTN5KV4s1FJ7cxCtOt3t4qqFmn3MQWZPbUeGKRs13jzkyXs9SlfZqPEWIKm0
4dLvIxzUeIuwtfu39Mst2uQtgbdTY218mQ55S3Bpa2e1f7YueUo4eDTEf8t3
euT9CxYVD6KdjnDJWwavXx1Cnf30yVuBxutBNzw9DMhbgaGo+OIoa0PyVsGs
teV0AYdH3hpUeHS8mhvnkaeCWP6LbwI7+KjZHwtHx9mnWu8JqJ6FEcLcyAP5
RqjZJwtXbcyWv9olpH4t5Hq/w/O6K6R5Wii9fjVH5syQx8YdtY5m2jcZ8ti4
M55/YkIsIo+NleMLLj1nReRx0LMsKbp5WUQeB5e7LG3q4sR0Xm10yTdQVQ+L
ydNG1aFbyqpAY/K0sc+n7051izF5Opi5MX2hHkzI08FI8Z2w5nIT8nTRdSx0
T7ejKXm6yHiZdD3PNSVPF7d1FPe8MTIjTw8D04L3cr43I08Pn4WUdJoumZHH
xfk9AU/fOmZOHhcTBs2ncdCcPC5yVl2PBgZYkKePY4GfP4x7ZEGePt700m89
t92SPAP01vMsu/WHJXkGqIwJGr5vb0WeAf6TGu/Wc82KPEPU27fwYI5nTZ4h
+n0Yy2bOWJPHw53dWSdd5q3J42Hkzz5PfKNsyONhiNIjNarfhjw+tlZZJ6Tv
20AeH9nnWd2FjRvIE6CO0eAvjdtsyRPgI8v5CyMltuQJUMWNVmgxEvKMsMbo
pwLGV0KeEWbyZSBJk9D7IsTgrqgrbnIJar5/IS4410yBUoKa/5UQq9a8O/e6
S1Hdni3EBNmfpV/GSmmeEPkJB6aSi6TkMcixvRp3ZkhKHoP7bxgXXLOSkcdg
/wcpK/mfyMhjUMfkrG/5RRl5DJqcKJqsb5KRJ0JDH6fyDo4deSL0s0ipGN1h
R54IBVmmX88k25EnwtYndxXsMjvyRGg7xC8WTdqRJ0ZveD/GfqM9eWJM1V6s
3BxqT54Ye/3dUnbl2NO+xJjRz4QFKezJE+NArrQuXOBAnjEeUoWOHvd2wP8A
eaWNjQ==
       "]]}}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0.1, 5}, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.768902519401846*^9},ExpressionUUID->"8e5c3e66-7ca5-42fe-b45b-\
c6013aa1b749"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Abs", "[", 
             RowBox[{"pu", "[", 
              RowBox[{"i", ",", "20", ",", "0.1", ",", "1", ",", 
               RowBox[{"0.75", 
                RowBox[{"\[Mu]extreme", "[", 
                 RowBox[{"1", ",", "1.5", ",", "0.1800"}], "]"}]}], ",", 
               "1.5", ",", "0.1800"}], "]"}], "]"}], "//", "Log"}], ")"}]}]}],
         "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0.1", ",", "5", ",", "0.05"}], "}"}]}], "]"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Abs", "[", 
             RowBox[{"pu", "[", 
              RowBox[{"i", ",", "20", ",", "0.1", ",", "1", ",", 
               RowBox[{"0.75", 
                RowBox[{"\[Mu]extreme", "[", 
                 RowBox[{"1", ",", "1.5", ",", "0.1950"}], "]"}]}], ",", 
               "1.5", ",", "0.1950"}], "]"}], "]"}], "//", "Log"}], ")"}]}]}],
         "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0.1", ",", "5", ",", "0.05"}], "}"}]}], "]"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Orange"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Abs", "[", 
            RowBox[{"pu", "[", 
             RowBox[{"i", ",", "20", ",", "0.1", ",", "1", ",", 
              RowBox[{"0.75", 
               RowBox[{"\[Mu]extreme", "[", 
                RowBox[{"1", ",", "1.5", ",", "0.1991"}], "]"}]}], ",", "1.5",
               ",", "0.1991"}], "]"}], "]"}], "//", "Log"}], ")"}]}]}], "}"}],
       ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "0.1", ",", "5", ",", "0.05"}], "}"}]}], "]"}], 
    "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0.1", ",", "5"}], "}"}], ",", "All"}], "}"}]}], ",", 
   RowBox[{"AxesOrigin", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.7621499400469303`*^9, 3.76214995788577*^9}, 
   3.7621504060089197`*^9, {3.7622220032765512`*^9, 3.7622220122290783`*^9}, {
   3.7622221031923103`*^9, 3.76222211569545*^9}, {3.762222195393902*^9, 
   3.762222207758762*^9}, {3.76222228040239*^9, 3.762222321589086*^9}, {
   3.762222545360361*^9, 3.7622225662647657`*^9}, {3.762222661267963*^9, 
   3.762222670416327*^9}, {3.762222734597642*^9, 3.762222737594122*^9}, {
   3.762222797837229*^9, 3.762222815592383*^9}, {3.762222849560255*^9, 
   3.762222852406355*^9}, {3.762222893602281*^9, 3.762222905160592*^9}, {
   3.762222950977325*^9, 3.762222961387184*^9}, {3.76222299625073*^9, 
   3.762222999671578*^9}, {3.762223037987764*^9, 3.7622230418512907`*^9}, {
   3.7637270694613237`*^9, 3.7637270833549*^9}, {3.768902812105117*^9, 
   3.768902813738728*^9}},ExpressionUUID->"2fe1be5a-df7a-42e8-ad58-\
197d0edd2925"],

Cell[BoxData[
 GraphicsBox[{{{}, {{}, {}, 
     {RGBColor[1, 0, 0], PointSize[0.016666666666666666`], AbsoluteThickness[
      1.6], LineBox[CompressedData["
1:eJwt1HtMU3cUB/CWZykt9CEPLUiBtoMwhwZUpm7nDJwTEZkoXYgiGUTeE4WJ
LqJr8DVQFBkobAZlkMocsuGUgSwURR0UEIXAtMMACojAoFOwAiKT3vNNbu4f
95zPyT353esalRy604TFYkW/u+bvPxTOpwY8DtrnyLPZ9b4+82mAljs/Hhgu
n9Uwz5sgq6CnxvGoQcMy5j4US/JuKsxeaJj6DvD31bV/fGhYE2NMF2RHR29r
lD2h/kewc/DG+YmETs29lvl0Q3hqumpXq4a8Xrir34dnb1QCU98Hplt9mw+P
t4GR93kK4elPL9V26qDV2N8PCvG1Yzfzn0Cscd4gqDO3aLlZz4DxhqCSu3vd
J6Gj5D2HsAv+t5QH9OSNgPLLr7eN170gbxRWWd24d+zVBHljEMS7H+EjM5Cn
BzG7JKk4cIrq9VD4oD3EM26G/P/gNKxX9qpmqf8FfLa0ykudNwfMfl6CV7/d
pEM7C9lGbwLGlr9lcR6ykdnHBMh2JU7v6DZBxpuEzeMcQ3CPKTLeK9ge4t88
22uGjGcAvejhVE6fOXmvYYfO84i8z4K81/B++VZZV48leVMgKe1OqX3MIW8a
rvy7vWpUZ0XeDPSmpaxQ/c0l7w1cd76sP9FhTd4byHmbrJW38cibhV8rDbFR
Wj55b6HrXH++8o4NeXMwEp8I9vW2yOyPhc9+rh4JjxBQPQsvBrRYXtQJkNkn
C9e2TK0c+EJI/Wxc3SaJW9oppHlsHHm8d8PxUBF5Jqj4diBirE1EngkmB5Ql
xAWLyTPBCxsii2a0YvJMcZ9+U1TZ+gXkmSIs1rxOuLuA3tcMlzywjNy41o48
M/T+JgwDbtmRZ4ZJQ+cylWhPnjmmOuscD9fZk2eO3uWxvMY1DuRZYPDqxKtu
tQ7kWeDzD/gFuR86kmeBqyLVZQ7VjuRZYmuX4/6KFQvJs0R15qA67PpC8jh4
6XacB893EXkcfBSaV//g6iLyOMgfXH67dJmEPCvkRf3ilPGbhDwrbFA1jcd7
O5HHRfCw/35bhRN5XGwtUaaELXEmj4s5qVnTynJn8qzxyklrjPRaTJ419gdL
i766vJg8HnpOWEeoPF3I4+HLhr7ggjIX8nh4pmtQ0iGWksdHValZVtIWKXl8
XLd74NBUrpQ8Gxyuifkpu11Kng3mpkr9PEWu5Nng0Sd7Sqo3u5Jni1W257XK
M67k2eKe/OMwdt+VzosA0zK2ZJwSuCHz/QtwutiCr/zcDZn/lQAz//ku5Npp
NzS2F747l/y9mWvb3GieAD8dylYP27iTJ8QgrzFd+iZ38oSIa0KHpafcyRNi
fM7BgeZWd/KEWJegnozhy8gTYvlHxV2GjTLyRHi24k+H3JMy8kQoZk3n+7XI
yBPhX3MVz4as5eSJcFkiW7w/SE6eCLFoZbfNCTl5Yvyjtzj2d62cPDFyLpVI
ArkK8sRY7HMkTReooH2J0fOwS2NSpoI8MVpYBqkUTQryFqDfS65Oy3kP/wc6
So99
       "]]}}, {}, {}, {}, {}}, {{}, {{}, {}, 
     {RGBColor[1, 0.5, 0], PointSize[0.016666666666666666`], 
      AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJwt1HtMU3cUB/DbAqWUAn3xxra0pTAVJ2A2Nwe/gwwRBQIII0NmBshjQxBc
iLIQXjJdhwouOCxzmYiCZJIh7sGG8gzG8RIUnBXkucEYZeMlBQHZ6D3f5Ob+
cc/5nPxO7r2OMcdD45gURcX+f23eS9Wb+YXk3NkZVRjDaNrlsZlWwvsq7GpS
0noj/fw3su3oWK48TNdI6dNDnNtSA84MzTXS9Y/Ju6Dt3uXzd2O8Pk8IK7J+
RrQ0iv0awrEKl+1x7G/s7tzMING8v98gdbIBvRHyYVDFjuaPagldP0quPYlN
a7XuIXreY5wU9YpOZUw/I136/j/I/J72PPGVMZKgnzdBAq+s+6WcmyS09xeJ
2vvjiDxEi94UeavwwrJXxix606Rkdx/7dP08elpyg7M1aWVuEb1/SFT050fr
xDr0ZonvQpMi2WcF62fJzuESl7ToVfTnSImzV8OzjHXsnydWSzuGVOc3CL2f
BWLm+6tE3U0BQ+8tksLOLvXtPgbQ+1gkDHavdp+GCbT3gqQfYeryBw2A9paI
zfFvu84NGQLt6Uh0R/if6cNG6C0T7jZlc/AwC71lkmuVxVAOGaO3QgoNs/x0
A2z0XpJje6OZrU9N0Fslz3Nq1nP7OOitEVdZQazLQ1P01shNVerNqgdc9NZJ
eaLIW9dkht4r8sbFpnmqzhy9DbJP8eX9umoLoPdHQXGOQadJCA/rKeie24D8
dh7Q+6Tgk8I7Ngd8+NjPgNxiyfYP6vk4jwEHU+QDLe4C9JhQ8UVc1ukqAXpM
uB8SkHZLIkSPCQE/BE4FXhKiZwDXKgzFmRwRegZQlDQuD8oW4XkNwb/80onB
BRF6htDSdTDLO9ESPUOYqZVSlwct0TMC60ltykqwFXpGkFPvHJ/dZoUeC0YU
/YfI29bosaByKqIy6Htr9FjwTVneOw0KG/SMwfjksqy01AY9Y/Ddksad49mi
x4bv7DwOtJ21RY8NkdXxUdINW/TY8Gqh7Cp10g49E6hLPVWT8K8deibASfLN
Dk20R48DllMvGPdG7dHjgJ1K/XPZYQf0ODCd4em/2u+Anil0HOl7vSV4C3qm
QHmPn5nt2IIeFzq8cgYy/cToceFQGMWKaRWjxwW39R6/y0SCnhlk784rsrkr
Qc8M8queFyU7SNEzh+F7E8dmIqXomUOU0t1TpZaiZw66Pk93r6dS9CzA/caj
FhNrR/QsQLp10WE83BHfFx68DCxNeFjsCPT3z4P+6kcFo48dgf5f8aApYi1G
LJSBvl3Ng6n0yU/tQ2U4jwcRPjOaNy/K0OPDa6GauNQeGXp86KzjBnxtIUeP
D13EdW4sSI4eH8ql12+5XJCjx4f8gcOszC45egL4SVVzXcNVoCeAuBMfC90C
FOgJwJ/tmlBUoEBPAGuSKaJrV6AngA21fU0yxwk9Ibjl3I3+3d8JPSH0sHr3
i1VO6AkhVKSdOP/ACfclhO23Yyqt2Er0hFCrKG7+zE+JngiEG1XvOZxVwn8f
JId1
       "]]}}, {}, {}, {}, {}}, {{}, {{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.016666666666666666`], AbsoluteThickness[1.6], LineBox[CompressedData["

1:eJw11HtMU3cUB/C20PKGPnhDSzELiA8YIGOO4e+o4JgRAaeMh0w2JxiajJAJ
iDhdDBIYj7/GFMdgxm2CbMpjPCd2qINgELsVNJT3q6wUGIViKc9J77nf5Ob+
cc/5nPxO7r3un6WeOMdiMBhn31zb91ul22kh4kwfs8Fo5p/7/LfzhMy3POhM
jt2QUs+7yBfmo5HVR3RShiEyUpHXL9jTq5FS9XLSUaCb1/rNSJMMeUl2amKj
AlVj2N9PpudCyLhln7SnezuDJNY75Vr73UfojZKgmz0D+bfqCFU/RtIDU6M7
xDJi4P0niF5ZEPdQoyDPDf2T5JQR55l1+ThJNsxTEvMmpjy6aJpQ3r9E8TU3
cnfULHoqsjLa7Dp1cQE9NTHSvvIbaV1Eb5bcDa9/JtZo0ZsnTmxV7WOhDr0F
8rNEXZ9+SI/1C0Qe/BXvZuIa+hrCOZ/pdyRrA/sXyYX9tvXJRVuE2s8SWT0f
MjzYwwCmwdMSr29lOZI+JlD70JK6Bs/ACgULKG+ZeGavT1cPGwHlvSbnIp/u
ezhmDJSnI5elRt8vTrDRWyGJ7M0tyRQHvRUyHNb9+IDSBD09GbraJr6sNEVv
lYTMTfn4Kc3QWyMnxR/Op0yZo7dOkrbC5ndPWqC3TlRX71dmjluit0FSfz1b
e3zUCr1Nck8bJ64eskZvi/BWJjpzFTZA7Y8BjRXleyUSLtYz4AYn+FKoigvU
PhnwQ4BtX1cSD/uZkOx4e0s1wcN5TLDb8V9TWSIfPRY0fnJKKBvko8cCTW0r
Jz1GgB4L0rrSJtLlAvSMIGTzSeWjcFv0jCAr3GvX/k5bPK8xXK/1VnQTO/SM
oZmpe5HYZIeeMbgkGIv699qjx4bAtBvF7nfs0WND+9MOlaODA3ocOB0VwarK
d0CPA9pdZQcbVh3Q4wA5UPKWR4ojeibwS0t8/NgrR/RMYE0TGvDPYSf0TOGP
T+M+HvnNCT1TcJH8Pb1k54yeKUSwwsr12c7omUEvY1E9NOKMnhlwagaq8g+6
oGcOEZI8f/WPLuiZw3OVh1a14YKeObwT9uWOjBhX9CyAddinN73GFT0LOHpa
t0fOFqJnCQrlifSMGCF6liBfaf0ptFKIniVMfl5XvHNZiJ4VnClPKGEQEXpW
YBN/e7nhugg9a9Bf+ijZs0uEnjWYqr9LeN/MDT1rONafD32hbujZwOvmtqMD
V9zQs4F7x7xm/X53w/eFC/YxtVZdU25Aff9cWAm0CvrLTAzU/4oLbXNDHzSK
xGBoL+WCyCLgQYOvGOdxobJ63Lv9kBg9HlRVhMUOR4nR4wFDXhple4b2eNAV
vVSfmkJ7PODdKbjCuEB7PHDvLClTZNMeH6YKJZP212iPDxdTXh6X5dIeH9Td
OUEe39AeH2RKm7j3CmmPDyEnX1j4FtGeANRW93vfLqI9ASwrs2YSC2lPAOVl
DvqZNx61LwG8K13y1eXRngCEI/UZNbm0ZwuuwcX5ITli+B+1tJn4
       
       "]]}}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0.1, 5}, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.768902792691143*^9, 
  3.768902844220233*^9},ExpressionUUID->"af5c6bbc-bdeb-4e88-be98-\
fde1542a5873"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Abs", "[", 
             RowBox[{"\[Beta]pu", "[", 
              RowBox[{"i", ",", "20", ",", "0.1", ",", "1", ",", 
               RowBox[{"0.75", 
                RowBox[{"\[Mu]extreme", "[", 
                 RowBox[{"1", ",", "1.5", ",", "0.1800"}], "]"}]}], ",", 
               "1.5", ",", "0.1800"}], "]"}], "]"}], "//", "Log"}], ")"}]}]}],
         "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0.1", ",", "5", ",", "0.05"}], "}"}]}], "]"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Abs", "[", 
             RowBox[{"\[Beta]pu", "[", 
              RowBox[{"i", ",", "20", ",", "0.1", ",", "1", ",", 
               RowBox[{"0.75", 
                RowBox[{"\[Mu]extreme", "[", 
                 RowBox[{"1", ",", "1.5", ",", "0.1950"}], "]"}]}], ",", 
               "1.5", ",", "0.1950"}], "]"}], "]"}], "//", "Log"}], ")"}]}]}],
         "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0.1", ",", "5", ",", "0.05"}], "}"}]}], "]"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Orange"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Abs", "[", 
            RowBox[{"\[Beta]pu", "[", 
             RowBox[{"i", ",", "20", ",", "0.1", ",", "1", ",", 
              RowBox[{"0.75", 
               RowBox[{"\[Mu]extreme", "[", 
                RowBox[{"1", ",", "1.5", ",", "0.1991"}], "]"}]}], ",", "1.5",
               ",", "0.1991"}], "]"}], "]"}], "//", "Log"}], ")"}]}]}], "}"}],
       ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "0.1", ",", "5", ",", "0.05"}], "}"}]}], "]"}], 
    "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0.1", ",", "5"}], "}"}], ",", "All"}], "}"}]}], ",", 
   RowBox[{"AxesOrigin", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.7621499400469303`*^9, 3.76214995788577*^9}, 
   3.7621504060089197`*^9, {3.7622220032765512`*^9, 3.7622220122290783`*^9}, {
   3.7622221031923103`*^9, 3.76222211569545*^9}, {3.762222195393902*^9, 
   3.762222207758762*^9}, {3.76222228040239*^9, 3.762222321589086*^9}, {
   3.762222545360361*^9, 3.7622225662647657`*^9}, {3.762222661267963*^9, 
   3.762222670416327*^9}, {3.762222734597642*^9, 3.762222737594122*^9}, {
   3.762222797837229*^9, 3.762222815592383*^9}, {3.762222849560255*^9, 
   3.762222852406355*^9}, {3.762222893602281*^9, 3.762222905160592*^9}, {
   3.762222950977325*^9, 3.762222961387184*^9}, {3.76222299625073*^9, 
   3.762222999671578*^9}, {3.762223037987764*^9, 3.7622230418512907`*^9}, {
   3.7637270694613237`*^9, 3.7637270833549*^9}, {3.768902812105117*^9, 
   3.768902813738728*^9}, {3.768902866483391*^9, 
   3.768902871128357*^9}},ExpressionUUID->"f06fee74-c5d0-40e0-97e6-\
3e690aa09e85"],

Cell[BoxData[
 GraphicsBox[{{{}, {{}, {}, 
     {RGBColor[1, 0, 0], PointSize[0.016666666666666666`], AbsoluteThickness[
      1.6], LineBox[CompressedData["
1:eJwt1AtMU2cUAOBLaQuFtvTF+yVsEwYDOgsiy/Q/m5E5KkaYCA5kE+lQERCB
kAUYmxl2mowJI2OMGZkGyLInj7GRoa1hvHSogzkmFGgRGK9CeRR5FBz0npP8
ubn/Pec7uSf/vV5JGdEKBkVRp7bW9vWriu1oJrqgli6HAkd1sGw7Wol6pLzq
tpeDmn7eRTL6fKV3yyVqyhwPSciKff2noWLM7yWPQrkaOVukfs8c/xDVCXee
+7oA6x+Thuv5chlPoL7/53ZoSHC7IjcrlY+elkieS4ySDXMxX0fevvZju126
rdrMy54QuyxF8RGRjbrbXD9K/hps/Ka8w1qdYu43TqRU95GiK1boTRD9cFtd
bhwbvUkyVwo3EoJY6E2TubramKs8JnozZGOQ+fUf8wz0Zkm25v2js/0W6BmI
MEkQGdpJYb6BVC4amsYzn6lof55UF+X9HHR8Q0XXLxB9GW/gzIF1FT2fRTJk
KnfThqyqLMzeEok93sGk/J6q6HkskZmJGWG0lxE9Iykdr3PKdl1Eb5nk7STn
JU7z6D0l1ft8dmoCZtFbIYYdWtPloCn0Vsivj4PzO4LH0Vsla6uS13ftHUFv
jZyp9Tndf1WD3jp5cCIvZd/3f6NnIuGH8/3vlHeht3X/0aseb7Q0oLdB5G1Z
L1QcqyW0t0lUb/n7Tn7cRmjvGVG+ckib+WUPoedHQe3lvKrEtH7Mp6CitF+q
3aEj9DwpuNUXXs+xHcN6C0ifOyY7ZZwgdD8LmE/2CXfRzqDHgOTQnvPfKgzo
MUB5cPBmSfwCegyIUDRfGIpaQs8Saky5F0sOLqNnCV0NezSVZIXQ78uEwsL4
HK/QNfSYoPQsXTMFmtBjwgeaSs8In030WBAZFx24aUcB7bGgNSfN/hOuBdAe
G6iy7JN7OQygPTaE5f32kjvbEmiPDQMDU5E+lkygPSuwuPdg5ijFQs8K6qWp
ETc3WOhZQ2NNRqRgnY2eNTi2thdUrlihZw0fTnKKXlu2Ro8DhbqlENMiBz0O
6D1e1tybt0HPBsbS7nr/NGeL3ta+Qq67oeeiZwNKZsN89TQPPVu4s/uX/KZJ
Pnq2ENA8tKf3Pzv0uKBhxMebLgjQ40JNj/SQZEGAHhce/e622ztTiB4PGmPj
RDEGIXo8IHPOpvQMEXp8uHTRbX/5rAg9PvQZP0u/nyZGjw8tvbsO6GfE6NmB
Z6Dy8xfPSdCzg7KwxIK4aQnQ50UA18XLjIqz9kB//wKojU5w8p2yB/p/JYD2
tnevjZ52AHN5hQAO+4UJWRMO2E8A+4bPyqNSHNETbp0v/8accUf0hCBTLvbc
UjihJ4SioIgu8ZgTekKQjlZOvpnsjJ4QbK+UfJf6xBk9EWhTOwOqklzQE8G/
/P1+ep0LeiIA/g/dkSdd0ROB/VjU8+e0ruiJIFh+u6niHTf0xOD1sLR7ZMgN
PTG0JnwRwk90R08MxpzYaemgO85LDCz74uKYBA/0xKB2G9vsHPBATwLexuR6
Ybwn/A9jtZ42
       "]]}}, {}, {}, {}, {}}, {{}, {{}, {}, 
     {RGBColor[1, 0.5, 0], PointSize[0.016666666666666666`], 
      AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJwt1HswXHcUB/DdteyDXfvEeiSpNG1FSmqVJjHzO4K0yZBK/CHIFFE0EdGI
0Wy0EiKNZ7uDSSvNoxoJIxq0YYhkdqdM0xBGZEWomBiUDbIbLBZZZe85M3fu
/Oae7+c3vzP33neOpByMZ9BotLi1a/1+uWy9msn3m2SBP+6zV3vL16uV7JuS
ZrrOSdXU80fkSbQiPfSERE0zVzcRLDq7aQVi7H9KuvYPed4ZFqoTzPWMsLya
5NznAsz3k5DtwcrGZ7bqrsfrNUiiup1q2t346L0ksqhCV//rNtg/TJpEvQ8u
eVqrzbx8hETOmlY29nLUneb8KFGa9hdcLGCrE837/UcU7zEun/qchd4EMfhp
5Hs2WKGnJfqge7U6AxO9SeJ/8qfKTo0FelNkZ+7x9OJmBnqvydDhB0avG3T0
9EQrLi97rqRh/9p6V5Ln7xarKsp/Q7Jm28oCJldUVH6G0LdoFKV9SypqPrPE
pPzBYerhoopu9uaIMSvx3ZaWeRU1jzliZx2bqfxjDj0D8fjCdFRSM4PePJnw
a7vPrNKjt0Bus2sd44On0Vsk9Pzk28ZgLXqLxH2QV11xYAw9IzFs5hdHRw6j
t0RoEYyQ2K4B9JbJN/G5qUf1PeitkMmGhIvHff5Gb4UwjTAao6hG7y15fSTq
N0ZnPaE8E6neqU9yDv+HUN4q6WzI0QT3PyXU/GgwfsU9ZvO3/2I/DeCQMXws
b5hQ86RBctAlqSR0DPN0GEyer6sRaAm1Hx3c/aRuAx1T6DEg27akXAd69Bhg
cvdILpHNoMcAh0Z5iEw/i54FnDpru6mnzYCeBWwtyfd1/HmBUOdlAi81LDXs
mBE9JuictpWP71pGjwlX6s5W+fPeomcJgVl1cQ+HTOhZQpo25NeUQzSgPCvw
vl+VofOnA+VZwV9Bd1z52xhAeVZQ22ARMm1nAZTHguwYnewmgwmUxwJTzcup
gzomemx4VPnlV8uDluixwa2zo7C+wwo9NnwduVua2sJCjwMjYTpvqGGjx4Hc
z/J6pNc46HHhWuCrvldKLnpcqMr5KOBujjV6XNiboEhIVNigZw2c7ZVywwke
etaQNtc2fCCej54NWOtN+ccO26JnA0VFqymOWwXo2UCST3d96C0BejxoPpm1
1O0qRI8HuwvvFZRcF6LHh8W7jwNKnEXo8WHmQtxoe5kIPT64jZzp8rYXo2cL
V89X6DpKxejZQkbR+I1MkQSo90UAHr3yHeFKCVDfvwBGSiuyMvhSoP5XAmiZ
WPA0FErBHC8TgM2Wrmgd1w73E4BW1e/yQZ4dekIoelH/cRnLHj0h9FQ7MHQX
7NETgqYpIjiT6YCeEM6d+bSVc94BPSH46xvT6+gy9ERwMzjmz6RzMvREwNyg
UTquytBbO/feiE/6v3NETwReiifaWyuO6InAN9mnvSTDCT0xXN1x+sPEJSf0
xDCwp3x57rQzemJ4Edvnq1lwxnmJofiXtqaxdBf01vLZ70+3GlzQk0Csb5j9
m7QN8D/DuaUB
       "]]}}, {}, {}, {}, {}}, {{}, {{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.016666666666666666`], AbsoluteThickness[1.6], LineBox[CompressedData["

1:eJw11HtMU3cUB/C2lLaUUnpvecSMMBU32AQTQeKIwO8ER7aIMkEpDuQxKqIy
ITKUTR6CGomOx1QyKcZp5aE8BhJeIlvaDZgYHlMeI0QYIB0PBcabggU3ek+/
yc39457zOfmd3Hu3RMT6R3JYLJb8/2vjnqfYSD057bBZUO9urd7lspFG8mVw
/GLBmKWaef6MfBer7l2MsFCz9HlOjP9MEch4UqzvIrLQKGVxL6U+rs9fhFNa
NXWmQ4L9fSQhYcXXuclc3dG2kX7itH2btNtajN4Q0R5zfvxbpgjrh0nbnJd7
sq2pWs+7jJCXR1WJoU0m6nZ9v4ZojmQfphMF6ij9vFGyHH3QHwgfvXFyuV7k
4iPmoTdBPE9Wf2s3ykXvDakfLDj9YbMRepNkzLlOaVzCQW+a7Ai0Ka++yUZv
hozbvecUnMbC+hmiPFugu6lZVzH+LInxKXn5T6tOxfTPEdZ5s+CmulUVs595
kjqc6xf3QKti670FsvX7VG5A3pKK2ccCkXzeeXcqewG9RWL/q4Nnd/ocekuk
hFYUVKXNoLdMlk/sepS5Oomelpzy87F5uDCOnpbE7aWpkFkNeivkXNQBRdTM
EHqrpEoeWG870ofeW+La6vHHkYkX6OmId2FyhnK0ET0diY7/MfcW/x56ayRd
FrTPsq6OMN46WStX5vhVthLGe0dq5nJ5V1Q9hNkfC7Kd5ErO/QGsZ0Fne0FN
l+oVYfbJgjXv0Iyl0lHsZ8PBo81DyzmvCTOPDb8Uu+Znnp9GjwMRT12iLHbM
oseBLyyeiR7azKPHAd+4wgulgkX0jOC293ROx+wSekYQc/FS3uNeLWHOy4Wf
aEUQ/8kqelyIPvRkZ2CuDj0uLKv/PflJ3Dp6xlAtsLX62Y4FjGcMLRVJbbdN
2cB4PFhvyVxrmGED4/HAKck+qbuTA4zHg8b7m7xqK42A8fhwXVFU4ZjJRY8P
e4SJcnGkMXoCaJjIf+DgxkNPAIm66y1+Jnz0BKD5+IJrSA8fPROYtu96/sEd
AXom4HelaH9yuAl6QtDo3oXB+0L0hDC84j7s0SdETwiVtT0esixT9ExhX9kB
ZYCnCD1T6Pt7wF8yIUJPBG/nc0ZkWWboiWDSOtJr0UmMngjEM4esGp6K0TMD
rrzELjrYHD0zkPfv1PSMm6MnBhtxq7x/twQ9MWxPEQfNJkjQE0Ps12yPa9US
9Mxh037Xz36YkqBnDu2D98bHtlLAvC8ScHvjIEw5TAHz/UtAanQjjlykgPlf
SeBOjEvGljIK9O0KCYQWDwdt7qRwngTiX7sH7V4weBSc7RRUnKFp9Ciwcyu9
O+BIo0dBLYQey9lLo0fBp31ZKzUyGj0KIrfku546TqNHw1SZb/OrOINHg/TE
tryAJINHg9Yx7Rv2JYNHw+/htx59lG7waCjZY2VhfdXgSWG1vKvQ6qrBk4Lo
q+gX59INnhTC2oqmr12mcV9SuEGFheenGjwphPgNTlgmGTwLCDbLMfdMoOE/
cvydPg==
       "]]}}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0.1, 5}, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.76890290532967*^9},ExpressionUUID->"f5affb76-b683-403b-affe-85bef254bdc6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Reduce", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"q", "\[LessEqual]", 
     RowBox[{
      RowBox[{"us", "^", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"\[Theta]", "/", "2"}], "-", "z"}], ")"}]}], 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"1", "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"us", "/", "uh"}], ")"}], "^", 
          RowBox[{"(", 
           RowBox[{"2", "+", "z", "-", "\[Theta]"}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"\[Mu]", "^", "2"}], 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"z", "-", "\[Theta]"}], ")"}], "/", "2"}], "/", 
           RowBox[{"(", 
            RowBox[{"2", "-", "\[Theta]"}], ")"}]}], " ", 
          RowBox[{
           RowBox[{"us", "^", 
            RowBox[{"(", 
             RowBox[{"2", 
              RowBox[{"(", 
               RowBox[{"z", "-", "\[Theta]", "+", "1"}], ")"}]}], ")"}]}], 
           "/", 
           RowBox[{"uh", "^", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", "z"}], "-", 
              RowBox[{"2", "\[Theta]"}]}], ")"}]}]}], 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"us", "/", "uh"}], ")"}], "^", 
             RowBox[{"(", 
              RowBox[{"\[Theta]", "-", "z"}], ")"}]}]}], ")"}]}]}], "]"}], 
       "/", 
       RowBox[{"(", 
        RowBox[{"\[Mu]", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"us", "/", "uh"}], ")"}], "^", 
            RowBox[{"(", 
             RowBox[{"z", "-", "\[Theta]"}], ")"}]}]}], ")"}]}], ")"}]}]}]}], 
    "&&", 
    RowBox[{"0", "<", "us", "\[LessEqual]", "uh"}], "&&", 
    RowBox[{"uh", ">", "0"}], "&&", 
    RowBox[{"0", "\[LessEqual]", "\[Theta]", "<", "2"}], "&&", 
    RowBox[{"z", "\[GreaterEqual]", 
     RowBox[{"1", "+", 
      RowBox[{"\[Theta]", "/", "2"}]}]}], "&&", 
    RowBox[{"\[Mu]", "\[LessEqual]", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Sqrt", "[", 
         RowBox[{"2", 
          RowBox[{"(", 
           RowBox[{"2", "-", "\[Theta]"}], ")"}], 
          RowBox[{"(", 
           RowBox[{"2", "+", "z", "-", "\[Theta]"}], ")"}]}], "]"}], "/", 
        "uh"}], "/", 
       RowBox[{"(", 
        RowBox[{"z", "-", "\[Theta]"}], ")"}]}], 
      RowBox[{"Exp", "[", 
       RowBox[{"-", 
        RowBox[{"Sqrt", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"z", "-", "1", "+", 
             RowBox[{"\[Theta]", "/", "2"}]}], ")"}], "/", "2"}], "/", 
          RowBox[{"(", 
           RowBox[{"2", "-", "\[Theta]"}], ")"}]}], "]"}]}], "]"}]}]}]}], ",", 
   RowBox[{"{", 
    RowBox[{
    "uh", ",", "us", ",", "\[Mu]", ",", "q", ",", "\[Theta]", ",", "z"}], 
    "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.768903188511139*^9, 
  3.768903344615046*^9}},ExpressionUUID->"bc9b9b44-0b5e-462b-ac57-\
0ad284fefca8"],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{
  3.768903472480154*^9},ExpressionUUID->"2fdef87c-f07c-4a61-b6ad-\
02e8c46e2eec"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"q", "\[Equal]", 
    RowBox[{
     RowBox[{"us", "^", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"\[Theta]", "/", "2"}], "-", "z"}], ")"}]}], 
     RowBox[{
      RowBox[{"Sqrt", "[", 
       RowBox[{"1", "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"us", "/", "uh"}], ")"}], "^", 
         RowBox[{"(", 
          RowBox[{"2", "+", "z", "-", "\[Theta]"}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"\[Mu]", "^", "2"}], 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"z", "-", "\[Theta]"}], ")"}], "/", "2"}], "/", 
          RowBox[{"(", 
           RowBox[{"2", "-", "\[Theta]"}], ")"}]}], " ", 
         RowBox[{
          RowBox[{"us", "^", 
           RowBox[{"(", 
            RowBox[{"2", 
             RowBox[{"(", 
              RowBox[{"z", "-", "\[Theta]", "+", "1"}], ")"}]}], ")"}]}], "/", 
          RowBox[{"uh", "^", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", "z"}], "-", 
             RowBox[{"2", "\[Theta]"}]}], ")"}]}]}], 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"us", "/", "uh"}], ")"}], "^", 
            RowBox[{"(", 
             RowBox[{"\[Theta]", "-", "z"}], ")"}]}]}], ")"}]}]}], "]"}], "/", 
      RowBox[{"(", 
       RowBox[{"\[Mu]", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"us", "/", "uh"}], ")"}], "^", 
           RowBox[{"(", 
            RowBox[{"z", "-", "\[Theta]"}], ")"}]}]}], ")"}]}], ")"}]}]}]}], 
   ",", "z"}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.768903476633127*^9, 
  3.768903494291646*^9}},ExpressionUUID->"dd928539-22f7-4d7b-b65d-\
3ed85301bfa2"],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{
  3.768903977679831*^9},ExpressionUUID->"11c2f78f-7fc4-4f73-8151-\
de72407e3dd0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"qcrit", "[", 
     RowBox[{"1", ",", "0.1", ",", 
      RowBox[{"0.75", 
       RowBox[{"\[Mu]extreme", "[", 
        RowBox[{"0.1", ",", "z", ",", "\[Theta]"}], "]"}]}], ",", "z", ",", 
      "\[Theta]"}], "]"}], "//", "Abs"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", "0", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"z", ",", "1", ",", "10"}], "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\[Theta]", ",", "z", ",", "qc"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.768904160744397*^9, 3.7689041970351753`*^9}, {
  3.768904297730158*^9, 
  3.768904298778366*^9}},ExpressionUUID->"ce1f2b89-c298-44de-a7f7-\
4786799c1f34"],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJyUvXlUTd8b+H+bR83zoME1RDKnkH2QuJkzZiwJpZshM5F5SnRJVAilSCKa
jJWxNNBA3GiQRs1zt1vf3r49z/l87113/dbPP9Z6rb32Pee193723s/Z52Sy
fquDqziDwTgqx2BI9P1/a0VUwmnzY1N3ZV18wGA0kEQ7pbXS84qJu8XUa4NZ
qQT4tnWTGXvGFpEHld97mawc5BluzTrz7v0kzGca4xLYXOSsVao1q19zSda7
oU+YrFLkG8NGZnrbfCdnLd5lsLnlyCOm8fSYCfnELnB9eTy7Bnnw0UDrp/Kf
ybqnWb5MVhPyPP+1AXn788nLzdd1WZwW5L+9l2UENBcTfUOPu2xuG/KWcZEl
VTcqyb4vk8ZxmJ3I0212HF45p4l8OyGXHM/mIY8/VTd5/c8eMmFSwVxuPB/5
tNebrcwVNSiD00cv1vb2kpPBT1sd+ri0nd4lm9UaFPjU6xo7ZDCri9Rs2XBC
d0EZ+gT+8cae7ZFyZegTuJK6o/SamN/oE+vZu33oTMvf6BP4qdUnO8POl6JP
4MPqbIcaBJagT+Cmn5bOb9UoJmKM//41ILexKLxT+vMHegYeNeZb24wHGegZ
+HCX4zPEtLjoGbjnUtsT6vwq9AzcfkyNhv7INvQM/IluqZyngRQFnoGDT/As
yMFzMac6m8kSp0Zz7Gb8VKlEz8DvjHVUejCwEj0DZ5dkLHw7rBI9A199MPLl
khGV6Bn4hxV8h01GlegZuBrP5HNWewV6Bn6j5mieblAFegYulT3ejmSUo2fg
x1fvuv+iqww9A1/2aFqw13C6PyM3WetvsYuLnvF6qmwzz9c1o2fgngdUX0ln
SaNn4IKeBTl4fhL5XDGBLUN5m2z/qLOkBj0DV3A94KF7uwY9Azdu3Veo01mD
noGvrI2s5Tr+Rc/AdwxQOX767V/0DPzLgoe7QybWomfgruaX5zlH16Jn4KPt
4tzHatahZ+AxdVfCb5E69Ax88cjjxx2u1qJn4DUVlfysdLo/A5+1cuB6493F
6Bn4VU/5XQO9JNAzcEHPghw8n3zly2JxFCnF5q59PyfWoWfgzly5aSMT6tAz
8AmyT907ZtWjZ+C9c0/e+15bj56Bf7VcuSJiWQN6Bu5Qefx19bsG9Aw8K1km
pHhWI3oGfvrdAteDRY3oGXjllZK3+b5N6Bl4XMadywunN6Nn4FqxTuEGj5vR
M/DlZl2fI0oa0TPw6Mq/Ptl5bRifgQt6FuTg2bza4g2bq0KdG2e/9sCWBvQM
PGhr92uz1w3oGbj8fclrFwY2omfgk7ZZWi33bUTPwMOjdnNlFJvQM/D3yvkT
199uQs/A78dFLqlc2oyegde6T00KGtWCnoHvVbku8WZyK3oGzvHUubn+TBt6
Br5lrmr8zYEd6Bn49c9j1K76d6Jn4BkdPpEP3zSjZ+CCngU5eNbcFVgSz1an
Pi2JPuBwqxE9A2dINM8fId2EnoFzctwc5PY1oWfg9xdd443gN6Fn4B9/rR1e
f6UZPQOvXN+zetHcFvQMPIYRxMgc3Iqegf8x2BjydlQbegbuceaDTtvBdvQM
/MoBtzcRwzvRM/D3dotfTdrIQ8/Ahw25b3vQqQc9Ay/wzyqetJCBcQO4oGdB
Dp57ev/7p0ktiV85siq1CT0DN7roUC45sRk9Ay/Lbr+h+bwZPQNPLqmJy3Ro
Qc/A18oOYQ+VaEXPwFNeSy+UzG1Fz8DVy1nUhIw29AxcLFKfM5Pfjp6Bd1wp
+PDhYCd6Bj5iS4J95lYeega++JP2JpZ2D3rGegIW+nxrYVDgGXjYQvHxVDQd
n4Ef39J7aqaKNHoGLui54uzmgSyODjXmU4RRRW4zegZuPCtGqmxpC3oGfkSW
fcy3qgU9A7f/4H+4hdOKnoHn250bH7S8DT0Dd5lrG6dN2tEz8NHXT1TYL+lA
z8C3zlx/ck1EJ3oGfm3o4DGXFvHQM/C3SspFDG8+egZ+IHahQuUkBgWegVsd
Xb0k0F0cPQNXqt4f1lBPr+uATxQ/4SKbIo6egQt6/qz5ZQqHqU8lDPnlWvW1
BT0DV9jncz7OtRU9A89zbj7yQqYNPQOXOHv0jFtKG3oGnl6uOurR1Xb0DNy+
fNurjIAO9Ay8dYLOhxNvO9EzcOP7ro/WW/LQM/A9KzOiv0rz0TNwz9nhD9Nd
etEz8Pub40M4C8XQM/CwAu1KEi+BnoEvOreOVx8vg56BF1UH5cjXKqJn4IKe
k0KtV3HjDalig4iPFZmt6Bn49rF1SeGb29Az8J1TjzYq67SjZ+BTHS6NLC1u
R8/As6bEPjuQ1oGegY/Y82dO9I9O9Ay8YV1Rg4oJDz0DP907MG5zTDd6Bj6r
Z0yi1p0e9Aw8VnyB2d0rDAo8A8+wP7FOZ4k4egZ+PfxLWGeFJHoG/lcss7ph
mhx6Bn5ySMyEmT9U0DNwQc9f/vk3pgYeWhO35VkbegbubXDK0sWpHT0DP3X6
dbSTQQd6Bq4SN0d9S3MHegY+yKJmrd3fTvQMfK7E5ZfzVHjoGfjrEd/GFHt0
o2fg8kfDk35r9qBn4CyJkaunaTIo8Ay84Ih2/q6tYugZ+I3tAazNLAn0DHzz
453zp8hIo2fgJy838bdFyaNn4Or1qWOuO6qhZ+CCnu1WSWXEs02onf4LTzy6
3o6egQ9YGDxl5vwO9Ax82Z+MksFanegZuDUvc1NoVyd6Bp52qjrlmzgPPQOf
Yen26p5VN3oGbizxQW3UfT56Bp4kfzrJyaMXPQM/fflMh/xn2jNwjeAHQcyp
4ugZOOFMXlgxVhI9A894/PdbhbYMegY+62rgyh89CugZ+DmrzpLXB9TRM3BB
z8//9XNTan9dBiNxbwd6Bu7jmznaZVwnegaeo8jyvSDdhZ6BmzCIZ1Z7F3oG
bm/7Ruy6Ujd6Bm5z7pX50qV89Ax88r4NA5J/9KBn4FGmOhXslQwKPAPXdo5x
VTgmhp6B6055MEhOUgI9A2fY7P9poyaFnoG/tz4zdYmBLHoGTgZUG5+bNgA9
Axdc1wly8DymnF3d2zuIClR/ZrVibid6Rh5mvChMpQs9I7/5fMPVOtoz8BB2
+yDpvzz0DPwpa9/3ZBU+egb+pbeh/OqmHvQMXO4cs6RvgYSegcdVR8bu7qA9
A7d3dV8wfJQ4egZu+GW/56hU2jNwfrxH8oNK2jPwmI8buky05NAz8DfrpL94
7lZCz8AFPQvysDljvLjxtWR2mXMVh9lKCppHz0oLyiOjV26y4zAbkeuMaDly
TeIJcblMLrG5PcgF66lVlnRJYPeSC7cKxysu+Y31AL+anLS9VKGE+ClZ5saz
m5GH3gxI5I3/Rv6mSjpx41uRV11tU6pJ5pLUhxytpZ97kMPvQv3phovr2Ny+
8e8edzxgWzXWD3yAR9LAGcOriP2e3L+9ve3IdTbvqhz1kov3BRzqh3pCxjFH
MBjyVLOsF++kcSNeJ/ApzYdz1w1txPqB381LN03LqiORI27vY7K6kCd/k0tJ
mViFvwscfhfq38pq3cRhKlN73B38Zvq3Yv3AtRwOvvq6tw3rB+7GqLnZ3NyM
9QOH+qGe0FEuDhymGrXtubZ+Ul88h3qAT7PdeS9Nho/1AId6oPzZZ5+2ceM1
KP8Xwap/xotR0sXbpFmcbuQ6+WPn7vvGoKAe4FAPlN8xc/wFJkubCj5iMGrj
HmksD1yw/OrPIdFsri61sXPpAatIOSwPHMoDt/0Xzw2EuMW/cTFQiPtabTnO
TDMW4oxDN9VZaqZUQ4zMs6fFUsh3v8m9zV5Fj68/SdIZQ1ixOF4eEvOoRXKl
BOIb8OZ006ONpJTAOIJ8+9ezjHB18h7HEXDJX577xBSysJ9DPSNKvszdP+A7
9hPgW8+Fr2k/3oDtC/xiqlSJkREP2xfqF4wbguMdygvmpSG+wTi9IiO9SKIy
GscLjK+b2be+xf4pw98VzLtCPITySapDXdw3/yRwPYLjFOoRzCvC9cD4stvu
9UzcuhH3y8BX2D9wGfWoHP1A3qzJvO1WR145/q7gOIXfFcyzQbvAuFug+GXN
990tuD4H/vJT4bGlYq24DwJe0vytmKnXhtcJPOesxLWsGW0E+j9wu/N/7I0O
yWB7CY53uE7BPBW0C4zrtv1TQ6JyOvB6gJPdzG1fuJ34u8Alvm77vq62Fv0I
xgf4XcG8DfRPiAOJ81XWtKyj8xjA7+5dHatqTOcxgM8gl8x6x4pjHIB8RcaG
7S/XDZJED4JxBq5HML8B7Q5xxip//Id3pvR+E/jQ7KiQ62WS+Luwf9/m6G8+
bYos/q5gvILfFdzvQ3lR8Upw3wrlRcUxwf0XlBcV3wT3EVBeVNyD9fBle2JT
uUEZy0M8FCwP67rRJlNNZ55Qx3gIcXJm4jK95VQnxkPgzhcild1+d2C/Eoyr
UL/gegbqhzi2WLor7khREVGbNPvV6FMtGMdc3NRDgi/Tz5WAr4oNq5p6ohr7
IfDr1m610twWjGMQr/LC5wT7aOdiPhPGXcrc4JKf1wqQw7iY4Tvio8kRHoHr
hOvPVjmsHBhF51Xgd7OCD419vSgbxx2M31tHCtx7fjGwH8L40l1ONW7m0c8F
oB+am9/vumr2HTn0t0VSHXVHpeSo/dO84uP74vWYrekyhfHtGM+Bb5kXTzEY
YpQgn+pyypvDlBbiqvtWPGOyFIT4jg+XD3AtVYT4Sgf+NWaamhC3/emayF5F
j9OB58PMOEw+Md+c9TW+VptabP3B3NxcBssDF6xHq9mytfewnhDv8f6v3xoK
8UpZ2bGcMCMhXsWyimTrmwjxtRc8JnI2mArxvLzQ9/HRdP/UiR43iMVpIGsd
O9NZnCYSc+jC3UlKsQTr6edQPu/f+GxF/z9ygoJuaKRjeckTwbae3G6h9lpa
MHAdiyOBv3vxkOcybnwntovdgltLVQ9VYD3D6uqDufGyQuW7JFIK2NwBlPYF
Gd/Hks0kuSA/hM3tQj7zoU7Oaf9SrAe44PWUK6bJM3xUkdeNtfnd28sjnwPH
mLHUNKhL7cHLc7sZyKHdn0yOjZrrIIH1QHnBehJNg2ZxwrSombnGstqaUthP
gJuciV5duJyuB7hgv7odLb6Ra6lLda+fOfHSF3pcABe8r7P/4qS+EN/5L14N
FOIWQ284cXcbC/E7Hjn1va+F+5VOrPRhptwgIS5qnSZq/Aqu3yS3WR1jstqw
nxyyWUWueBZgvBUc78BFjXfB9Rj0H1gXzQn7aH8gtR7XV9BPNv2o2fJgdQP+
rqi4IbjuwnlWRDwRXP9AP4F+2KjZKbfOtZ4Ah/hju3iAUYsdD69HVFwSXOdA
HIZ+9frZUxP1DVL0fC0Qx7D/CKxP8HmiiDgmuK6A8qLim+C6Ap/viIh7gusK
KC8qHgquK6C8qDgpuK6A8qLip+C6AsoLxlUoL7hO+PEvYNzGuHp7X24kS7ME
21cw3kI9os7hiIq3os6TCMZhKC/qXIRgHIbyop7vi4q3op5TC8ZhKC/qeatg
vMV5U2D9DOUF4yqUF7XuFRVXBde9ML6gf55xD3pmWUnnb4EPmFIT+COCXpeK
is+i1smi4raodbKoeC6YN4brh/4cVKC5auQOFbx+4OsTRvpu5tH5Z1HzgmC+
FPo5jItfG3oW7LTrxH4uah4RXD9D3hLmi8mPYhbVDPyM+QcYF+YrrasqHL7i
ehX2+/yxKTNmu5RiPh941IzRGs7yv7AeGC8L3LyUtmmUYx4DeOgb7wYzq99Y
D8wvG8KW7BLrrsJ9NHCxFYm8oEcVWA+ML907u3In6tThuh14+V3m0Ptb/mKe
BPgY9YNPe/t+F/YFMO980OefdU1swHpgPLIzLB1M/JqxHuANv3iRtzfSHMaj
v6rbHZmmDpwHgetMcku2texEDuPRPHLpsZ6eXly3C847sG6BeWpe1ylfs1+S
2K9gfgn1vhlsEqGC5WE+8vGect8gi97Xw7ib5TXJTJYrT82WCXbjxjdinByQ
tccgtCqbwDoW1hucbysHVH7JwfwVnp+8v6zHtv4nlof4aX9r77Go9b+wvaB8
cozxk3fsT2S3s/gjNrcJy393aJtBUnLI3edubb29zcg/38pXzt/zFstDvP19
8rL0D/kKMjb9Zlo8ux3XLWuI6voWhRIC62qItwcXTOvYXlWP5YGHJf1SdLf/
S9YzZVRYnA7kETuWOHQN/YP1QBxOmjPCZoJLC9YD/Jv3j5Eaiq1YD/A7W159
fpTdgvtNaF/Ht5MZZ8d243ob4rZmHdvP0a+LwPoK4vNo7yyptsEMam6FwjYm
q0cobgAXnGdh3w3teyPWK3PWhBKSG341ic2to+fHUP/EM4x09A/rwxzHm8f2
POPieAR+w3LMlIPrv2J5iAM13VZHpFd9QW/QXjXtsgeuHy0lsC6F9lp5JHDx
qsUVOB6BP12sfLyrtgzLQxwoWqWRqt5XD3iG9eTF7aOGn4hsQM/A61dsaIxX
qMPysJ7UTzn/9k9nO3oGTorDdnS8asfxAuOI6lw8L/yuOK4zYf0WNvYP08hb
GvdxeA72ekhAlT0X4wl4IFE1bv4axdju8LuSFpY9AR4tuF4FPvq55J+a8CYs
D+veP3o/fUOkG5BDfIjqKdgtVUifvwL+zL2m4ufsHgLzCMwLzRmL99gd6EQO
+w7TvPpF7brFeP0wfp11o25JHfyN7QvjdPbW8fN7L9H9BHhPXb4RTy4P2wXG
xfxdzd5DSAteJ/T/CbHNwcYGHXhf0P9nD3wp36AiRp8P6ecnDvw6WLVIDPs5
zI/BVg3e2jqdBOIbxLFX2R/VF8S8wTgG/Wq9jdYoifRq5NCOR1/8uKAxqwLr
gf5fum7N6otdpTjfwTxydvfgmwnJDchh3vm+ekzF9ol1OF6gn58Iv+xh5FiD
8wJej8MOWQmfLvQGvLItU1klrh77M9Sz0TpZ59W8nzheoP/fFbdxveTahOVh
/tp83ibbrawJ64f+5rV+ouQoqQ5sF+Bf3e6sjRtUg+0C85rFNen6G5ntyGFe
+2W2KNp6LgPnI9i/3By+uenwJwWqsvSSI4dZhXEj3u2YguLJMnwOC3yn72Kt
CRJlZFdjmjmL8xf71ZirFWP4USW4PgE/EaMbeMMfVuN8BOMuY9aCU1bXKnG+
hvrf8S4tXvu2Hjm0u8kRVwPXziqM81CP0QTmrBvLubhugXb3cro2K7mlAecp
mEc8lORv3jSgn8tAf4iMzlPWMG/F+APl447nxptn/kYO46KIZbBuxTQexiXY
Z+VMfOK11EkZ1wPAzaeM6lJsUsN5QXC/BvXAfqpEa+KKZjNVrEdwnwX1CK4z
YR6BuNF5qMY66eVzjA/gWX+DovS4VTnoE9or8Ejk/fOP0/F+wWe0TFrGD+Mc
9Ab7kYSgqxJhk8Up6G8Qn1ccOxKk40yf0wMeYTBLw7mLfo4AcTv03feM65tk
8L4E1/PABdfhc2O2WnCYPDLc40IMM02ZOnyfN/mEVx3OX3C/tVNcrsg7luN4
hLjxdOhG39EPuNiOcL+1M9LaYr+q4HXCOJ3psX2OgcoAnHcgfn5ZGbNutxID
/UP9i6cO5prI/8H5Hfqt3sDvMw+2VWL8Ae46vbdmmMcfjG8QT2KubrY96PAX
OfTPu/uosSulGvC+gB85fF93XBk9z0L9Wmd0S8296PUV9GfVmW3DNY91YZwB
D3NZ0x8/6LsvaF+IY4kxWhPdExqwHpgH/eQytOd4t2H/Ab5JK6Az6HLf/BSZ
9zae3YntpbRjxZRWRjv2K8ifiPvFJHyNo8/FAR+bv/3tnZ/S6B/2sxrHxBY8
uS+DHH536u5K6yNqXWT96juLuPF0P6npURl+ZlgV+oc442hr7Tztbwn6hPgw
bIfXOLt1NXi/eD4/8NKl9/M7SV1X6C02twPrfzaz4aUioeMw7NPLtrzxND4g
gc+/oH8+2Fq9dPPTHvQA1/PONaX03R0++oR23FHirvL7TRvWD+Ox/KujNKdZ
HPONUE+mmuRdSdP3OC6gHr/JaUeMNsTivAP9J2Dkmzs8Xj72B+jnlnYxFw/7
0v0N5vEBWR8ucs5V4DiC+4rh/r19+pAanhuB9W2iTnqaze/3GJegHuWiK2nn
jErxfoFHa0R8l8ii93HQD4s3dqQs3pmBvwv9YfPH6iW9XbL4vBXG4/C1liYe
47LJsucacX0NTx4PN+hkr2IIPZ+F39018pVG06sy9AD3lZwxrf7RZfr9JsFz
MjB/wTrt6OoZnbmNDQTimGBeC56vCXLYr0E8v2cjG3/jIhf7Lfg8pCfhvuLG
L1Ln/p3JYfaSC2RTHIvDw3riT3zK4ffdr33xp5goNn2/0joDZnPje8ne9Oxc
DrMHy+P5qH4PY/Z+Pqh4tRr7P/Ccs66/tujR79EAP7MpnZr6uBWvR7B+iGNw
X1ELDl1j981H0J/Bw3FNzYDMQeIUrCvgfoOV+YfYaSnE9+s1fyargVSrv5s8
mNVIHg48lr1tWjzJ+zme19vbiDzWK6fninkurp/hd7uKgnhF+8qwH0L9I63b
yyZo/8b1M/CXZ3fNvzm0BJ+/CN4XrHPgdzkjKi8NKU7BdQj87hu3sNkHTxSQ
6n95uiYsXzRD9tXKM1/RJ/Sr9MUK6yIa6f0s+FHIE88wsWpGDv3tcedYyt+x
GecLyC8t/vXyeEnrW/STe2PkSk9uM1n55Yr1fdPPuE6D8jMsZyx3evgBPUP5
0vNTPh30f4sc/HCnBTW7MOOxnws+14B+Lshh/MLvjt9y+Mu7aYo4vgSfp0D9
gs9foL8N2bbwNCeMrj/sWOZTNpe+fsY76fErq6/h/QIPmHVW4ajpS4wnsC7K
1pJ7dWSfOl6P4PMXuB7B/LO99oJj/7X3ykNu7uuvNxAH88PDzSUfkK/98SS2
XX71uNy+eHbc67LPIilqW5aj/ruCHhIv73coeh8dTwoqmQ/PD2wml55dTnVM
biZteaTuMykglok21uZhzSR/M7lxdFQLybConHZuB5ek6e3scY9tJQ/rl429
ptJKHpmyzp0a94c0be7QOZ7USkbs070XrNNKnG8NmJ628A950d/P71m/fxw/
rpV4qn93+5FEP68fFaRpFWDdRjYP2X1e41Y1MX5++OLPoh4y81XYspgj9HUm
qJw7/F9cvf0m+tfntTRXOD5QV/duX3+TT3MqsmsiN/zWhte9zyYRb5KKNvWt
93Oiz67TPdlAJpxVfa0vFkiqgg7oDNKvx/Fy8bbxlMvm8cR853ajxG1t5EBh
2sc3ku3E+NOfaQd2VJLZbWEJa7q7SXbUtZkrL/Lxd62NYpJH7ekkJCTCzCm/
g+wNe5is/6SdTDcMO6au30VcD095/XVfJ/EJD7cPVu/GeWFxR9ay8dZ0nOS8
3fHJq6iXLH38ammBJc0hzk+/brLpWFAHuSc2f1xU374jyeOapL9JD7n5YGDk
ifP09bwv5xnNf9xEdh/Ryv22oJnMkXBYY5qRT47ODQ/eaNtOxsevvf8zuo3w
JNkNifV/ya32z7kVvD6fWwMY11bRPi9rFs3uONtLogZfrlSupuPP089/nPnK
7WRG2hEX5TvthDX4+03tdzUks1H+VdapDpLukLRXvLydtEUeU3JsayJ7K2b9
CCe9ZJ30OtstN4Tj87KyP/aeOo1k7IMlOfMDv5CeB95RS+0bieqMXc319xrI
EkvNYJ/oLLK7+NsUyz1dRPZjGMNLh0cO1f8sWHmrl/x2MtPbtaqBuAwm+c/a
Gojy5O7Mfe0vyfPeQxs8ZJuIp5G4+dWNjeT1RMmNH2fnkjEfHMn5tBYyaTKH
FI9oIY3XzDR2p5SQLFXj5P/G/8QVa9/8d65Ed+Ue2xLZ3+Sx6/V0Rt+4+lq4
5Xj21EbSY1WpuJqbSuwsbJcofmki5rk9qX6jm8jbdXWW5fu/kYsTy+eYuzeR
kuWDbjnnN5Kd2Vtfb7fLJ5KPxvP39JVb97x4w73PTcR7dV3+waYcUvx12xSn
RnrdohNnfOy43xfMJ/i4R3kufN9IAm5e7Dr7OY2UnDJ2CzzcSuprNyTbGraR
N0NvjgiwLCPxLodnlPMaiVvSrrarqxrJAHfx+u1SuWR/f5zfc1wmTvN1J/lt
fkLfQL+N7AqVOfN+KY84Hn1u+OtpF7mTcHDY0WBJbJeuDbdNNVY0kYqx54wu
Tf9Mup6cnLeurZXonLdyNwvoG6exzJ4xY8qJty2xnxvOIx3n/Wynj+4mES4H
5Av9ZajH1w6t3R7WSpY8mbOgfVrfeLq00aksq4yoNsybsITikSlvTRff+8oj
7VMrHyVskKRcp5WFG83nk0F6KjLtZXR/bp6nECS/r4Noj85ZZqnXSTxrk+ZO
65vnLI0W93RLNpPGd6Odvwc3ExvTqog1T78Rxc1bt3T1ja+wAfn/z/g6sKjU
dVlqG7mxzOn42xXtxMV5zMhJWtWECnrw465f3/hPuKhwyryRRLxkXpfUSyWz
OOM8dUo7iNe02NMJRzqJi0/2zJ6UFvI2ZtSAyIfNxGR3zat5Cs3k55+YvGvu
hWS4baO5DNVNxhyWPaT4gEe2Jx/ZNP/5AMqkUqH1rUMLkd14vqzrSTOJPb5w
hOLYYvJB/aFnVXAPifEftdaIT9/v/MLTWz6380m+m2xj6BKaO9xXTPxW20Oi
d4+7vGghPY7W9lx8+jyxgwyZ8HFXl1YHGW9ZsaMrq5nUmCVPNHXoIDbi9z+t
i2onq33FjxhqNxH/W8s1NWZ2EtvvQ+u/x3eQBZatnnevtJEHh9ynPglrITJz
/PVGyrQQv2/aWxym0+sQvV2OD6ZL0T5Xb7+v+t86YJnsat7BB52kJ4hrW3yO
T8T2P/zHi5hXzj7800VWyK6UDermE+eFL2XfRNHfT3BWt3+0dE4nCeCt2aUi
2Uj27T1zwZ7TSBIyZ8ouOvyR7Bqgd+u/+Qzis0XnTocQ2Q+k8HdR7MJaPjl4
uUQ7Yu//eOiwWdl4o51MuPIx6OKUDiJ33rn11+R6YlpqNb6pL769q1xaGPo/
8U1UHH618yLRW9tO4rYq7zLgt5P13eNc2q7WEvtO2R028zqI6ZjU+RdrO8jG
jVlMrmkTURreHHV0Sifx3tIqveVn3z4tbBDnc2gbsTOo2r9sSd9661zZc7W+
8R2ekzBcwzCD1C3ibtPV55G430flq17wyJwik+fbNklQG+RDilUsGkhbUu7h
OdkNZPystYUHJBKI08j/G5cMosffbUlpJUX3lt96kE2fz2Hphz1Y8pn2YDfE
ur3lSwMZkFh88a1XIzGd4Ly8IOEdmeQZ1hp+vpHYNaioUO0NxHVhROjduM8k
fcXWi10pjeRStU2IjVMT4TVunhx64jNhKtVoVMQ2kVFDuqYNNWwiqekcs/3Z
X4lTfx7sXlbLNpXIvrg0eVao/M085Cv9Rt8KqGwiJ1Pv7tA9lIvrQLNlR+1+
hjaR56y1R8VLvhA14vK5OaCdOJSsdEsTayf3Lzi5r66sI1aDan7+d5+wHptv
8TPmttcfcrXaMeS1YiO5YZt5b/yWBmL98vLxeuUMopltbhI8mk/GrI6vnhlO
72sCxCY66NQ0kcLTio1pc5rI8N5Ld13lCoj6tPazHgXNpNXnoIWzbTNJezds
ePPan6Tgz1qXjrA2UrvaMPC2bhsZZFm5IeBkFZF+ZfjisVovubLEIEpyF+0Z
4nNyXqPP89MNxMP3/HlJ+Uwy29Np2KnyLqLf38/5m5kPmJliVOH20K/exfR+
4d6rNkV3dg6uq/kbRy0Ia2onh97VP60Z1IzeOrO3nPu+tpFIvvmj+1Y/l1xL
Trjk+KmJJMy/92Zg375tRnNSXOGar0Tiy7OZ1gptJGaQppd1X/+zcJE9kXqx
nKx2vuVSXMMjTUvXniz26SZHqC3qk1fI4z406f54W4s5beS5xIPLywf+wXXj
leIezkOpbrJ4/HDffS+kqHH969KxTy+9eLKC9uDcf/2tUZHK8aM7yXa75358
VjM+Bzx/unH6BeUWErczdFuR5g9iMfrVB95/5xBic/6fcafXvw4cavH1vap3
O/kmoWakep3O6+rNn/GldkwjGfIit0x5dipJWnxvVVZPB5lqyywcd7OT8E+U
V51e3Iq/u8hpxwv5rCZiP8z4vWvND7Itf9Hg/Zd4ZIFTB1ujuYt0l97Yae4j
TT2dIP2z2qaFhB9KKqiObCaedZVXHn4v6vMWuUz5VA+xv7/KQbmJjsPgodT/
xBpHbZpv6N93XM1keunNov2wVk3ZbhPWQWaUW7+MkOkgV/SiZV286OfIIds1
xIlT33524qdZu3414Hy9f2qeat7RDnLjb2ZNSkkrrp+bbh3tbOU3k1WtCc+W
iJfgc+TkEf4uuwh9fkyS/cVM1rNb6NzLnV9d+Z2JfKHzZq+aH9Rba3YLnXtp
+90aftywW+h8y591knXaed1C51h8PLUDU4cKf1fhYsfE1rkhwt8BgOu3elT6
+F46zaucbN+fihZ+v6xriOMkeUfh96HmLalpsWzuu57600EpBW14X1MurjxT
ENlNSiONRtvk0vH/5MW7C1xCukl1tYK6WRO9zzLU951b97KbXNhbIjt+PX0+
rXJ94l59FT5p0z7Xkm9E35f8+0pngzA+2aBmrxu6gr5+5qjARvVHfHJU/s9E
hSf09c+suTPFZkff/m7fQrFN3+nrX3C0eqF2X7tUqv1+5SdFt8s1u7U+vVf4
hBkROtTPn67fxtctYMB7Pok7ttqzoo4+t6O6qkusMr3vOje8n+OnRZ/bCdnz
qGJkFp/kzpwwWnEvfW7nS3FLpsM3Pln+PvJCdjzNn1FxmZPT+GS/Z0HUH2X6
vM1Oo2GzC3P4JKH97HJ1W5pnvn3iNuojn2SFpT5bfYc+hzPf8sLdynw+WXpw
qFP6d5q/fsZkHe6r/9iA8h5NPfq8zeuJeR/Pt/HJ1jy/2xtn07zk+2ElpnMP
0Q5vTjycSeftfXXJ+4eFPUT3Tf3Gy6q058/+GhEFm3vIzpg9BS8caG5Pvb+k
W91Nvo1uNeOvVUKeFWxZmkj4ZN0L5oGdzvR5KvHRKWUWH/lC56OGHpQuGJnD
FzoHdX9G+B1WJl/ovFOowY1P7Ey+0DklC06FjFweX+g80nyZnZ0Ttgg/p4D8
xleDL25DRtLcUSFUpfOZ8PMLKH98q9/y+19prnbzRE1IIV/o/KH1oeNXv2Tx
hc4Zhubmnu3oq+dpe0ro5v+5nqDKqF3Fff7XsbtjddXp+k35n+v8+spn5ycE
fvyf6+koXkkG9JVfGZ8XouJJ17Nx3bSVl/vK194ePqLxf8pbf9I/9L6wR+jc
YOzdYXU/M/hC5xt/R8WxxQuFveG5MiVdO48rdD2Jn8Yd9+cKe9M6uJwXtEH4
fI5cmvb0zoN80vTwwI1HrjSPDvR30n7JFzr/KTXkbGH1Hz6p2frdd9Rp+npS
3rrzHuzoIaoqbJM7kTTftJjPfpLNJ3k3u3wWSNLXo+9bG7ihb7yoHeTOizeg
+atmR7e0hB6ydnekRPZtmjfNmZ72vpwvdD4zzjDiyaO+/cZ83ujUXzPp33Vg
p1S2K/WQea4DQ5520eU9w27L+fWNu7ka15XMzP6nv1WlW157yCcTB9465fOc
/t1Fv0p/LvIVfp5onvxE1/tlD9GbffVm7Ae6vNSaR7bZdXyh9nqx3IgVH99N
pt/VXyr/UA75DZ+jGUXvuondy6cVF0/Q8+yQCXovjkR3C+XJGWN27LYeLJzf
e2B9v2f79W6ipZHzelGq5P+Mi/dFe0K6hfJvu7bIpiWldBP5Xe/H1S2l530f
/WuPit53k53LPR+8nNj9/znPiorzouZxUdcvar4TNe+Luk5R86moeUpU+4rq
D6LmcVHzo6hxKqr/i4rzosaFqDgpqn+Kip+i4pWoeCIqHoqKn6Linqj5TlRc
FRUPRcVzUfOLqDggap4SFd9EzeOi4p6o+Ckqbvz/jW+i4qSodYio+VrUekbU
+kfUekDUOkrUfCdqPSZqHSJqXSdq3he1PhS1/hG1zhS13hC1XhW17hK17hU1
/4raX4haV4vap4ha54taD4haP4haZ4raN4nad4hax4ral4na14iaZ0Xt+0Tt
m0TNm6LmWVH7TVH7NVHzu6j1gKj5uuranpyt3Fc4P+bfuGxwVKOMeCrF3PTk
ZuF8faHcesxw5i/kUD7xRk7g5U+/SctQ1SgO8xuW13K45CMVXogcyo+Qq1su
u/U3efzRXtqT+wvLP23jkntZP5BDebv51lpy7aUkYXzqIybrN/1d4htjLfT2
FiCH8usVTyskLC8lWlLr1nKYFfT3fqX+GKxZnU925vMUGAz6+8PHCxPjf3E+
Y3mop4MXl9R5qATLA99i+aBpmHUxyek/XwR8l4ful0sbC4nO86An7FX0ewSN
725nHM3NI7vPTXTmWtLPwRVb/540qi8l4c1SVhxmO/KiFwtm/jasJnmr8pRY
avR3jO/O5Tsc0G9CDvXPHb7kx72cViLx9vaf3t4uLJ9pHfiRcbQbOeTfxG7V
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
J3C3aYPEHZ/RPoF7f3q+vPER7RP47sti5w8W0T7x+7HfT0aLr5FEn8DHJEVt
WjVfGn0CN5INWBjfTfsE7q7+cbPTzgHoc/adMV4J0R1ERdVn8Xm33+hzz9zR
yay+dYDE8Y2+OzaXos/wVosBhbtbidzSzKyjw0rQJ5yH97qhnJU/rQh9is02
j2BQTeTW533Xhrhz0efoxuEtnLAG0mindWzh2q/oU/z9p2esvnXYEqVjjGGj
itDnqP5z+7L+J1uXvviG69W4SlfxwrZOcm6q9qjUN3Qeqdh/wwLPVR3kwIa1
yUGzxPF+91S4tbEPiFFXmpuG2ZyswPtVmlJlkBDNoIKmiAcrFJXj/dqbfDnJ
SO4ljBnPb1qpluP9wnscv/6+a3884A/e712vLOPBZ7rJhE17jX+9+I33lddh
qZeQKUZNl8iduly6Aq9/pLzkVIaxOLVi0oDfH6LpvM2btcc2sBzEKOnS8veB
4pIYZ1Y+ET/HOc4Q2l/b8yeNY4RKU7pMBenN6nTepmTRM0dWjhTlmKhc+PVt
Nd7X3rvWPhxJKerNB5PCgvXVeF/KvMS7XEtJ6q2D8rCPZVX0fS2wymS6SVBf
lDKaYqdUYTvahCU0s4PFqWEDO9uHLq7E+41Qkl3OapKm3u354r+KSedtbPrf
T/yY8icjaOtf9MAwzt/PsZWh/DgbJ1pNofMzV3YuucXdLU0db3ke1Gwkhh5G
puV+YN6TEvJgqK64jfNWgVrWM0YpdhSdn3m66dwVbps8ZbV0+nNTZh16mPNC
/iXTTJ7KPraZZaRehx5KVc7+Zq+So/bZZLYN6axFD/tc5eQTzstSgx+1rTT5
XIseVJ6dHs1IlqHq1r9NHXiezl/tZ36/xNVSpPaObS99JUPnZ1T630eLdXy4
i2VI52fuZn4rZh+Qp4JeWNnxtRrRT+6EuwlMN0VqZY7xwWPPGtHP5rODf7GD
FagCG98zb6bSeZieX2GSCZnyQn72XvZcxtmpQg29dvxUpDedh3kz9WFV/AAV
yuL16k+3/BvQz8Acbmf8PGXqnGGRn0dEA/qJG7LKmOGjRHnutWv/+orOX809
8MOOFTuAsteysbb6Ruevfmc7sjllitSwwd+uVtfR+ashhksr46+rUO4ro/02
69B5mO397627JjeMebCLzsPs+x1pyAhVpqTuz1ts96sZ/eSET97Pfa9CRcz3
/nhrLZ1XMVx4YADDSYVKKv44bPX0FsyrOBt928mVVqeu3F7xpfcdnVd5kKYl
ywhVo8LvROxsrqPzUR1ey4KZ1mqU9h2X6BwDOq8yY+AVC1aOKhVzTWrcwoVN
6OHCx/wU9hZV6sWqjHrts3Q+irtDcylHUpXKX+tcdjWdzkcpR76UZoxWp3TP
fuDvr2pBD/D9B603u8/O20fnVcK7p4xkrVejZPLbO08PpvMqjXcPJrN5qtTi
wye1Z7XQeafno8OuMh3Vqd29Kmqhw+k8iTT39whWkxpVJnP2jMm8XvRjf59c
Yl7TpH68ipS61d6EfgKWHB7CGqtJ/VzQ5uo7ls6TlPS8SmJ/0qBuV9tFJO1s
pvN193rmcjZoUBZaFnbur+m8097FU4vj+epUT2BwurpGC/p5y/f24l5Rp/T1
xwUv2EnnnTr+S+enalIfvnSVTrxI50lm9L8nbj71OXvTLDpP4ncqfA6nRYNa
pzn20KHBdJ7kx5g/v+LP913PwdCp4yd24n5ncCFzB3eIBsU4usN6wvku9Bb2
Xxq4RpNSUB4fdaaAzofUu8615xzXpMLjS3xMn9Lzy7gJkY/ZI3QoH5XS3L9a
dN7jUFGFLeetNlWausQ01ZnOe6SfGVoQv0abcghmSb+No/NLmuM3beG2aVGR
EZtcgzTovIfzr7s9vRe0KBLxt3uGD51fij5d7s8006KuRh9K0uHR+aWSl34z
OEt0KHbiIpa5Dp33gPfoA0cW7rzU0IHe9qgpuXNPalOpc85ELm7vRG9vXszj
9xppU+u2MFKLp/DQm9Km8xeZSVqUm7WqxqHvdH7JUTVzEMtBi9reNEdZup7O
L52325Uf761DLeQvfX1zAZ33KGh4upmrpUNZ3fbxZ/ym80gGySqf41/qUSXX
l82tHULnNza5L3ThLtOjDuoO5A7zofMbTzQutvXW61Lzd0XWWZfReaSeV9ln
mGd0Kb1c5xK9pW3o095N2ZBlqkslHImbPiGfziNdUV/wiP1ch+o+63zFcxOd
R0qf3e7MLdejlFd47JI4Tec3NPu/j/H77shXhd50fsPp+u7TTF09qmZa2q4B
kTz0+WBWvD4rVpdqmTBg7zldPvpsb2x9yJ6jS+1j79MZUU/nkaaHTJjOKdOh
bAKrpBffp/NIu7/8bO5V1qe23Rxj5hpE5zdSDxieYt7To+b58o+cvELni6Tm
7KvrXWBIhTz6NLfYjM5jLGxNPMKsMqDePJoWu/ginccIudmhwTpqQPk6Gp/Q
kaDzGBX/vkdhQCmzW1ZtO07ni8a17JnMeapPrbNwOm+k3YE+D99IyIqfp0/9
yQwUO/KKzhc9yV3nw9xnSJ2WHOwrXtZF5z/7v384aN71zpgWHvpkDSu6y44y
oLS6pQNqp9J5jICcgZM4tgaUjWbl4Pvf6HxR8cG1mfE/9Snl36GPj22l80Uj
/n0XTp+y+5zkffgNnS9at9pOjXXbkIr9dNFj6ic6jxElfTKcPdmQMpOf8+z1
RDqP0fbonRUnz4CyvfWtRCWRXlfX5ZcoskqNKF+D1bWHTeg8hrWPSSj7gBEV
aug3zfIyncc4Mdx5HEfDiNozc9eqqxp0HuPzv+/hDKSe2mokDw2n80UGh4sd
uXYDKevQxVGds+l80WYz49reIkNqJ8d2/2eJLvQ8f9SG7HgpY+rL0dkeI0bR
eYyK/u9GHuv0kolZQecxxj6Z9S7exoiKU5Af6pPcg54PrTm1gvt1ILVohWzj
ral0HiNN5kNN79aB1O8v61P/rqDzGBr/vjcykLo+0eXnwXQ6XxTmtVyHpWdM
jbbkW9ypovMYl/3r3sRnGlFPN025nn6FzmMUTbZYzt1oRI01k/BnrqfzGB6j
wzVZk0woKmIfGaFM5zH8pWau40qbUBytWYqO5+k8RsKPskh2rjG1e0Lg6R16
dB7jZ8zxpt6bxpSm7Ye8cUl0vkjiBHMKx8OYqn6dpd/tQeeLhq18e4JpbUyx
xlXk1FjT+aI3O6+u5c43oZiT05tSttB5jMr+77d05QQH+jyg8xhKRgWNvRXG
VND8We86tOk8xvh/48iYepx//ANThs5jOKZpn2AeMaa87ia9ZlvSeYz/O76M
qVuOTpOt3tD5It2kcxFsFxPqQ/s+rlenNHomfiMae0eZUO2KixI9iuXRs6vL
p0mcbmMq96DLsrQi2nPJru9h7GOmlJ2UuF1vM+1Z+l88MaXyUtYv7jhI5zHM
jXWtOAamFOeYm4eMFp3HcPgXZ0yom21nTIxS6XzR3vQVn+LjTKizlbPH/D5O
54uu/4s/JpRX9YpBn9bT+SKrZxm1vYGmVEt1d+v5YDqPsab/+2kfW5beHN3U
i56PbVA8whxjSuW+UXbP+UB7vmf9ID2eb0J9fbl5RPp72nOW0lwNVroJdX3b
7rhPcnQeo+V3zRruFRNq5CypOo1HdL7Ir+e1JeeBKXUyQ+ubLJ/OFz39F99M
KXXfScde6NJ5jOXPB4znZAyiXp4VG+2bTecxDl6M9mZeG0SFWh95q72BzmPc
dp33Id51EGXz6Kfvblk6j/FhUq0Ka+wgKpG7c5lZCp0XqlU+v5LbY0otmPlH
X4ND54XU/piHsT+ZUpNqJAt6D9N5oYe9DG9mySBKiTepuPc1ncfI7f8e1ygS
JfM4gM5jdN6jVFj7B1HWXbLvXm6j8xgD/8WlQZTO+tNmUYfoPMaMJT532OqD
qIi1qUOX59E+3f7FK1PKy0/b+RmHzgtJ2ra8i28dRM3f6f1dvI3OYwzXvazM
Sh1EXa/0yz8zcwAF1+nU/76tRv938OA6Jzzq8k4Y2UICJrEkXlSmEN+GrKUu
kr3kwrtCPuXRgudDoB7p/u8kOK52fXPIuRjr+c4Naefu7iHRUk3Ld7v8wnho
UeumPzith2zMYAcr6nxFvkx3QT5TjkEVTzf2UDj/HeejNVc2b04YyScHn859
H3KNi/z12+yH3K8M6uRAqXMzUzPxd5OP3bRiOElSRZvSuAfdq7B+d8WT6cwz
ktTrsY8KNt+uRD58lLFawkgpaqNBQH1dRhXeL9vvYoftYfq8FpS3MV0ukxAt
Ry1IX8E8X9SA9XTbNs5nOchTT36E5qnMb8TrzNv9dSSjWJYy91f8NkC/AfnG
hu3DGMYK1IbbvUPN1Jtw3ZId3CSWUKtAmRc7hz68QZ8f+FxoupezQZY6UHpo
40p5Pl4nFeY84dsd+twa1H/XN8KdI6lEXRi1cFb76Rb8XYNjt8ayTFUoW8V7
M3P4rfi7XwqcbzLPqFAFA8z3joxrx/rVno3d4faRPl8H5U/xeOXxI1WpYZUO
yne/dWA9z1zSX7L11alGl+NLV87jYT1NFUe+ebfR5/0gfhZsUJBkLNSg1o4d
H2U9UY6C8oU7qlvfn9YQKp9S72XKKtWi1g0JVHh0TBLLv+U7aKjoawuVj9pf
SHF26lIuwZ9Gq6bS9T88/XysYzR9zhP4FXXmotvEQIj73PDdWvNloBCPu9xl
pxdrLMRvGrm4utgOEsonzBrMWecZ3EjipnDY01fT58rgXJbs4f/7PTHoz8Cn
SBy9kDTzM/a30ykfbjF8WkjBp8Zvux8WIJeV6R49OK1vn6MTPv1C/Ddsl9L+
9y5v/1XRiUqiz5sVFq35zHJoILd2LJ3XYkH3txjLdccSavvGk803R7nddH8T
PM8P/UrMWaqR/VyC+qkWMoSRXYr97dKP0Bo2T4qKLLB9UvCkEq8Hzkl63LMJ
ueqUj+Xhu1hO+8/qaI+i8znAFcfd6NUZW4H3q2w1zJaVo9S3PnxSfdWaPmeS
vTL1HHe3MpXve5az+wLd/+G7VVKtr87MdaD7P3BPhWkrvoyh8wDA7wcVDuux
b8N6pix6sZhzWZU6le8dHZzTjlxKSX4R56kaNWWOc61ZJz0u4BzsmVklK88N
7sK8U93323/iX6pS4r/itvYy5HB8bTu5QYqRrE69Oi0+5B6zm76epLPDWUfV
qcenR7/3cqL3O3fqxhbGR/ft6/8GMHea0ftHOA98cZzRJBVVej8OfKrnFae4
XDHkcD7ZfczNB38n0/vKgE/XVFnVppSF+0e3rRM7Me8B/SGwWdrx7OYivB54
X2PHHKVf7kPovCXw2B6PlvAAul3gfN3IQw67D9r+wH4I/uerHb4wxLAGOfic
+eXui1B1en0O9ZcaW23LM8lBz3Bf4sRiUjybPrcG571Nru99vW4XHR/EJCry
ygrp902AO3OjJ+Ve7BTiSwNtIyTVGUJxYEi0ZtmViVJCfJlup5afqowQ70wt
NzZbLS/EzUalLza2VBTiGQUJa577KAvxQ7fnzXaMVhHi8/fYZt51UBPim0bG
b7xN1IW4lXh0TX2ZhhBfmDjwRM0XTaF4Oyi4hdcb09d/xkfUOlfS5wQs+/M8
LlJPFMdzZLAe4/Oa8tZ7tIXqt55x6s74DTpCXF7n0LCjcnpC3DSrPsW7TZg3
3S63+xQsHM8VHFcUvz9tKMQLRy5w1bAwEuJd2516Tw0QjvMuhdwUi2JhvjXh
st+DZSZC/JuJyqLFZqZCvKz7o+GXm8J83ibb4j07BgnxldP5D1orhblFreZV
h0Th+Kz9NSSHaSZGFTnr1VUHfsJ4bmMa/W5euLhQPSpWh8SL0+j+CePuTlPz
U+aZAdTpNtm1fsurcDwu0vTrjh+pRLn/fee4nlGC9ZfOW0B21An32x9jVKYe
lVMV4m9e7F39KVhdqF/FLE324G7Uok7w2kJHhklg+QezSvZrWGgJlb9aPOwc
s1OHWlc0zeuyNT2uA3JY19YkC/erQ2tiE+466AuPi0q9r/Vlwv0kMmna/pDJ
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
/vOoL9+cPtd8uwV9wvVXfvJucVnbir/76o7x6ORL9PvjcF/L1ovxuZbdJHLt
B//HP+nxGxsxwZfhwydTZ4Ruke6bHzAv2n+uVfLhp6HnZvzG+AP5w/uzY/S+
Zv7A6wE/TlMTuDEX6XXREQWGvWdwFwkcnFVzIIvmJ3ssiad+L/k44/6D3UH0
uS/YX5wQ+6BxL+g53pfg97GhXY6ed7IcfKaZGKuy7uS2KKPPYxLDfvD+ignt
a9IK91qarRauR3D/Dve76qayoWdwC9GdsLOn9XIBXv+aw+w7LLUuMud8ka51
Gv1eZIL7+zpOWRPZHrti1M/VtDfL/vPA5W69xs8v/cC4d+9pzxUGo5OoDCyU
nCBO7zvEraWSQyzbSLPzq1mjx//F+r+u4f/mbGgnV+0nXJQ9R++zxNrTbx3r
aCSdyvtHuHtmoLeO5tfpl2/1CuWX/p756zk3r5VYGrMvvtP+jb9rvDX0QNqz
duIybhO1lqLzwEO8d7wJ74tfv0o/l+17RrfXCN8LspyXDcTvyKm5ieuycRz1
2AVMTLjFIy8rxXYdz/4/lZ15WE3f98dvg+Y08DFmDiFCZCrnCnErQ+ZMZR4L
KfMcSqUSaTBFKbNMUUKEQpSQdBMpaZDmW7fx5/t5znvt73N7ep7v79/Xc+6+
+7zP2muvvc8+a7H3pPFT1q7YHlTJlVwuGBc/PYfG7/OaUN1au/pm48tq/Khp
pzwk3OnM+/khpr/pvjK/rVjyYiXLn0Dfq4bbR/pdLufKjO/cfa7H7NOw48iV
HhtruN3XT4ueurFz1M4eVROSl/yNJ+9cWX1ukzy1Y77UrbbPrwpubp3TE6Vx
X6ifWK+tn/Hm234X9j0+fde56IntgSNs/YX1dXSXL/NWbNYljvW1o57ap3Vm
bYhrjll2WhAn4f4UeL+8I8fsM7XSZZyoXEto2rvQ1FmOtfPlUtOrqIk9he/n
bf/65DZb70/7Y2wr9u4l3Bw48KvCNl22L50xKG1sXfN9A82zzt7iOa2bcaxT
1rs4Ji78w+4L+zmRetyKAbNZf0a5h9qIhqo2a2dwtHykKJX5JXAa7+vOTPf6
r/ta7ZTa9r6mYrN2BGqR3NP9zdtp5zFwR9cGSTPuteXOg1teze/rf71+7aCx
Qb1Fz7hwfpzm2Vt/CN6ZQ/Xiwa8rnDg47U0Ody3/S5O+KJWuF/XtMkKpbQ6n
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
lx1f/wfT4KSU
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[
        TagBox[{Polygon3DBox[CompressedData["
1:eJxFm3ccTuX//+/73Pe5zjkkFCXRUKGhIS0pmam0CJU0KKVEU0NJJe299/q0
d2koigaZDRJCCQ1CRQmp7+vZ6/o9fn9c9/t1X+c617nONd77bNt3cLdBSalU
uqFaKlVELw+lUh3RbbNS6YtyqTRD5Qf9Hy36ucqSkuu41kD4ibxU6pmWSm+J
7iO6VHXTRX9V+UptvhVto7JC9SeKNlJ5X/h4Pa+fnrFM+CPR9fFZ9Nky9TOn
iC7TtX/oR/QHlfeFx4k+rOftqevviS5X3QSVnrpnql6iqejeujZTdWPL/n+w
XnIflTH6v0b/J4qeJlpbdfPj/f9kbv+B6DvxfTdTm/f0fwfRPUSnqG6yyhD9
/0TPeFX4Y9HHde0Q4TtEf4/9rVabVanv+Ub0j7Kfy/NnZMafig4V7auyucpO
Gs+OKmvpX9dWiZ4u+ouufVL2/60S9z9R9Z3Ubw/VzRIdXfU7JaJz9X+d8BzR
dyt+j92Fv1bZTveep3WenLn+NtHddc9dwh/o+j66Nk1tdhUeq/qBqg+iY1TO
Ek5F31M5U7gqek/Fc3Kv6HsqmzNXqedvdJzDL0XfLfvaCt1zm+guoitVbhdu
Ibpc5VbhnUV/UblFeCfRn1VuEm4muj71ev0i+pP+36j6pqI/qFwvvL3ojyo3
CO8g+rfKI8KtRTeoPCq8v+g/Ko8JtxGtqq+3hY8WToWfFe4gHISfE+4ovJHw
y8KHCtcSfkX4MOFVmrstNF/nFXpP1kD1x6i+vvA7wt2Fx2u8s1VW6v9ewXix
ro/jWWXP+Y8qnXX9K+ZNfc4te91nxfXtIPqFyt7CJ4geoj3QJvGe+Cree6Do
Rqr7hj2pspz1LPueMZnPQUvOUdnnqJn+P6Lzs6/uGy86U7ST6g5IfSY5mz+L
1lSfH5b9jC/ZHyWf6zV6twd4p6r35Dy1eUPv95f+P8gZFD0j7mH28rrUY/tZ
9E9du1/1rUTnaM/sW/KcfB/75zmjM++XZqJd1H9rlXG6P9O151XfSfeuU3mR
8131OD8qm9c0U5u5oheovonwLOHBwtvCl4QHCW/HeRA+R3hH4XnCQ3gXPe8z
4dWizRmz8IWq30V4gfAlwo10bRr7U3VNVeYIn6/6TM9fKKzLpXX66aD/t2Y+
C+9E/rkNvEn0bLUfpbo2KvurbKe5q+gdvlf7eqKfsU8475qfWqK1RNfrnpeE
u4jOzMzP3uccq/17zK2ufa3/mwhfzCD0rNdEDlf7Vup/C7WrLzpC165W/WfC
H+raOcI1RZfpvpNVDtb/kbr3b9GLRFeprotKL/3/WO3OYzyirXV/H9XvxZ7R
/3NVv5Ho+ypnMw+ixyXu81f9v0J4mApCZ03Z799Z5cqy+Wd/tblTY7uGdxRd
qboWZY9jlvq6TrSJ6JrIT/9kjGrXUTjXHj5K/Q4pe95vi/ytqegG/R+u0kml
CObRf+jeump/mPBd7HP4ndofq/4LZItwT+EawmOEewl/qHZ11H6W6G/6/wTn
TnSx6hap1Gb9Ve5WCWXLtXWxnrlvkPhcrU59DleK3lrx+94mOipznz/Bg4UL
tWkuuiL13uou2kulhtqMVfuPkTfCp4l+XTavgc8sjTwA3FjPbJR4/lmLAxPL
mtUa9zOqa8f7au7Wqm6++tlaz+4ufK2eM0J0gMqOKsfrvo4quyKHdM/Tuvcg
0Tsrlod3VfzebVVSlav0fxu1v1p0y9Tn5Qy1byg8FbmGzpF5f/4uWhueCH9T
fSL8pvCRwmXh14WPEK6buc3bohX0DuGjqBf+WPhE4T+q5uHtOcupz/JZwg2E
JzNXwoM0ptYa42DRERX3f43ojRXLwZtEr1V5Uvg60YvhUWp/iej4zHrOEs6Z
+vxE+CT1uanwBOGThesJTxQ+RXgLdADh/sjMzHrB86JP5x7zppn/Uz+As19Y
vp6k63WFT9P9/xOuX1gGnyzcQPgDdCjhLQufvf7CDQuf59OEmxQ+M2cJNyp8
bk8Xbiz8CbxZeLPCMv4U4c0Ln9u+wjsILxYeLLx3YRl5pfDuhXnQUOGmwkvg
HcJ7FV6P4cK7FebLlwq3KryWVwjXFn5b9X3Q3Qqv6zDhloX51OXC61TuVJuD
RZurfhm8RvgflUeEjxDtm5nPLRZ9JLPuVFJ9r8L60MDMPPBH5K7o7Zl1Hs7/
sWrzndpMz8w3Wml/VnTv8aofoPqrkOfC4/WsU1V/nPBSZC/PEf5d9RfmXsd+
6m9eZj6/h/rJVH+w2jRW+9uFz0F31dAmMRaVXG1+y8wLm8fzeIza75xajuwj
nDMG3ftQZr76jej+qt9Y9SNV3154c+GbhP9UGa7xHCS6U2F+dIFwi8Jn4GLh
nQuf1SHCpws/iM4h3Lowv7tG+CLhq9VmJz3rYuF9df5fVH1/xhasZ+xXmA+O
UP2pwldWzVfLwk8JH40eUZhvXi3cqfA5v1W4c+Hzf5twl8Jn8g7hgwqfmRuE
DyssF+8U7lpYTt8l3LbwGbteuF3hc3Wj8IGFz/x1wh0Kn+2bhTsWPm+3CLcp
zFOuFS4J/0/jPEo4EX5auJvwvyqPCh8pukHlAeHD4YUqtwh3Fl2WW488nn2X
W+85TvjX3HphH3hwbp3vROE1wiPUpp3oLoX57EXCdYTfET5ReGPht4RPEP4l
t27aO7M9MDHaOyty66AnIAfU/hW16aW6ivAzwt2F16vcJ3wYY1S5X7iraKo2
Lwj3YIzCrzN+4ZrCrzF++hZ+UbincCZ8sp71pHAN4VdVf6zwXyo3C3fKLaOR
n9tF2wMbBF28qvbPq80xuWX1gCivT0fPE+2c+jndhX8T/2yOnC/bPmE++on+
q/rXtNeOKZnX7Rj7uVD/X9L9ZwofKnpo2Rh5g81FP4+J7qw9enpsPy/aWNhC
fVPLx/ap5/sU4Q161v/0rI4lv2873XtQYjuyX2p9FX17P7UZqLquwivK7p8x
w8P6iv5Tse5AG+T30VH3aM47C3dKrDf9VnY9egN7rYOuL6r43ByOrK7YNl4R
dW/WrZvwrxXv0yOEl1XM5y4tW3afHDF6WvOoX21W9h7vit6u9geovqVKl5L3
y5Giv6h+Rmq9AHth82A7Yf/U++gA5q/ic9BWeIFwmnjMDwTrgMOjHsheO1B0
fsU8FZ2zD2se9Tl0Ofgeuv1Pog001/sJ3xHMO4fGd2Ff91b9nxXvuxOE11S8
T/sI/yV8su7fXni56CnRHscuX4kMVn/naw82Tcwz0bU4f1ujq+rev6I+hpgI
EaOf1IBvosdyXthzwnVz+x3wP+BfGKb+t0KP4/l6xvfotWqzh/C/wpcJ1xJ+
k3cQnpDZJoNn7qj6X1V/vuqbIUfQj4V3FV4rfInwdsLzhAcKbys8Ex1BeBvh
6cIDhBeqzz01ntuDz8SIeL7ws6CHYL8hE1sJrxCdWrZdeWe0T9C7BqBP6Fp9
4auZL5UmGuOWohege6l+WLB8Q+dpWzXPOFF4bcXnfng8+4fE9QUPyWyP9tN4
+0ddFJ303KhfnVexfo+ej40DL9lVbT5X/QUqFc6saD30GNWPCOa7uwl/ofpj
Ncb2alNT5dPU+jD+pouiPoZetr3+f6r2/XTf5Wo/nXPBYid+7pcl60qDUBNE
947774HUZ6hvPEdbqn1Dlb2EW6c+F5yPZol1d/T2L6Pts3HV9hZ2F3tx08Q2
2+KS6+rHemyUOol5+h8Vnxt8F/WC+cSmonWxyziPwfdxP/oNtmCSeN/fVfX6
fs37RjtxSsV6PjY/uv4PFb8H9jU8rZZK47J9e+ztaRUXcPPgZzOGTaI9VDv6
lZJgO3Vyaj62cWL7qkawPnNxansc/QpbHfpTxF+zr0XrVe3PW1L2WYL//Rx5
4FeZfQ97Rh1ncTyz3+meK7FXROegYzKXor+WbStxz6LYJ+1no2Oqrr7oRhpb
PeSJ3u/6qudscsVrwtqw72dwFkVri86tmBe1Tb3+f8c9MDvqjdh3vVOP97PU
Nhy2HP7J55G1qjsDXRIdKLGP4l/8F7reNXjfsf+w7VeLvqVyjsqDevbujEXP
P1XtflFdD9ZT/5cLn6ryHLqhSq57H1L7PdR+pq73V7vfVD9e+GHVt1T9V8Kr
VPe0ygCVO1VWqLTTvd3VviF7X2220phPVn1t0SWpZcVJorsE66HMww+6/rjK
22XvRfZkT9FbkY9ln71ewX2fq/Zv42tK/IxGudteUthPg78IeZbr2T/pf42y
x/VzHNvLoi+pnKdyk8o7ic//3VXLC3xCewbrE4NS94d/hz4fq1p2L1abkFg+
cTYWaQ2qiX1c/6T2G7NO8K0NUWaND5ZL6AxHqG2R+DwgExZGGfFRfBb+LnzO
WWJbL4tzzTwnFY+bMbNWS+N6YUcfQ5+Z/Tf14t7jWYcntgGaBY97dsX+OfrH
R3dP1XuSvblU99dI7H+7R3R0Yp/sQrW5Sm22gkeqn/bY48F+sdZxfvAx7B/5
FTYJtkmrzDIJfQwZhV6wZ9QNGM9+wlXRHYPvhT+MzGzrz81s93dQGVFyPzsF
2we7J+7/x5LXiDHAB7CpsK0ujz4qfO/Iqh2Ceds0rUuTYH45KbU/kjaccfxg
eyX2t29IrS+enZo37xf589W6dqbqehfWy9D/aMc7tYrvBd/qHHWwKVX7sfFH
Tarad40fGz87/vYLSn7XjvEdeVcw/K5R8Pvh48KXgr7F+TlS9LDE98Mf0D/g
SxOr1kPrVs2r91Z9OXgc6IToE3XU13i16aM206JsKqq+3jny28lV+9vxvX+G
LV6yj+7zqv11+Nm+qNrnhi8OX/TWiX0p6MD4ZNGDJ0T8X3ykar8ccpA9gI7I
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

           "]], Polygon3DBox[CompressedData["
1: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
gp88r78zov3hmQfq3Oay11cXtddWzAeZkz1FPN2hZI0AreDl1Pb1Fx2nq328
7rGfxs9V+09iHx31iY+Ef8UWZ/ZtJeKfzO+IvVaV+t2hMY1JHeOhPaEhjUod
A6ItwSeHqt0+2uzJMVYcJzwgM2fGnx8EZ06t2YxOzdHQcthj95T9Tdh7l+O/
1F8H38/1OpYSb7CeM3NcuG6p7JjxG+GnsQf6Vs203vpp/t7Cv+v6usJZ5ljk
YI1vii1T/wnC69Rfvco+Dl/XIdqzOqy3sjUe+Hy3wvwenp9p/KyKuc28kuPT
EYXt+aXRvkyvmMvOLTm+2kVrZAnxmNpd1V+XPVI2P/ykYp+D78Hnvqr71SPe
UbuJ+rpofDPiYta1jlOqzCHhkvN1tMP+avwuZe/p1bn3205lx2C91L+dzs1Q
386skyrHXzOF68H7hWsIz4K/YRer7I+31bXdEvvXTzLrlQsi39xV478g/qj4
eabiL4U/jHrm0Nz++jNiD+L/+D75zQcRj6t/kcY3VvtkXT8Tf8H6jPzxBPgZ
toyYRO+8SuOnqb2Dxh+h8S+k3l/4+BFq18+9PvZW/6nqPw1OLLxWfdsIz8us
Py6K/LiLxj8s3DLqO59m1l8XRr58dO71vHt8fvS4kcJ/CDcnvhR+Wfg34X2F
ewmPLdtGYS/WCY9Q+ye191H/euFH4EPCawr3c/+fhb8RvjK3ffwq8v/zOJdY
H95D+HP1ryl5zAK1z4Cjw1f1+7ZT//ea7xXWu8bvB7/N7av5DQtzx1Ssx1B2
DDw3s370eYwHuhMjCK/hXev6Hth/4W+FqwlvkzkWRVMjnpyhOZdhC4L1kvXC
e2L7hS8SPkX4UeEDop5WCH/A79FzHK7+6wrv18OC9c8N6m8lfF8wP0XDRcs9
QPfcQ/fumvv9tYr6W5PMe7mujpl6xm3VP139O+G72H/qH8zeinoyHA+uhwaJ
vgv/JZZkjcM34aXwUzRJ9NVc15xUNif6PTengFsQE7I/axOvET/qfp2rrHeh
vaAzXSLcFZuu/i+xe8J9iflZL+g+wlt03V8lczj4ak31N1X/7WiT6t9W89Tm
fcEHMvtofHWdGD/gQ/GlTdgTap+KBiM8qWz/MF332Ut9rYX3FA7w+7L3ILbt
z9zxKXHqpcQ7wlnZ36Bv7pgV28Q1jbm3nu9Q4aU6X67y++d5q6I9HYKPxXek
ts9Hanyt+Oysh4z9WPY1FebS+T5l+3D0g29y2y5itQs0/iw0IOFf8QHCO6h/
HvuR2EP4ZPUfAv9Uf4n4Jzf3Jwb4UO1fNe/4yFV66ZirY07ZnIY92iy3f8JP
wU/gRp+Wze/gSB/gc9T/cXA+Zhq8WXh6zF/8pnETyvaxvXVMwV+q/6Oox37M
7xaeHZy/qc4eFK5LHFVljgb3hiNt5Urq/0j9O8J1sV+6/oGyY0n45gwdF8MX
on6yXOPTsvdcH7RV4hG1ZwTnU/itxCYXxN9cR2Pm4z81//Ga/2+Z9w4+gvXT
vvC3gFex/g6u2PexXrDdJ6m/nfASkkjkM4jP1FxB7qHK+u4C4Ya67gThndDj
hRsJnyRcM+qP9YWPEX6obA4NdyauqcuaU/9e6j+RfIPOjSg7hoJjljKv5dpl
x7A90EfgG9F+9o76cl/hjYXXyJnBOQzWDr/5rGAfwrvABw8K9oH4ZmxG9+Cc
BrZkWOZ3S8y8LLfP7BGcA8KX4jPR7tDw8KV76p6XRY7z79w+e2Cwz8WXd8JH
BGu0LxZ+B2cE50x4N+RkyM1MEX6+sM3AdhyeWCvHxvQJtqHYnv1z23Js+tu5
cwKHB+d0yBVUi/ppHXTNwjEEscSKGE+SIzgiWBMhd1Cp+F3yTv/InLM6Otin
kMtqmlvrQxOtKvyNede8c749PnxAsA3Gt/PN+wevedYCa75bcE6MvYAGsLni
PYs2gE3BtmAzn8hss8kFksPAlrOHyIWSE2JvoXmifaJZkTvCZ6N1oXHhy/Fp
aF1oZPg6NHC08DsT55bQuNC60MjJlWBDsCXYuMczc3Z0OTg5XB5NfJ5wi8Ra
ORwCrQ2NDW7xvvBX8Xs9CM6txaDJoH+/V/h78vseyMyh0O5uTcyt0NjQ2tB0
yQXiM/Gd+DxyU+xpcqVwGPY6NolcMT4cWwVnQntDY4VLYSPQWq9PbDuwWeRe
4TjYMnJ2xwRzGnJ58IXvStZwb87N4eAecBC4HT4X3wtnIReGjSP3BCfE9sGh
4FIPJc6dwZngTujLcEHyYcTafaN+C4frov5xibkdnODk4JwYXIEcK7kecj7k
XtGQ0JLwCWMza15oX2hMYzL7CHwFPnZcZh+LryUGeCuzBocWhyb9duaYgNgA
zRftl5znocGchFwomv65Wp/9E2v9aNho2X2F3xF+LnOuhhzsNbn3fFu0jNS2
gPwguRFyjtfn1szRzs9OnNtG80b7RlN/N7PmXBWcw+d54KxwV2KUlzNzMrgZ
nGxEZg0JLYmc0ajMHA2uBud9KbMmgjaC5vS68OzMuUc4Od/jQ93vj/j7R2a2
4StiDuOZzDUEdYNzXtQWEPMQ++ATns2cgyUXSw6O30cOnFw4GjfvY2rufAMa
G/o8OR1iT2JQcj3kO8ndbRQekFuDR4uHs76gsZ/p3Ncl51CoX0AjHpZab0c7
vie3djRLx8e5Neg7U/NTtGn0fXJzaMyMJyY4L0QflJtzwj2fSZzrIsd9UnAO
ldz3fB2rde0kHe/lzmkfH5wjJ9dNjv3E4JwsuXf4O1rV6sjPn8ydq6fm4Cm1
z8m99q/W8ZLa9+auTRgQ+2/KnetjD8LXydejdbfTcZfa1/ENSq7BQG9YmTs3
ulWTz53zJm/ImiQX3io3N4TDwmVvzLZuo62c/czcz8CzoImRXybHcFvq9zHm
/89fMkednDm+Rm8np/Rm7hiXWJf8yJL4vqj1IEYhVtkak6TW6F7LnBP8VLh5
4lxh49yxO/rXW7njB7ju15HPwKF3ypxDhlvDCeGG6Pnf5s5ZdwyOwchlkzP/
puI1xdoaDMfKzEHXRX8Dx+ebvFR4f5O7I2d4Y27+CZdFIyV+JodILnFI3K/k
dMiB8Bsvzx2jwEPgIxvi+r2l4jXH2tuCnpc6R/BwZn46reQYA393be5cBzlo
ctHkdI8LzhGS6yWneUqwDyfXuTizLUUTL6nvdzhmao4CV9mWmDR1TPhq5vwI
Wgw5g8G610Ydu5XNN1i/a3K/S3wUviro+uWpOd3TmfNZrdkLZa8v8sdoL0vj
/qEGh7oKclSsF3L2ia4bV3Iuv0Xu+IM4pGFmTaFncE0IWgM5XHRXfAK+Ac4J
90TfIxaCL02pWL8bG/nRRRXvCfYGHPnU4BoGuDM1Jp2Da16oPSFHSq4UG/xG
XA/b4dfVf3vmGBtdmT3L3oVznh3MweGiaBpoLVs1kbgeie14hz/mjmmIbViz
6+P6zDOvIdbShNzx60pdf1Zuvs7aJpblffw/J0HsQK6CNcRaWpM4/iLngY7G
N+RbfotmF5zz3qDz/4A/Zta40bqJ4YjliOGI5dD40frRR8jtkPOvl/kb8i0v
rHJMT374o9w5B3IPxADf5c6Rp8ITSs6dt8xdS0ZOgtwE9ozaFHKyCMDYmxZl
5zDIZVAzdXBwDQS1VHB0+CWaCNoHGshRkW+ijcDZ+0Z+Dh8gJ35a5NsYLvhp
l8gPqJ2hJqBr5A/wVWI+Yr+let5Pc+f0j438gdolnh/ui0/Bt7CmWFv4A/h3
ffhQxTYZ20yNSafIj9B+0ISnRr0d/4VmOiXq+Xdk1oRHRv0XfZ+aD2o/qOGi
toaaL2q//pO4VmxaYf4BP3klcw3MevKwifn+7nqeasExJHz3z+g/m0f+SM6N
3Bsa8vDM3wtdh5hgRdyP6KLY2K9ya8xzov+9P3POktwl8f4jWbI1piO2I6Z+
THiy+ttW7GMm6/q5ubnQtPh+d4K/p85xTtD4ibn1AjSFLdG+tSo7J/9HtAdo
OeyJCXG91crso1gvq4kvg2tcVmWuEbo4OKYkviCG6RfjDWKbn4XHpvZp+Db8
IbZqYsnPS43F6TE+o/aCGpNzYrxHvIaeekWwJkv81xhNI8YHyzPngPcVvjdx
bhiNr43wY4m1P94Ha40aEPhhQ/xVjE+IL2oRX1ZcbzhMY/cU3i3y4cXRn5xR
sY3F1jbAnwRzNLhak9y1V9TokE+ihu+Q4Bw1tX0Dc9dywLHgWuTUyDGg146O
/BQutjDyATQ6aptml6zd4S+pA2GOT3Jr4Ovi+mM9UpN2ZNyv7LdlFXMhaqzQ
m8nfwSXykvOR5K+pfaKegNoNvgn61fXB34o9wV4ZGrxXHoJzC/+HmJe9kjt2
IkYiVuKdUQ8wKL7Lg4WPSBxjEWvxjvlWS4LffZeKudFhOgZX/I75dsuD3z2a
FNpUv9S5BGwetm949I+8E95N7ciPiGGIZVbq+kbRlsIN0LBmpdYj0AbSqK/d
W9i3EdMT21P/gC3Hfs7Q+Haa86TEe5y9/lTm3/MiMX3hNcfa+jZ4LU7PzW2X
J/anaEBoU0vK1obwAeirvwb7htNy+wZsKraV/CG1a414x4VzuuStyV+T60UP
pFYpi/reAYXrLKi3qMXeFb4mdUxDbEN9Glwdvg/vPyR37IANw5YRQ/D73gyO
LfBpvaM+Rq6fGAd9f0pw7EO+lNpian6eVnuMjnGaawfhGzLbQNbiC8FaCDUC
6Pz4M+YjBiG2eSU4NoGjwdWmBsdaxDBwz5eDYxtsJLbtoWDbSYxC7Nan4tiF
mInY8vXgWAoOBJd6KZgbka/BtqxPnL9AH6PNHiPuISYjFn0tOFbDxqIlPBxs
e5cIP4gvEN6rypwNbjg8mMvdUdi34eOIjW8rHFsQkxCb9M/9/uH4cP3bC8cq
xMzEzr2ilgQ/ob6Remj4BmuafX9p4f2wX3B+DMOJb6xesa+9pPB+QiNpov5b
hd9MHOMQ61CfBZeB303QfP9U/3OJNSe0p38V1pKwGdiOewr7bnw4WtndhbU1
NDS0tGsL2zJibmLvuwprQ2hwaHEXCd8CX4rva1XFtoz3TX3nlcH2GztODur6
wtoXmhba1i2FuSAxG7EbPhpfeWew78aH4wvvCvbt+EBi3yeCfePgwtpMw7j/
4Rhwlaxi7kH9JLk91i/rGA2H8fOD8zVwJvY+HBj+hw/HN8wK9u03Fo5d0NjQ
2qh3JZfIfmXfsv9519SkEt8SQ8DNHw+OLbDH5P7wH3Mq9hn4lnnBvmRoYe0O
jQetB86A9vRIMJcgJz5I33Fg6lz5TYW5DpwH7eXqwlwFzkK+63LhB4RbBNeL
X1XYXrUNzjfB2eBitSvmcuSnqfeAM7yFjlTYnqIRkQ+bkrtWt2Pi+H9FxbWH
1HxQHwamVoyaKeoRryi8f/YPrt/6Ireuj76PHnln4VgAjRGtkZp+avupqaJ+
sHlu7k+NArUKxADYmuoxNqAGbJ/gmjdqw4rC/9cCDkN98CvRHo0OtnfUnLcO
tsHUosOB4GqTg7kRHJLY/5zM3HKf3NwRDkktyH65ayWo6aC2Y9/ctR3UdFDb
cU+MVe5lX8PFcmuPxNDE0gfm9p9okmiT7Gn2Nv6MWJ0awfrBNW7UDuJjl6X2
OfheNCO0p3HBWlL33NwLzg535/fCTd8I5gZoPGhZ/SvWftCU0MLGBmtNaGzk
H94N1t7Q4MiXvBOszaHZkU95O1jLQ7MjXzIhWMtrkJs7w6GprcA/E7tS+0qs
guZG/uP9YC2O9QwXfjSYL7Dn0CvRI9mLaHzk/94L1v7wsRtS+yh8LzYF28Ke
xTZTg0edO5yL2jw0C7TC/wZrGWhyaHMTg7VDbAK24bbEXOG0inM51HhPSh2D
91F7THBsjk3FtqI3w/+J0eAHe2WO3eC8rL3vgrkwe4y9xprn/2q0yf17iQHQ
0qhBbxxc80ltOnv0wBhvEK9Qc39j6pwk+gk+FZr/z2BfS4x9ZcwNkY/bK/d+
oMaDWo89c9d6jI61Gg1z12pQ80HtB/EBdQtw/scLa/Zolc8Ha/mPFY6d0dzQ
3vbIXStCjQy1Muxh9jI2gdpM8gvsZeqLahTWFNCiNgZrDcML50bI6ZDbgZOQ
a6FOFK5CnSxaBPrfHanj426ZcxbMB+eB+xCjks9Fo2c/PRbMJ6m/oTaYGopF
qb8R9m9t9IfERGivzwoTK1ETf3NqfQr98JHCuQ9yPuR+hmauXaCGgf8v8XDh
XAg5EnIlDxXWGsiRkCshHsV/48fRPi5JXSvDbxyS2gZ8lnrPYxuIceAjfAO+
xaOFc03ktMhtPVA4liamJleDhow2PipYW76vcG6MnBK5JWrOqD1bpKO+2vcX
zjWRMyN3Rk4Ebfm54FwJNr9tjGepPUBjgJtRk0G+BA45mfWWmlti87H95A+I
//8HJuT8/A==
           "]], Polygon3DBox[CompressedData["
1:eJw113mgT2Uex/Ef9+d377WUouyEUE1q0kyZElFoIntRlkQLshRlJiW0UDRo
lbVSEpqiSLLVdIksUVlSSqlsCQmVbV7fOb/543Pv83mfz/c55zznOc95flW7
9WvTt3AqlfqcitCIvFTqVI1O6VRqKV84N5V6AiuD3Yp1p4P8cDoF68jfRAf4
R6kY1oFfpPZkJpWqpb6M9sIcf/ht/C7aE5bPpd38g2oLqW2hdo5jh/Dz8If5
G/Hi2CPYELnCfEt8LvYb9g/sV74hvYrtwgZiB/kraRq2G/sndohvRNOxPdh9
2G/8JXQpXZCfStV03mHaA52naaFUaiw/VC6Hb4XPU3tE7WPYaVgX7MO4H7kB
2D6+dvRF5+pvGJaWa82/I/e72pFYKawrtgzLVTsKK43dgi3H8rAHsBN8PbqC
LtLf49jpcjfzBfHc5H7JTcYtxq+c/g/yL8t1jf6orWOv4D2xNTL5VJTOyk+e
ZQmZZnxzuhxbr353PHNqYIKc5Fdozzceh/jRdD1fCv9M31W0+9Gr+lqLbdPu
TLXkjvCv4RP5S1xDWyyP701fOl/ZuGaq7rx9sG+1K1MVOhurqn6Qdhv1MVcH
6+NeuV+wBjQVmytTh2pqrzbXcmS283+Xe05mC1ZR8QHsNmqorx/pQ/dTwLeQ
myy3QW4jneCb4huwvnK15R7l2+EzsG9lvqO069vs+ErHJ/DjqadzN6W7nW8X
jaV2/HD152tX0R6hZrq+atEgvg9V1seDMgtyk3GO8b6BpsbzjueLLeMLaAb2
CBXVbu96FrrvE/p4GMuPOuw97DjWW21jbCMt08dy/hW52/jbqbvcHLlF+HuO
r8IupskyHWmuvn52X/uohPu9ChuJreHLup/96m7F3seOYseonNxDWJ5+rsfb
0T6+F32mfSqVpKpyS9Uvdt61snVpSl5Sm6vdWKZJvJv5yb3HGPTUfw/q65qv
UvuJ48XoLvexCpuk9nzZ+7CtWCWZe7ADfH16CdshVw+bpJ/+2j3kp+Ul78fa
7HyMefkJXyfGSm6AXAWalb2Pz7NzNObq5/zrVNfxy6mzcdnqvPVi7ju+TX1D
533JsaXagxw/SgXUFqsU76p2fe0bqCLfwv8SaorJt6eB/HH91fB/TZFkzE7w
nak4f63zvClfiL9d/Yd88ey4LFLzoDHs5f8d+ro9J7mPLrJnxPogt0CuaG4y
HjEuE3OSeb0pvgd4xv+r5WbKHZMprF0ong9+GFuQTubBB9m1JdaYlTF29J/s
M+oX3wK1/bDvYz2j57CtmeTd/y67bsb6+U2shzEXjEvvWKvpDb4vbXf8Qnoq
7pe/kobE+uqa59NhvoPrKur628dYYUviGcR7E+umdmW1w/V5F/YDVofGYV9h
3bAlfC71xt6NccMK+BJ0N7Y4k5x3aIyd/t6leXnJ+xDvRSnHT6d9fBN8tNx6
mQvUjsIbY//C1mG1sSewO7GNWDUaga2PuYkt40+h/tiSTPKd2Z/9JsS3YUde
8j7Fe3Wn+60Z77n2Oc6dr30lPeWaysvVj7XcsTT10l+B/m7EjvB/pYnYz1gD
bCVfJPrElsf9Yh/zmey4fIR1wA7zf6EJ2N5Yy/KTdTDWw+fpRedtKLcqO6Z9
5FY4fhN2jL+MXsB+wY5iF7vWl6IuJ1kTr6C3ZfbyreT+LVdFn0sLJ+9SvDuV
Y5103h6OTZGbnJO80+3V/qz2fHpS7Y+OX4/9xJ9HY7DvsXbYTr4mPYF9G+8i
tpf/E43FfsgkYxhjGWPa3v9ifFu5HTI1aJTcNrlrsU18aRqEfYq1xL7mK9BQ
bDPWAtvKl6ch2Cbsan2O4te6h+ucIxPfJ7lxnu0A2u/cX/Kt6Bu5ijRM7Rex
HzIGH6g7oG4dVVDbOr7JMpXoIbktctdhW/gyNBjbgDXHvuDPpAdiX4g1wzbz
Z9D92GdYR+x47BXoRexgfO+cZxdfK+Zd/HcdjeXWZ9+ZmLtr5Jpgn2bn8wBs
LdYG+zG+9zQS+ybGAFuXXcPifVuNdY9nzudl59CCTLKP+Or/56QtfHMaH+u/
cbhC7mm5Z7FqsU/BN2Bn6P85rDp2F7YROxP7QPZkrK34MZopUxt/NNZX/Z0W
++RMsi8+s0jybYtvXCP3+yRWsUiyJ469cVNsHFYD6x/3QYf4Z6gq1jed7L1L
6/8prDJ2Zzx3rCR2Ng3m38pJ9ufDnLdG7JexuTn/21KnHopvDjYp+sLqYM9j
E/R3jqJ7Y0yw8jJPY2dhfdLJvi32b3HNlbBeWE/6lX+easZc4zfLlZUbH/sV
7B7sC6wcViLWOHOseCZZ/2IdjPs9u0jyWyF+M7Q0BvdjR7WvodfV7s8ke9uT
6WTPGXvPvfzgvOSHyHX8bM1fs3v039PJPiD2A7tj3aSycrfFNya+kbFHxP6I
MadZ2D61o7Fysc/BPsaKy43BymN3YKuwEthYrALWA1uNnYJdQMP5Oe7pdOwx
/V2IjcDexkphj2OXYRNjPLGLsHHYn7HHsHlYaWwkdmmcG1uOVcVGY3Xj3NhH
WDVsDPa3eCbYCqw6Nha7xfUtzq67sRbPx6rH74MYp9iHYkOxRtjq7PvRF1uJ
dVL7Dn9criv2RibZ181LJ3u12LOt4DvTfOwEf4vcm/FdwOZgv2GdsJlYF+xd
7CTWDZuNdcUWZb8V8U2Zh7XCXuF3yTXDJmeSffaUdLJ3jj10AX9NvA/YJv7i
WHfdQ7OYg9hXWD3smVivsAnY11h97FnsZmxh9lvWE3sn9t6xPse8kPuY/uBb
0gvYdr6R3Phs7ul0st+Pff/7sU9x7ve9++tjz0MD+Q74bLkjMh3VvhbfLewt
7HesMzYLK4n18C5Mo04xb837Dv7P4xcVTvaEsTfsL7dHbV2apPa7WDuze5Wd
MlOpfewPaKv2YupCTeK7RT9pz6aBdA0/UX/nxrXq70v9VXDN1eh+/o34LYQN
ya7Pu9PJ79z4vbudv0PuoOPd1e+kdfwNsZd1/IDCNo69rLY1Ni3ePaw5NimT
/BaamU5+F8Tvg+XxraU3scP8TXIzYm3HXsX2xLcMmxL3gc3C9mOtsanxuxCb
jv2EtcBewP4LnVMgXw==
           "]], 
          Polygon3DBox[{{2114, 1161, 970, 969, 1550, 2028}, {1922, 1385, 1025,
            1026, 1386, 1923}, {2092, 919, 458, 1497, 1352, 2208}}]},
         Annotation[#, "Charting`Private`Tag$191816#1"]& ]],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, 
     {GrayLevel[1], EdgeForm[None], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
          "]], 
         Polygon3DBox[CompressedData["
1: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
NXcl
          "]], Polygon3DBox[CompressedData["
1:eJwt0UsrhVEUh/HlzoQkdTIjKSm5K8VIBkouI0bkAxCSXMpt4Dqg6MSAJCQh
lJQYGPgSvoBPIGXi98bg6aznv9fea7/7lI+OD4xlRkQKOSjPj2jNiujAhWCx
IGI6N+JQ0yuG0c5P8yKOrD/jJCPinp/n/e15x4Psia+jQV3vvEpM8DXUyep4
Bcb5FKrVjWixtsWv3aXPrF4Uy2Zk3bJ0dsSHvqLknvxbXuteLXwAX3zXHdrU
zci0d4dvypvUDbIqTP6fl1IPod+cFd+bli/ov8Ss/kt+iG1+h23ZNe/Rv2zu
p3fb8zuffLf8zPqLegMH/AqLsiveiWMzL+wdtK/M3AX1krk1+kb4MFadV6qv
OZmb/ffmydsXysZkP/Z26SvBm7Ub2Y4ZD87vS/4TfbeytOyRz2Gf/wIAbzq8

          "]]}],
       Lighting->{{"Ambient", 
          GrayLevel[0.8]}}]}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwV0MlOU2EYgOEfJdWdd2ACmiAEE2MEN127YeeySxGh0LkFigiKSusAZUar
1gEtg24JN2C8ACcUtCZuvQFd+nTxnPf7v5Occ3LarqQvp1pCCFX+GZrzb5cI
05EQTjiX9KTO6Vld1ajWtE93NKZ7GtcPWtSPWtaGrusfrTffo7saORbCe61o
tPniIyF8kr/mSyRaQ/jsnNQvmtKvmtZ9zeg3zWqO7+a8HmhBD3VUf+iY/tRx
LdIwT+gvHfE9/UdDuMoA54+HcE0HGSLOMCMkSJIiTYYsOfIUGOW0Z4zpOEUm
uM4kN7jg/pRO02O+qbeY4TZ36LW/q7OUuOhc1nvcp8v5gT5kjnk67Sq6wCJL
nLFb1hVWWWOdR3S791irPOEpz4ja1/Q5L5rf7h912L00v2KDc86v9Q2nzHXd
ZItt2u129C3viPEfAvtRoA==
       "]], Line3DBox[{942, 2, 1392, 319, 504}], 
      Line3DBox[{944, 3, 942}], Line3DBox[{946, 4, 944}], 
      Line3DBox[{948, 5, 946}], Line3DBox[{950, 6, 948}], 
      Line3DBox[{263, 7, 951, 950}], Line3DBox[{630, 8, 620, 1364, 264, 724}],
       Line3DBox[{956, 9, 611, 1608, 630}], Line3DBox[{957, 10, 625, 956}], 
      Line3DBox[{960, 11, 958, 957}], Line3DBox[{962, 12, 960}], 
      Line3DBox[{781, 13, 962}], 
      Line3DBox[{406, 14, 371, 1370, 268, 860, 861, 862, 863, 864, 1659, 2097,
        865, 859}], Line3DBox[{408, 29, 1959, 372, 269, 406}], 
      Line3DBox[{410, 44, 1960, 375, 614, 765}], 
      Line3DBox[{412, 59, 376, 1913, 275, 410}], 
      Line3DBox[{414, 74, 380, 280, 412}], 
      Line3DBox[{416, 89, 382, 287, 1969, 414}], 
      Line3DBox[{1731, 104, 386, 292, 416}], 
      Line3DBox[{420, 119, 389, 298, 418, 1731}], 
      Line3DBox[{422, 134, 1964, 391, 303, 420}], 
      Line3DBox[{426, 149, 393, 305, 422}], 
      Line3DBox[{428, 164, 395, 1929, 307, 426}], 
      Line3DBox[{430, 179, 397, 309, 428}], 
      Line3DBox[{434, 194, 399, 311, 1974, 430}], 
      Line3DBox[{789, 223, 318, 1479, 438, 224, 403, 317, 437, 1824, 209, 401,
        313, 434}], Line3DBox[{263, 1363, 549, 664}], Line3DBox[{408, 661}], 
      Line3DBox[{1657, 790, 855, 779, 798, 781}], 
      Line3DBox[{815, 800, 838, 787, 2107, 799, 786, 795, 837, 836, 2091, 814,
        785, 794, 1660, 2223, 813, 784, 793, 2109, 852, 783, 2110, 792, 857, 
       856, 782, 2111, 791, 854, 853, 940}], 
      Line3DBox[{816, 802, 2106, 824, 801, 815}], 
      Line3DBox[{817, 804, 2105, 825, 803, 816}], 
      Line3DBox[{818, 806, 2104, 832, 805, 817}], 
      Line3DBox[{819, 808, 2085, 807, 818}], 
      Line3DBox[{848, 788, 796, 834, 842, 812, 843, 822, 850, 823, 830, 835, 
       828, 827, 831, 811, 2099, 829, 833, 826, 821, 847, 820, 840, 2093, 810,
        841, 2094, 839, 851, 845, 846, 844, 2086, 809, 819}], 
      Line3DBox[{2095, 849, 797, 789}], Line3DBox[{866, 780, 2222, 1657}], 
      Line3DBox[{2095, 848}]}, {}, 
     {GrayLevel[0.2], 
      Line3DBox[{1662, 1908, 2224, 1825, 1661, 2225, 1826, 1663, 2226, 1827, 
       1664, 2227, 1828, 1665, 2228, 1829, 1666, 2229, 2112, 2294, 1667, 1887,
        1996, 2404, 1830, 1936, 1994, 1995, 1978, 2409, 2016, 1831, 1977, 
       2210, 2230, 1997, 1832, 2074, 2059, 2424, 2220, 2013, 2057, 1833, 2064,
        2425, 2076, 2077, 2063, 2078, 2079}], 
      Line3DBox[{1670, 2113, 2295, 1669, 2231, 1837, 1671, 2232, 1838, 1672, 
       2233, 1839, 1673, 2234, 1840, 1674, 2416, 2028, 2114, 2415, 2029, 1888,
        2018, 1571, 1841, 1979, 1889, 1981, 2411, 2019, 1842, 1980, 2205, 
       2235, 1982, 2004, 2052, 1843, 2005, 1948, 2011, 1949, 2236, 1935, 2042,
        2055, 1844, 2041, 2419, 2031, 2032, 2115, 2417, 2065, 2053, 2054, 
       2116, 2422, 2061, 2058, 2082}], 
      Line3DBox[{1676, 2117, 2296, 1675, 2118, 2297, 1677, 2237, 1847, 1678, 
       2238, 1848, 1679, 2239, 1849, 1680, 2240, 2119, 2298, 1681, 2017, 2120,
        2410, 2030, 1890, 2020, 2420, 2045, 2046, 1983, 2206, 2241, 1985, 
       2021, 2022, 1984, 2403, 1910, 1986, 2006, 2008, 2007, 1912, 2392, 1998,
        2039, 1891, 1987, 2025, 2026, 2413, 2024, 2023, 2033, 2121, 2412, 
       1682, 2072, 2083}], 
      Line3DBox[{1684, 2123, 2299, 1683, 2124, 2300, 1685, 2125, 2301, 1686, 
       2242, 1850, 1687, 2243, 1851, 1688, 2244, 2126, 2302, 1689, 2127, 2303,
        1690, 517, 1558, 538, 1559, 237, 277, 1374, 238, 450, 1491, 239, 1375,
        278, 552, 240, 1580, 573, 562, 2096}], 
      Line3DBox[{1693, 2128, 2304, 1692, 2129, 2305, 1694, 2130, 2306, 1695, 
       2131, 2307, 1696, 2245, 1852, 1697, 2246, 2132, 2308, 1698, 2133, 2309,
        1699, 2134, 2310, 1700, 2211, 2311, 1916, 1701, 1999, 2390, 1893, 
       1988, 1894, 1702, 2405, 2000, 1895, 1989, 1896, 2047, 2001, 2393, 2014,
        1950, 2048, 1897, 1962, 1898, 2012, 2407, 2216, 2056, 2044, 2051, 
       1917, 2043, 1918, 2087}], 
      Line3DBox[{1705, 2135, 2313, 1704, 2136, 2314, 1706, 2137, 2315, 1707, 
       2138, 2316, 1708, 2247, 1853, 1709, 2248, 2139, 2317, 1710, 2140, 2318,
        1711, 2141, 2319, 1712, 2142, 2320, 1713, 2212, 2321, 1920, 1714, 
       2391, 1900, 1990, 572, 2406, 1715, 542, 1991, 477, 1531, 509, 384, 
       1937, 2322, 2213, 2108}], 
      Line3DBox[{105, 1028, 106, 1029, 107, 1030, 108, 1031, 109, 1032, 110, 
       1033, 1034, 111, 1035, 112, 1036, 113, 1037, 114, 1038, 115, 1039, 
       1040, 116, 553, 591, 1041, 117, 297, 1042, 118, 916}], 
      Line3DBox[{1718, 2143, 2324, 1717, 2144, 2325, 1719, 2145, 2326, 1720, 
       2146, 2327, 1721, 2147, 2328, 1722, 2249, 2148, 2329, 1723, 2149, 2330,
        1724, 2150, 2331, 1725, 2151, 2332, 1726, 2152, 2333, 1727, 2394, 
       1922, 1923, 2395, 1728, 2002, 2003, 1992, 2015, 2027, 2408, 2218, 1729,
        1952, 1953, 1938, 2334, 2208, 2092}], 
      Line3DBox[{1733, 2250, 1854, 1732, 2251, 1855, 1734, 2252, 1856, 1735, 
       2253, 1857, 1736, 2254, 1858, 1737, 2255, 2153, 2336, 1738, 2256, 1859,
        1739, 2257, 1860, 1740, 2258, 1861, 1741, 2259, 1862, 1742, 2260, 
       2154, 2337, 1743, 1924, 2261, 1863, 1925, 2009, 2010, 1926, 2215, 2396,
        1864, 1939, 2088}], 
      Line3DBox[{1745, 2155, 2338, 1744, 2262, 1866, 1746, 2263, 1867, 1747, 
       2264, 1868, 1748, 2265, 1869, 1749, 2266, 2156, 2339, 1750, 2267, 1870,
        1751, 2268, 1871, 1752, 2269, 1872, 1753, 2270, 1873, 1754, 2271, 
       2157, 2340, 1755, 2049, 2158, 2421, 2050, 1904, 1993, 2414, 529, 1940, 
       2089}], Line3DBox[{1757, 2159, 2341, 1756, 2160, 2342, 1758, 2272, 
       1874, 1759, 2273, 1875, 1760, 2274, 1876, 1761, 2275, 2161, 2343, 1762,
        2162, 2344, 1763, 2276, 1877, 1764, 2277, 1878, 1765, 2278, 1879, 
       1766, 2279, 2163, 2345, 1767, 2164, 2346, 1768, 1972, 2165, 2402, 1973,
        2090}], 
      Line3DBox[{1770, 2166, 2347, 1769, 2167, 2348, 1771, 2168, 2349, 1772, 
       2280, 1880, 1773, 2281, 1881, 1774, 2282, 2169, 2350, 1775, 2170, 2351,
        1776, 2171, 2352, 1777, 2283, 1882, 1778, 2284, 1883, 1779, 2285, 
       2172, 2353, 1780, 2173, 2354, 1781, 2174, 2355, 1782, 2103}], 
      Line3DBox[{1784, 2175, 2356, 1783, 2176, 2357, 1785, 2177, 2358, 1786, 
       1285, 1787, 2286, 1884, 1788, 2287, 2178, 2359, 1789, 2179, 2360, 1790,
        2180, 2361, 1791, 2181, 2362, 1792, 2288, 1885, 1793, 2289, 2182, 
       2363, 1794, 2183, 2364, 1795, 2034, 2035, 2418, 1796, 2102}], 
      Line3DBox[{1798, 2184, 2366, 1797, 2185, 2367, 1799, 2186, 2368, 1800, 
       2187, 2369, 1801, 2290, 1886, 1802, 2291, 2188, 2370, 1803, 2189, 2371,
        1804, 2190, 2372, 1805, 2191, 2373, 1806, 2192, 2374, 1807, 2292, 
       2193, 2375, 1808, 2194, 2376, 1809, 1975, 2377, 2217, 1810, 2101}], 
      Line3DBox[{1934, 1933, 2378, 2214, 1811, 2195, 2379, 1812, 2196, 2380, 
       1813, 2197, 2381, 1814, 2198, 2382, 1815, 2293, 2199, 2383, 1816, 2200,
        2384, 1817, 2201, 2385, 1818, 2202, 2386, 1819, 2203, 2387, 1820, 
       1322, 2388, 1821, 2204, 2389, 1822, 2036, 2430, 2219, 2098}], 
      Line3DBox[{2080, 2060, 2075, 2423, 1834, 1668, 2068, 2222}], 
      Line3DBox[{2084, 1932, 2100}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{942, 1147, 2225, 943, 1157, 2231, 965, 2297, 1166, 977, 2300,
        1177, 989, 2305, 1189, 1002, 2314, 1200, 1015, 2325, 1212, 1029, 1225,
        2251, 1044, 1239, 2262, 1059, 2342, 1253, 1074, 2348, 1268, 1089, 
       2357, 1283, 1104, 2367, 1298, 1119, 2379, 1312, 1133}], 
      Line3DBox[{944, 1148, 2226, 945, 1158, 2232, 966, 1167, 2237, 978, 2301,
        1178, 990, 2306, 1190, 1003, 2315, 1201, 1016, 2326, 1213, 1030, 1226,
        2252, 1045, 1240, 2263, 1060, 1254, 2272, 1075, 2349, 1269, 1090, 
       2358, 1284, 1105, 2368, 1299, 1120, 2380, 1313, 1134}], 
      Line3DBox[{946, 1149, 2227, 947, 1159, 2233, 967, 1168, 2238, 979, 1179,
        2242, 991, 2307, 1191, 1004, 2316, 1202, 1017, 2327, 1214, 1031, 1227,
        2253, 1046, 1241, 2264, 1061, 1255, 2273, 1076, 1270, 2280, 1091, 
       1285, 1106, 2369, 1300, 1121, 2381, 1314, 1135}], 
      Line3DBox[{948, 1150, 2228, 949, 1160, 2234, 968, 1169, 2239, 980, 1180,
        2243, 992, 1192, 2245, 1005, 1203, 2247, 1018, 2328, 1215, 1032, 1228,
        2254, 1047, 1242, 2265, 1062, 1256, 2274, 1077, 1271, 2281, 1092, 
       1286, 2286, 1107, 1301, 2290, 1122, 2382, 1315, 1136}], 
      Line3DBox[{950, 1151, 2229, 952, 1548, 2416, 1550, 969, 1170, 2240, 981,
        1181, 2244, 993, 1193, 2246, 1006, 1204, 2248, 1019, 1216, 2249, 1033,
        1229, 2255, 1048, 1243, 2266, 1063, 1257, 2275, 1078, 1272, 2282, 
       1093, 1287, 2287, 1108, 1302, 2291, 1123, 1316, 2293, 1137}], 
      Line3DBox[{956, 1607, 1620, 1632}], 
      Line3DBox[{957, 1367, 1393, 1623, 1634}], 
      Line3DBox[{960, 1369, 1155, 2423, 961, 1638}], 
      Line3DBox[{962, 1614, 1654, 1644, 1657}], 
      Line3DBox[{1132, 1311, 1391, 2378, 1118, 1297, 2366, 1103, 1282, 2356, 
       1088, 1267, 2347, 1073, 1252, 2341, 1058, 1238, 2338, 1043, 2250, 1224,
        1028, 1211, 2324, 1014, 1199, 2313, 1001, 1188, 2304, 988, 1176, 2299,
        976, 1165, 2296, 964, 1156, 2295, 941, 2224, 1146, 1362, 1392}], 
      Line3DBox[{1138, 1317, 2383, 1124, 1303, 2370, 1109, 1288, 2359, 1094, 
       1273, 2350, 1079, 1258, 2343, 1064, 1244, 2339, 1049, 1230, 2336, 1034,
        1217, 2329, 1020, 1205, 2317, 1007, 1194, 2308, 994, 1182, 2302, 982, 
       1171, 2298, 970, 1161, 2415, 1551, 1549, 953, 1152, 2294, 951}], 
      Line3DBox[{1139, 1318, 2384, 1125, 1304, 2371, 1110, 1289, 2360, 1095, 
       1274, 2351, 1080, 1259, 2344, 1065, 2267, 1245, 1050, 2256, 1231, 1035,
        1218, 2330, 1021, 1206, 2318, 1008, 1195, 2309, 995, 1183, 2303, 983, 
       1172, 2410, 1552, 1537, 1572, 971, 1571, 1570, 1481, 1328, 954, 2404, 
       1153, 1398, 1325, 1518, 1363}], 
      Line3DBox[{1140, 1319, 2385, 1126, 1305, 2372, 1111, 1290, 2361, 1096, 
       1275, 2352, 1081, 2276, 1260, 1066, 2268, 1246, 1051, 2257, 1232, 1036,
        1219, 2331, 1022, 1207, 2319, 1009, 1196, 2310, 996, 1184, 1558, 1540,
        1575, 984, 1574, 2420, 1573, 1485, 1334, 972, 1539, 2411, 1538, 1482, 
       1329, 955, 1536, 2409, 1535, 1612, 1326, 1591, 1625}], 
      Line3DBox[{1141, 1320, 2386, 1127, 1306, 2373, 1112, 1291, 2362, 1097, 
       2283, 1276, 1082, 2277, 1261, 1067, 2269, 1247, 1052, 2258, 1233, 1037,
        1220, 2332, 1023, 1208, 2320, 1010, 1377, 1376, 2311, 997, 1339, 1559,
        1338, 1560, 1488, 2241, 1336, 1486, 1335, 1502, 1484, 2235, 1331, 
       1483, 1330, 1501, 1500, 2230, 1366, 1480, 1365, 1618, 1639}], 
      Line3DBox[{1142, 1321, 2387, 1128, 1307, 2374, 1113, 2288, 1292, 1098, 
       2284, 1277, 1083, 2278, 1262, 1068, 2270, 1248, 1053, 2259, 1234, 1038,
        1221, 2333, 1024, 1382, 1381, 2321, 1011, 1346, 1378, 2390, 1345, 
       1510, 1492, 1341, 1374, 1340, 1505, 1489, 1372, 2403, 1487, 1371, 1524,
        1519, 1395, 1431, 2236, 1594, 1333, 1564, 1332, 1529, 1528, 2424, 
       1592, 1595, 1624, 1627}], 
      Line3DBox[{1144, 1323, 2388, 1130, 1309, 2375, 1115, 1294, 2363, 1100, 
       1279, 2353, 1085, 1264, 2345, 1070, 1250, 2340, 1055, 1236, 2337, 1040,
        1222, 1388, 2395, 1386, 1026, 1209, 1515, 1579, 2406, 1578, 1012, 
       1197, 1544, 1585, 1584, 1380, 1514, 2393, 1530, 1513, 998, 1185, 1522, 
       1521, 1375, 1509, 1589, 1508, 985, 1173, 2413, 1543, 1542, 1577, 1576, 
       973, 1162, 2417, 1609, 1611, 1610, 959, 1619, 1154, 1629}], 
      Line3DBox[{1145, 1324, 2389, 1131, 1310, 2376, 1116, 1295, 2364, 1101, 
       1280, 2354, 1086, 1265, 2346, 1071, 1251, 2421, 1583, 1582, 1056, 2261,
        1237, 1390, 1587, 1586, 1041, 1223, 1566, 1565, 1389, 1533, 1534, 
       1532, 2408, 1027, 1210, 1527, 1526, 1397, 1517, 1531, 1516, 1013, 1198,
        1545, 1525, 1568, 1396, 2407, 1435, 1590, 1434, 999, 1186, 1581, 1580,
        1343, 986, 1174, 2412, 1541, 974, 1163, 2422, 1596, 1606, 1605, 
       1631}], Line3DBox[{1364, 1630}], Line3DBox[{1608, 1621, 1636}], 
      Line3DBox[{1628, 2425, 1622, 1598, 1553, 1569, 2419, 1554, 1555, 1556, 
       1588, 1557, 1373, 1504, 2392, 1520, 1503, 1490, 1506, 1507, 1491, 1342,
        1493, 1511, 2405, 1512, 1379, 1347, 1494, 1349, 2391, 1383, 1350, 
       1025, 1385, 2394, 1387, 1039, 1235, 2260, 1054, 1249, 2271, 1069, 1263,
        2279, 1084, 1278, 2285, 1099, 1293, 2289, 1114, 1308, 2292, 1129, 
       1322, 1143}], Line3DBox[{1637, 1603, 1602, 1394, 1368, 958}], 
      Line3DBox[{1643, 1647, 1651, 1563, 2430, 1642, 1646, 1477, 1476, 2377, 
       1117, 1296, 1562, 2418, 1561, 1102, 1281, 2355, 1087, 1266, 2402, 1472,
        1471, 1072, 1547, 2414, 1546, 1400, 1356, 1593, 1441, 1057, 2396, 
       1415, 1567, 1414, 1399, 1354, 1453, 1439, 1042, 1499, 1523, 1498, 1497,
        1352, 2334, 1641, 1496, 1495, 1650, 1384, 2322, 1640, 1645, 
       1658}]}, {}, {}}},
   VertexNormals->CompressedData["
1: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
qow/P4WPspw0f36vR83SOd7Z1VmQag4uYWyfxotilQHvNT+j0oVV7nenZsAy
/vW3U8sERkkI/Q4ZT4F28V/fOQ4HwK0fgaJ/VOawXv2gXvBCLbq5nNRvZZgC
foPxJxbl86jz5nwHjXwT6rBwrugXj8M2qZXyN/XzeFGtROt6USUe1tWV9zWY
AIGoDW8p9ov40FF5vHh7DZaOcOpmHRmFd4uvWeffzOGuY1LsKk5dePqq8XfX
onG46zR0hFGGghWuVmq7KsuQq5jBSOtVJ4gJejTKn+vCNcn1D29tcjC/4pgT
I1Dgk+M0m2t2JcwL+Bzhpq1D1ZziW2L8BHj5e5oSq2SUEEip6g6MRdGpFwbr
xj2gucGZ3p6DwIv4iZf1Ui4mGh3mO+naDDSfSZ1010mgtXP8nhlXD2ZcsDuT
XNMJl20E9SOXKeC9Rok3X2pEI4FC9WtKlTBNYrjmrjINQZ8v78vgHcGNwsN+
04ETYGUUXaIpOwNkHrWDjrLduP4yYSLq1hTYeiWv3NowjyKWpgY0S71oOjNx
KeXnKIiU3d339DcJB4jjPQyPm9H4cX1I/7Z/f+/8f+P/63jtjbNxznRUHfnr
9J63/GOYRgxJ7Foeh2v7m7ineGagX2idRXZ6BGtvb20dkPnf56P1f+P/6/jf
oMPsGZso4FhftXi5qBMDa143DLL89+dXrmVLfFXVJuC4/PTKd/86ZP4WZhaZ
mguXpmK3zdkT1HXGTZiYr8FLngvT66f/vf/y38bjpQSZBk8Q4FF9X/newVo8
9f5R1LvKin9e/9kgXEjGYwRrUjq/iq+M4zWjkYu6Sf//88//PxWfF2/Rt5Al
w7axwNwzrztQJWGHnpfUf+8T8n/j/9/EBeuvK8YHkTHO7ok9JbkB639zpk8P
dEFU09Hwfhoytvvc4Q/kbcNTyL4rNPO/97P6V/zNn26T230Etr0g02T3ROLR
g1PV5zYUwFVY53TuJzA1WV9xaSYCm5xeaZoW/vsczH/GZyefTa0t4qHudDX+
6Qr43nCvJ7d6GOo/ZfuN1/WAcw1D3EpYL+77fpnv/cNF2Pbs3Zz76jjEapcV
KKr3oz3DzJtChVlwZIfCuZMLwMJb5teX2ItlOlvHfWmGQHRj5i33uknI0Nfp
dY8dwN7TejEndaZBYdatu9i9Ch5M/Erck9GLbkoL6eJXyNDTV1zJ/7QX1P3y
JauODuJXT0eNb84LwLv61+5N2QzEMVwq+546gJp/pRqD+CfgqpSyuZtrEdRK
dhq5yfTjUn4v0suQYWnud/o3g0H4WxK+unXLMH6TPlbzhG4eiitXT3QULIBi
uv6Fmi19yP4jcM26oB9GT/VMPLw8AYsNPperPw+jkvjm32Lh02B1b82FObYZ
N6zKPHLg6cU9rrf2vFojwfL5nYYeXmXA81BfYzlhBK9Eufym716Ey0df+PPP
jWPlpRzavtEO/EgfPDpfPwcawndbWpcI5GnQ1jLQTIP7wkuZiTWBICZsnWk9
SmBC6r4N7Kfe4pLL3/PKi7mgXFFz2OkDBZy5w4/SP/uMjjfP5knP1kD69c29
L1oJCOOgPRC7oxBrp/mmpH4kwmy8ZMsDYwLuMbjsl1qvQpoDzzN5pMqAxrv1
osZmMm4MDZ7MtmkFf6mOTJGBbmBXoahH0S8i97GqhDcT9RBSeFEXv4zChy8z
DxYGJ+D5/trJsJ4BHNAXFi3nnoFOG0cLj5FFqE0v9p2N78FgtoZgnq5uaHh5
7NnlMjIwRsWpfjagrmudSbWnNjRB0ZU9QhZdbaAP6mvCXUNovYH/vanqIrgS
meZqRvPwIcQ2Y0dwP87HWVymuTMMWwfHls6NT8GCRDiHaPEQ3q+6pnXq6SS0
fFQSDNcikPmVVKcWUQ23Ao+KGJaWQfUFffqQMApcKrfvkeRowy6p34bPblSB
T2uGRm12F3bPbw05ubkb3St+FrCbkWCyLXxJ3y4a3zXojVIeDuMJD7qnFiYk
6H7rd3D3xWa0a1c787dmACcs6sIYxUgw73UseqPrAjRoTU5Le/WheXny6VL5
AQgIjtTWtx2FT0LreuPXxzCV/Fxb8uUM5HobunpaTaPv3MAAc2knirNsUuqK
nQaaFVuLtTQSuElKHTR51IXpC0w3zaI7wYkz8ZccBwnqS4WXzVu6MT885/mT
kO7/93wE2f/pfIQ+41u5/KcXIJODl1HLsA/py2rLvmkPgrfSXQu7VRL4Mddr
Kk91Ybvui1vibu0Q9kj7O8MlCoSRkw35mdvxcP3zj+b8deAgKP53tyoZrBvd
2b/GdmJBrO9Vqag2YBBbtgrKIaCsnl82va4UFUR3fbYpyQQOJ7m9QzPzEC1W
q+8Y0YcibrtqCfMhUJn98HLbKQLY+lXpw87UI6szSPq/KoYiVtE/RdydoGmc
d+aO4wQGGbhGb9Oeg+0sS/s2jrTBXJcc2e7tBO7qoOXrjZ2D1w9I4QaRZAzP
FpegNaqE65Nju/bZUXXKDibW9xNkNCjzN2ugq4crvLLqfg86gYefKUU/away
6qasnkcM4X6nhGpa+3EQNBz/LOdEgseCYnddf3chv+UaVhp1QffnyjeW1WN4
4FQCQ5/+MMbGrD1b/TYDzykpyf4Fsyjgbu/Jmd6NHOlh53z8J+BIwN73x4Om
0JfuSW5EaT/u3rbUaTkyBUHLty3J/2Of7aLcN1+OLnQL+zma4dkIefy758wL
52HJI3bReLAHf2+lnSi2G4Gg//hgd/1PPtihak04EDMGWmH2ok8e9mOy/JWW
k8fmwJyrmU9Yux8M5lj+PHbsR5mfwayPqPgLSin9IBhSiS4SdHKPSR2ocOhT
XrMkBe6Qw2Uc5gnc9slhp1NONDh4HKZ9uSUTNrB92xXmTCA7zdnhQsYKEO3f
VPv6NsLxy0WSA/cJfGhz6tFO1woQZxG+uxBZBuE7WqUWNLLhy/21j3Ffx/BX
j2uCGsMicL5n5qzeTUDCG+d5WtcGVOHUy0uijoMl2z+5USio0MRaYni+Apeu
PRx3Hm+CLc4ssaXbCHw56Wrjuoho/9Ck3PxyI5hzllu+fPwZZD06V2xzOpHM
mKAb/5QMF5MeBT4Q64ZDJnLTtNHdOGWdXSNOrbs77JpdwV8yIPanznptSTu6
hX7/Y55CgbVDfa+UipphapuYt9SRbhS43xpWcpUMz4/dqDbtTYRIG+dLXpZd
qHNs/Ou3CxRgUv6SFBZBwdorv+iGZDLghAMHl/SJDjDmrWB9T50/0+OQ56+s
66DHR37Kd6UWbsbONAtNUtBZ75cY1/UGsBcuqV/srIHjveI7uocp2MdVEy0U
1QSnlDjW2GyqIMbs1+TBrmJspZx3L5NsQ6M1TuJ5JQVe82fq3Ziuwa1qcrmi
lh242WJ/Z64QBTzcSmaeCSGacpmS3y52o6lO7fOUVjJIPs3eaCOTDT+MaXpY
Rvvw4A2Fxg2mZKgdNGl1bCXw6nYNpePXY5GlmG37EcUi4GQy9wjrILDqOVMv
MsSg69uxg11+hTC2/YHYsWECRXglnxorheNO0s7Bs/F5sMP8aIS/AgVbRXuD
H2e0wobUs8ptQ41gp1Bf/unGIpZoyPQmlLdg26c/asYGw9DoEixvrkNCxZNG
EZXqjTjv71BMmzAAsyJG/rcpU5B/yWfCi3cM1Xl+9Dpsm4AEEQ8ZC1sCDPkV
bzl31KD57O69qTtzIGZR6cSvRgouEHluumoIb857PG/e1Qq3/uEbb/KfeNV/
4h7/iaf9w0/+90MRY5baEuB3moi3lezF5QqVOYdwMmy6p1j5oNsR4mqjCyzi
uvEsX6XDfV4K5Le/8OgZSEPKmdEzJc+6kCudNvLqaQocDw0+GRpAYEgI/bNN
OXlA03dO7Zt8JezXox1Dah1xnzCQ3O5XDlYjj3Wfy5RD8Xqx29OaTuRWSltp
9RxGubqTE1FRCxAclH7BYOc0fkr33pu2swst2KtuLA9Ow+u/pmdeNBPoNax2
W1qyEJbu9j3OO/YJPMe2zPrVEhi+WLyge6QYfia/1U9JTIaofauTUUUUDNs5
55PAnI9p1p/eH5ltA5WqxoMsExRMlhIxfHM5B3trdj2uX26FCj81CnnjAAjq
JD07UDmG8cSHq1xfZ6Hxheozv4elkK5h8iiJZRzbgjJD1DsXYJfq2Iv4YjKm
mVfaxmRVIkXvlyNnSTcY1YUtnttK/d1ZNsrOJ+UoxWhyZpt+FyR/0VlfcgnG
lNrBSkHRDjxtdePFb2o9nrk0nnCGn4CNpTqkii3NeGjnlp1/JbMhZp/MHS1q
H3I4J6QjrLkWy0tcBJ0GciDIuUunRYKEqhe/mDoO1MMITe5SzNNBEFnWvrDz
CBn7jQM9zCoL4EZVcalcIJUHxXaz+baNYm/2xXP8OeOYM6s1MmE6DWcOMuYJ
55FhQrfpxtCmLgw1fsnG+rYBnG3ztznykdFsmU2cTjofTCWU+98N9cM3wUHu
wFkCvU9coRNc9UNHkx3b7j/O/mc/LLDofpTrBQX9kr29327+CMYRMcE85f/7
dNkbh9JXqbwE5i3031A/loPxcYS91d5m+KZyb6T7IoHPrZybfrgmIXORjwuJ
9G9fcd4zZvlHqH3jZk77Iu/EWHw+SmO8fy4HZqsd5HZPEvjAJytcmyECb1/d
eBnUcsD1azjLWs4irtiuPVnyeot3HryWZf01CtwnL6WIx8wjbetUkrYnEwZd
+DjLdGgSHuh9NNj9nEBzlbELW5JiIW2Ik968vBrcVFebAu9S539IxiWp9zle
bAj7Mx1eB5z8d2zHAwn0dJHJSs+OhmHRJJ6itWoILd1p3NUyA9+ahUa1V9vR
x3Al9k7wv/cjpLYY32EaJPA6ZdJFIj0P2R88iKs3jPnflv+cnCK+DwSVz6+w
nfTTaAMtZ5JGT9MriHv9g/LbmsBHzKe/BUS8wYXxOyIhm+qhc1d4uuP8Ih4u
OsAXV/8En7Hk3MILo/AiJ3X/jl/zuLzHm056LBiqaNjqOFImoLD6D2+MAwUP
9CZqT+q9o+YhAmLCOkF4R30ZKxMFn73/3Pua7jVK5P9iq6HvgaaPYxerOMkY
vef16tPYPBiZcvmqzjoAPHxCX2lzF9GWQfo2175aiNItsKza8m/fUdVfOstV
FSTMrhyzvlKTAr81mlObegfhjRHn+VNXKPjbsc6qWDsYzne7cA2bdwHZvILZ
1JJA7VqlTbb736J+WM/Ehcv1UGYxGamatIA2usO2OT9LocFe52rkxXHgk+HX
vkTFW3Ts7MNDCnHYEGe7FwtyIHVwo0WyHgmz1KpH9ux1hXiVe0Pbk4f/Oc8v
6/xnJrkpeMGINTFuOgjLVc/KTOT9Wy+T92zbbDm1gKcTigyWirLgydE6NhPR
caDIPPk1pEtgQFiL1VW/eHR8rVGxIN4A/Hke1xt6CIzLPO8psykJz9sYMkqa
5kFwAPfKKBuBqqaHsg7StgDH/okvl24lwtH4iWf7vhI4XWtSIDD7EYqL6xkP
n3sJKSWWfFN3CKCQSo8w+9cgLd0Xr5yiHPBoTHhuRtXd+X9kD6+4vUO2sPM7
zg3kQ3qIxql3IwQeum2oejz2DYaqhvxUOJsHna7n77yh8k+54qHn329l4YnZ
DVV2DyLgShb+vfSdQOvURq3nawngz3eiwv7wSzj0KKdIboDAmzN7X2ieiUDT
3sNb9L3zYS0894AldXz1GPrj92zeYmMLr4KCYt5/jf9MpqJjTF8IvOUndohO
Ng3OBHh+O8/qD2ojMTeGqf1Di8n6xkONb/HvlpEqTrv/fnyP1XyKwjiBUu5X
N57MzUEnpeuKvS7v/+txKLVzDEFzBN6j52OQZsxCmYxnDL+2RMDz60zdBWsE
3jn1h5uyEAdFZ8KO/H0T9F+Pf/fdJaOn9tlwyC9vUvZUI9K8OD2wKkNAosCM
y4HmNOgXGBVRKqvHHabl5QbaBMh3euhxrhUA7wkvzvX0ZvxcJDPiw0CAO4P9
kdvh5ZCI8rEZTq14h6d/l2wpBYJuF5TvWa2F1HIP9hfX2nGmh/nDsXMUKNoz
xbUU0wbHb9VdvyHbiXuPdMm8NiCDyZ4LuWY+/UBvv1QurNGNswNvQhx1FmH7
K/1s5l4Cd5fYBd6nzUSjqoTqeo5sSDoksMgV4AnTNCcjj9DWIyff6ZOq1D5s
fZeRmPiF24DscikT4rXYNHInt9CbgK3nJWnHzaj4cnjYTxZqxA/lk2cJDQJk
eC+FvKx5D1eD1huUK5txz5ZuX09hApZyFJkX+FKASXZNPelHK66POyh4EBQ4
WPbx0L2+AmjstfmVsrEDe/rrdz4MpAAMnNSuP/4R8fPuRz4yNXh889lrl30I
4PburTDX/oAL2unqujVV+GqehrMphADfAXflhq4kDBm8znlzpRbjhLZlx9oR
8HlEaPZgfTKqfDik3MfUgE9dORjPUvMvHHemI3ZXMp5leX9GKr4Jpc/TpTSe
IEBCq2zxY1MCGu6z2H78RwsWRGf8maQjQPBUhvpoQjBeXPz9RSunHWUqj3+e
KaNA8ru62DqCQLOHaw6VO+JgqSjpHdeXJOjfnfB++l4+8kuwmRasVGKk9m/b
fi8Cvsak3KsfzcENdGeiU5srsCTskvLQawJipMX2LdwrQsaHRmN8F6sx23CI
Y9magC40kRKYK8ULzfm+ahM1mBosHnhXjYCnCrvjnSbKUUDcoTCnrQ6/35k+
xHWQAJfVmds0pEq0iuRyEJNtRNGbhW0836h6YcPHlo+F1Xghvjq23/wzWpf6
rfTlUuBH4b3kufM1GD83Kvp3tg1PR1t115n/+zzW5BF4561SjhcnbkXryFSg
mb2o5IW7BGh+OS0d1FKCIX7d9n3K5Tiybqj6w4+AiNOk2y8DKlHEk3Uw8UIl
psm4Gb++SoDzDC3wK9YgT0h0srBPFdpyw8TCYQKq6DeqNgXX44iOu+HMajUq
yn2RWKXOvzv09/X8V834uPj0/f0ptfgtYDehTO0bpz7tNUhLb8MraTWa4g31
+CeKJX2ZWhffaH8wHbTvxLcrAc4aPk3onvxy2CebDBzJ7+8mHe/BrFNDXQam
rXi0uVReao0Ex/4qk0959OFR69tGh106sHVXj3T+DhJczeRXYE1rx4tqw9+b
JfpxcuzrZCAL6Z/5qSSdUmTkqMb5dzI6a42IcWZpNVf0CKiN3vB4d1UFag4V
Xl85UYYUhs9u350ICJ5edT45XouKTq0ie+rL8Zq8d4+oOAGMRZO+ViqN+Jbx
m/N0TQX2PujTurCBAKH9Ay/qHrTgVBDv/fRJ6n3uL7vLVEABmt97Fx91t2Nn
g+s1U6FqjFWfVmbToECIXK5xNGs3iqiWvL/zpgaf6vrc3FFMBq+4gnFn1n6M
4lL5MXC2DjfuFd4jPUyCu/SLK1Ljw/h3+6+5C7IN2KjwroA1dBHsjB8dpbwZ
x2X/RK+t4024Jf96r8HneWj6bGT7ZnUSvwd0tLrztaGve5X6kbRZSNeVTFd4
P4KPhvNtxpb68chvHyMZ8ty/97NYtt4JMajDUm6cqE0pxe96B1KOniZAPNC9
oC27GgOPf3y/plKCZ77Tel6i6gFWexHn4uBGfFJ7pGFADPER/V+CZxsBRXKc
6mXU/PzlGOwQtC3HL/rsqjEtFCjdVHc9IrYdP96fKiS0K3DiYEXNeUcKfG7s
95N/14WilnkqjzUrUca9Z/LNMhnsRV44kNX6UDVY2ufx9Sp0zfixfbc4GQYO
5UWGzQ1hDGXfWKZVNfofqRT9xkmCjq/xR7Xkx3EHR/sBk5s1aBiVoL3XagHm
Z3Z9svScwuExMbu547X4LmpIyIsyCwGWl7bMdc4icv+24KSpw/5NGg8OUvvY
7EFY8T+2gOe2a7hmcDSikchDCoiNU++vivWPxgbY49a9d0B+Et1/HvMTKPp3
Pv8VPxRHx/F5phl330oZ1HYqwkZT40HTvxRgQijQyGvAngu53tevFWJQr33L
gigBBg+u0kfot2EAj9vmzR+L8dYr/eRLVN7bR5zh1f7YgWyq8KmbVIKsh8MP
XTajgLuK8KFQh27soHDSekAZMs7SbRCbJ0MF6fIFhuE+/FT9+kntK8QZtyTZ
cGkyhPDeaO9jGMaWY68PS1iW4wEnnvtd0iTQaW2nl2AcR17UmM+g8lxa4Le6
8YoFyD++9MxmwxTqmH/tCdxWgS8Y28vfR8zBmbezh5dUZjH98P7+JxnlmNrS
q1wUMA0ZB/+0OgUuYLD9KSe1LYh98fjkst04pDNtS7koQ9WtH2/pXlMoxucx
3HSzwv2QtNer7czlVmS8PVMlL1qI3BFPXh8coUCTcZUt11wT8lhsz1sVKcCm
uT4OWw5qfvaOB/lR+UFg7dx0lXwRujZN+xx+TV3X3hyjP8nbhdGJFpv9TYux
YuMFQl+UAjrKCnTLzL34WJIn+ql/Ce6NmshwiCNDEJ8Snfi7Acyx1jQSTipF
z/Hz5/up9eh84LS/1cwIbqsfNrCPK8O8e7oykZWLwPxuyJWgmUDOp/TubEqI
RV02rraHFiBTK0UjbXUKn4fbS/CeRdR47e1bNDwL6upsD1f3zSF3quIFqd1l
OHuxtdwmeQr2XUo89EpiETcf5rihaFyMHdU7Ct89GoO5XW+2cqaQ8ei35TvP
NuRjKLD+1T3XCwd9TtW41LRhTf/q5maWAsxqMeA4WEIBssmenoXlzxhx5K7I
E758fN33/c+BnxRQfRnTcW+2A30fUJy9GAoxKlBa19SKAqEC2ee9qDjpPklu
z2EswpIJ9qLNP8jw+KXNxhrPPrR0YhxmYC7GDRTd4q/Ufob+mflzqSNDqCu8
n09/vRhXyTb7wx+TIPjWXOJbpTHkd2vdqF1VgpUjfxu01RfhWaCULPfABN4W
qfZIP1iKZo/OTZq9nYftCfZLyZXT6LeRsyhytAQvTdntmDg6C1ejqyU3ds1h
C5m5+IdbMWpliMsVTE1CxyhZS5iqm3z2mexWjS1AzZ9es+7Wo0ApkpzR/05G
+vhjLzjEc3Bh+thRy7Fu4Ned2pKuQWDztJGP8aY0tNqgpWAq0gB5Foc287W1
4zH7fsWTW/JR00X676e3FEjaaiJyeKgV506fKNwvlodcnSLiWlS8uXyxGRZi
6sI59Vt3Ain5VD3y2EzxNAXSP1+sr03vwS9qqie1egqQ+9mMTXYlGa6w+G9v
7+1Hfy7+KrnCQtTdRmPNvZMMxPpZs8fhw/hgw7ZJgSdFqPSu6+LRIyS47N0+
xLFpHN+5mozu3VuM0wEl3VsnFoBXNvm3z5tJTPdn2ct7pRjj9TaJsm2fhz0H
o0raHWaw17Qqv72vCDk/aZV4PpsB14Tzesnm81ipsGiz62ohnrd9kkYvPgny
LsxEHw8JdfjQqcYhD1n+7Bbk4xgB94C7G2KOUvBttKBQ96Es1HV9pfy7pgto
nqmCyS0CFUaKor6NJSGmF7h/f1AHdXpm/BuzCaz91vb/NPfl0Vi+37vSpCRT
gyaESBSpiGKnZIqiVDKkzJWQMSoSiigZk6kQESHzvM3zPM/z/E6ZI+q837Wc
71nnt1Z/fM76nnN+/+71rOd99v3ez97XtZ9r31sUkpLxSIpA37GQPIjn81jc
UtWEWoe+fDDhSkeh6baeSRsy8DI5VTK1NOCm2xQ2uJWGU5S2J3xFZNCJMAWv
Pa3IJjDnxDyTjjY9phKMrGTgOBd61Ke1HceO1VzNL8pAA6kExTBP6vtoeTDP
krUbc4K+ntZ+nYmc10Nt2VuJcFlDUCl8og+l3WRLecSykLWFI6GynQBhfQ15
kDyIdIEpBYfjslCt2EKjxHYKzKz9WWekR1DO9fKTgxlZ2Jtw8MqY1wRUpI04
X9g+jhb1NtvDd2fh1s96l5sXR+HypW2Xbw9P4spT+srcpxmoyHNFTtpvCH7b
RdDnmhJRUffxB+HoVKyhkHJCJnqAocBv6rAGGefuP1T09EpCMYZ7zcYdzfC7
UZO/z56CUhMspxu4v+CMSONzdqky2O6zFGIzRsGsZcvGqphPeFYxveqRYTJc
XpYXPJPWjH7iZhTdK2kYctnk9BY1MpyT1KI7+K0R3fNCLkn5p+L1reJYEEUG
pvsNBzazteGx00onfRnScf6U0ChxnASCl3fqp4134BYlnojWynSMJQXc+XmD
BOfKU+/uP92DNfVPRpztqPGhLPvIKR8inDrK7U1gGMD9pFheKpDBTeFvt3u4
EKC8tPJ3/eUhDC+9prRRJxPbYm6V32OeAp6Fp6ItnSP4lGVdz27FTKw4+8nv
3s4JWGR9eEcuYBxtHtZY/X6TgTaMp3e4mIwClZAaTF+ewh87YgwzR9PwoFQA
SyLtEMjb2uo4pBGxP6kgkZkjBdVi6ae6eroheYhzcfAZGX1pd2hHP0nA5R21
53dtbYZYl482Sq8omHROSDaCLQqbzhhMiEEprNg6cXqTKNhgU/CDfjgQo+g8
M0/+TgSbEMO3t3xbkEXcQ5jyNhW7BOPf8x0nw+r+1yLPNrej0LF3b10k09D+
Vnbk71wSXIiLfvRkohPZj59lCRpPw60yWxiHD5KAVUmu30e+F5ce6Z5jf5GO
uxxN5OxViMC05OdfFTyAjw/u50tfTkfm0z4WTicIcFcvIJ7YO4Tr24UOXD+Z
gXpzdsljCZPApKp4tEN3FK8N+Z/h2JCBXwiqfILh47CbpbGbjnECh7OHjw9S
48+PfQcuOE2NgBjzhGtR/BRmTPkc4XuRiizLlAKlZ4OgYnSGc98MEZ0ta97w
1X1H2h+eSqOELtB6+TSZEkzGId+dHD0Qj9O71nW+udYEg3qWPNe9KWh7JS3a
0TISv931OBRk8M91SuezD31uTU+G1Cl78YRXVRiyY0tZihgFQm/JR67SZAKX
c2VPxc0a/GG+uTCcigP5RrogNQtB//7d0w5C9ajHU9OwoYIMcxIxarT1pTB9
WqJ4XKwR9US4Il2vk2H+5eMHXhr1MBxff/LZvmb0GSNddXAhQcMg4XdK2xAs
r3ve8Yi+Ha3nHdRTD4+DKM1xaZenRDDnZnnzTbsVd/x2buxta4Ys9UZ0ZSLh
17e3X0d+LAVWQ8Y7lxw7oKj2tdzt3WTs4Gn0eMoXC1KR8cOmHq3AUcAj8baO
grGlHsTPUUkoZ7in5lbYP6+TuLMP/YzVdAMmQuxAxOtK/LqhpCaGyjsMXobx
/NwcCI49r05KbqrBwO8RFhRRCli4yWedOBQNpJDB4ac769HamSGpn5YCowur
YsvLKTAzb2urYNuIcom/rzImksHwL99Z/uc8cdq1eeIJa/PEr13L3T54cQoE
CpL2XSa2I79tyqhnaDcIr80RJqzNEbZdmyP8T/2laeXgHXgYjw6GGgThPRV4
Q21UP/IOBdqDwy+sF/uGHBLEhzzWVcgQp6VpIU0BvReF29US4pDYRcPv+qgW
34vKvVrPRoHTWfXjUQYFeHDskEppYhk2SZTlpYtToH7/bAxnUBF6emWWX6yu
wG2NQxxHt1FgmN5KJtWyCof0mq4dsC/Fc5ypP0w6yCCqLu8mv1CPCdOjaef4
ilE7sVBQNJQMY5J+hvvca9Bnvl7vxZVsTAy8r6e2kQIV7MGRj7kbcJ1wuKrQ
v/CGLyFUqYwMniytq8/0m1A+490UW0EuTrM8kFY2J8OMuWLdMmcr9qc1/LJg
ykeORom+0J8ksKYcZ5iz7cAyxiDeAT1EvF6Sk3qZBG0ixACt/AG8PCubcKCh
AG/MfY5Pmp6CIWWv/nsxw/gme2AgelMhTvrzbH45PAH27PfEeSbHUPiO9C/+
rALcv/7jJNfMKJi5TZvOHZvC3zeLL+ZdQqRnB+6ypUEQix2IqvpCRpvutNMN
1Dz48JNRsJtkI8CL+kM/vlIAR+eWvP/kIbew/2TD5bS//o/p99mnT59sxDlC
Ic+RpSzsMzgQ4xtNhqKhlldHXzdjTdrCPZ5dOZhrkmb1Vp4M+lPayTs02zDt
Yt0LnjO5aHQl+0tYGQlCY45OmhV3YtmLYJUAzTy88WvDzU5Gaj76S1+qRWzD
DxdqXjb9dWX/eSpOHnEwintuMwG5hfNaFnrjyGiqdPbC/Xy8oOiSFuk0CglH
bggoOU6hVLLfuuZ9uZiX31DHEjgIhTlG3V/dWvBdz1X+ucgs7Db4oGnMTYYb
wiGXQo3acVu4RBpTdDYmbOnQzA4kgdpbezZiZxdKYbp9QFgOyt12zn7YTgTG
8p8sbOkj2HFt40L671ysFpOpus8xAVesQiK4s8dRVqRv316mXNRh+9PecWwU
pP0y399JmsL4HSk/Y2uzMJY3tDBEcxAgwT8rgspbt5s6eLZcyMI3GQrzk6Yk
8CssT/1W2o0qnSGc8vuzsZ2u9zdTFBGe/oHh9cvjOJRkT2vJm40mbiefaPwY
gY7rW4WMGqYwUc+dI+YPNZ/qF4uYnxyEk8F1GgJve9CmfOTwicpM/JrlwKX5
mAhhkWxcyaNTaP9t+6ONrukocOitA+e+Qahj3CW1R7wXeejr8kghGeiUaCw0
QM1fb+eeSCi97Yb52NoNt8ZbMcjiTs6HrCmQOLFP8HlVFRgcPGa06N6Ko1zH
aQXukoD2uNq0yXdqHN0qunUsuAMvlI7TLLdOgey+AaH+k2lwiWeisf98G241
W6l8OESCV0avQyIvI/7pqJ63DmzErUfO77rp8ve61pIxi0K8TgdeHnrOx8jZ
glJPEoIFmgnw0f5DmqVxCyrP2Knc9G1DmqiF/e95iSD17dJGqZ85yNVDbq2O
6kWNMDXTMB4iiBmtfl2fUQK2Mg6UdToDuGAT31RFQwAxs6QTQ4YkKJe9Un1g
VzM+lApeOOHZAJF5g/cq58jAqmJ6XSOoGlfSEydx/d91sKMcI5+f6YygRVym
Yv5iAzYbqVw/LDj+H/ueFa/Ou9sLKBh2gnxwuTQVhRe0Y1c8//7d8J/aDw7+
bnnzKxGCnBjZlFYrkNZu7hHDVcrfz+vwbFF/yzwGB29/l3vC1I1TKZG+n+uH
/np98Pu5s80jRGBOEDa9yd6KzOxNohEfG/9jz//Oy6rL5HM7njgckreDmus5
Cxw8Pz8igoJHr7sPkYJDiky7P7IlwUZnvzDT+BBwTfqSV7JIQdl5/64H3FFw
UzUzw6zb+6/3v3F467yUzDDu1nnVve9mPZLOK1tFqf69zmO21ldSstZXYr/W
V6Lh++uyd98khixfW742XomLT6UMCYmD0HRA2Sf4KQnj7x+l72zOxtOZqQIF
P9phMYim1qKAjME7VjsvMWWjXe1Mu5h1A4S2Qr+XAQmVKgdM+eOq0TKase/Q
kf+cHvWf2hu7OrkrFW3QfKzOuMGxBw/vOcPSHE0Eu4ofO0Nym1A6+HVq5kIK
unZ7LS45kCGdd7iM9UkTluw78DRuMAUdw7NfHHMn/3u++fG1+eYLa/PN74r6
EAsFR8C4rbLCj7sd5+Z85keWR2HktnTI+ykqzg/cpxM0/h2MY8V8yB4+sCrX
d/F8KQVYD6zw2y3kYHrknTKX3hjgibrRp/+DAq7hy1s+zMYjny7T5i0XP8BU
jT7T+2wK9MWlLUzuzMFtYRfG6C79XT/w383+rSNCeJKBDDnz61ePU/mimnhD
tLNFMSSs2dPX7BJrdjHxiC5v03EoO/NLq+9nNxrfSHgRkv73/j6HSzTPDN9O
QG26YY9xSDdG34sdD9TsgxGmXg9jMhmGJetrzyVVYoW/76kQw3/OI/672ffa
18evmJFhmuZgzqMf9bhwLlUrVbr8v91z/qfs+tuurRv2peDRD4KxzGVxaFr+
Rdb2VTFkKE+kPOwexq2sd5+apw9gCyE7gJTx9zgfXmR7wT+egjS+jbsJURGY
95bebVvo3/NmV9Gq7O7T48DIPCD6uKUVX200GazlGIbJ6Fnf6xaTMDv5k33D
hnZkjzdRuSHVD93it/x0b7fAE+2SJ2097ahxxXiQf4QAc4cD6Z75DoF8vOjP
F9u7cOGpgEjKuzHYeyo1qi2rG2hqSt0clTpxKSSw6yZhEq56toUP94/Dr365
JC3ZTnRIi7PN5huE+pBog5NC5TBF+DgyR+zABOWik+2jRPhY2WZ21WsAWNS9
enfK9eDZnR2Cvy3GIVPW55WwRwuYOHQolR/sxipep811ewgwHZ/GROszDh9I
lyLkPLpQ/4JgSAbbIHz0Trmm50LG+98caXS9SuBmpy7RSr4BhqSWOO6otqOC
j3nY2e2tuIH88uK6QQLEdNP49pZfBeT/rsGt249dr4pf2QwTYDV80wHxpmFk
5chTezDWhB1FHt/GZcfBpjpbTkCnCVgeJp4T2z6EcpvfHrIqnYDpoy0fn7NP
IuOHtrC2pEZs6drEtCF/EB5MHshINKRgqwL/nTG6NNzLQmP1TrEM5qNEuEU0
R0GBK1lD6Xg73ohbeJbaOAKsQc/0Z93H4RMp0k/4ZxvGhFkqxOgOQabF6zvW
i/1wfmKoUSmgDbP/fPutrjoJiwcGt36zJ6GRm0tcykwtrASYL1weaYaqv+jJ
pQyvFmw37UARB+13RZuacZdhcd3NdUS4s6bfdl7Tb4+u6berNXe/KXnUB3oe
94yPqQ1ghNtvhlukMUh7KXTdS2sKRW5tdNjUVoUKefQfPnYNgNXC1fzD/pPI
tJToHH2mAdl6+KOmTQbhyhovPrbGi0+u8WJBk7pgfUMiTIsc2fWZvg19T11V
on3fDInqTqXeSpMgmJzUb6PRiRPHFX1FhnohUF3+knUVAd66PlL1rGtDwWdL
njHb2+CeT8yGtKgpYJSOtvPn6UCPuzRnLvzohJ3FG6U88sloZXfB8HRQLvqT
+3dFQwO0B/Dvl7Aho5T48YCDG4vx9oPanU48jf+O81lr8Vx+LZ6/69TTNbH7
13l4pQ5vHUuxmmu2OZGSBN1Ct2a3fSChxasEJl+6DLimi/47Ituhv1OqaGDT
CLw40HTj4Nc+3KG2MzLk+zBc3THMHcUxgb7yAjfkl5qRfq7I2vz5EGwvDEq0
sZ0CrXVZEus92/Di0pRL6eYe0CZzOG6pssB4XhXbF9Q8n/haaPF3IBk2ax06
+HSsFmaHtAb7ZdrwqEbhch8DCTav1SXWrdUlktbqElpe5/LuHs2A6ryRWumE
NrzdniSqXkGC+TNb5yWPtMM3Orbrg0HdGHFdM3fy0RSIGN5WfUfuBSHGSMlS
nh5M005sOOw+Ab63Ozt2Z1HwpsjLyfk7WfByvI+uhS4d5o3OxgTYUbCO8ItL
mrkILNK15iaLcuFoAF9RylEKTrC8YWTMr4TG0yrGlWNZYG5oOZukR0GWXmt9
aypvsBzzecHpmwM3TgYOuSSN4IfTJZVXRTuRJ/Jmef74CKTE3+fY4Z8HLOeH
ldpKmjB4jDtV7zYZhFNY5Iq2l0FQ9J5NLPkteM/i7bbDJSQgX2w8xcUWDhDQ
trk7tQUZpnctvztPhqZc8TQ6BgqW6D3QTfhTBGrGgzd0TCpAyC1nwP0YBTWq
G7RlmHKBN9PLrWpvJRjtu4dFZVS7JK/DluepEC545p6TcDp4ub13E0ujIIdg
rMAGhUhkLEPfAO8C2JgT4J1YS8Gn2w1mlcUjcKuzi+1MUzbkMLfrno2koAJ7
novjlQhktBLN+vil6B/nkTL/pZUpAyreaFq/O7+5EXc/J8Ql7f/7fVrtR8Sc
isk4ILdtjOl7GRR7pfd8m6sCobV61MBaPerTWj3quslr0qVZCtpdl66pYvwK
buk/j/vteA+UfG9lgXYKshkw0I2kZ0LtcOzVdu8P8Of4wg7lP9kgr7IUIi7S
ji+NFa0Xw0mw7Gmeys1QAjqiqnfMtDvQyczYOZyfBDJXiyQPBDVBz0R7JEPa
AP4RZnztFzMJtxQfTWtqEWBjeOxNXdl23FdPa8Yd2w6pe23C2HnJ6FrHMn0+
Kg1DyUkFm4paoGs0umcfPwU3st1Sea2ajEpRupHNUdVwiCvrROowBZMEP48K
+6bAjYHI1l0Bn0B1Lf4IrsWfY2vxR/XG9ZiH2RT8/Z6JSUEsCp4Vd9uXv0VY
JHd3v2yl4Lv9i+eNZfyg4pSBpK17FhxfW7fptXUzX1s31qVzfJIVFJy9ZjN3
nzYPVPoS7uoGBgNF0EEpvoKEckrzC1mZKfCiiVY9aKANZMybzJd/UtApSefQ
7Y+u6GZg5K7o8BnEC/KyLsiS8FvtGPP3r4XwoWjP4WOKHbA7hHS40536vnhv
c5Iy+o5vMmMr9rQVgzzX+U2DMxTkYbrhcifHBvnGedoymuP/uh+S5efuMJDI
aJ5xdercBgvonf/2/Zl5AygqqQZdvEhGNlWJ40+5IkFoupbQEdoCrvc97vL7
U5Bx0enHY/9voJ9OZ3z7TPE/7/urPJ8uMEBB9fAtIoPrktDq46OPlgV/n7fy
T+0zr/onNv+i4MLbwYK94n5g24nSV3RC/3q93kLKXA0/Ccu9A2evfymG8e/r
N6o96gDmzbh49zsFj++1j7POi8e03NeatkcK/q1H7W773/Wohm5PM9wryVi9
IDAcCcaQx74/wNGyEa6Xf0jNpcYZ++4p7oMPPHCdichyT2cd5Ii49yWyUdCP
MTmOfs8b3JP1wbz2UB08orvR2eRCwX6/bgMVo284+uRi8u7uv+N8CfoXrDpU
f3NnEp1OCXoj94pfRX9zKLgWvrH6s0LB5YRprRIuTzCWJHf4D70HVYm5RonT
RPB56aWRWluFMkPPyLZbuv/xOt80/mKXQd23H12PRVlMRYKLJjzBqHfAZjq0
fm6BAq1JCjQhMl9wYV/89qUHbmCmYRltNECBkrsEHXXtFDzLM5dWUhwNLfWE
HcLbqLgpVWcvfVYvqsdV+lqt/l3v+vv7SmEF1V/3sBn+h20f4VDXhiW9I8//
Y/vH8Wbw5NQyBR+PZlgYR4eB06lvurju7/OameiOFD2i/GsOWgO9qo4/MhJs
nLKyE/5enxm8aHx2PQUDWO6HiqwvRemI9tv87uXwQ8H2zT3qfT60W7rKnP6A
HO2j6LwpAQiUhgA9ahyrZORX3fnwMyZcE4l9U54MXzMbO/7Vx2dja8LHspqP
fH/uM+S1/z/gg4tq1o+XKLjCeH7HLetIWN2ZS5Cidf+P3b/AbsWGN6sdkg6y
ZbsItSKV0/wuLCHAjRqX6zLuVlAkZO008bQcX8ldEKy2ooAB/ZOUz4FFUDns
n+i+uQXPZ+88SqAjA84VfVlHxRVmb81pP/umwuCdM4q1GWXgO3i+XW6MgmI3
rNLo91qBB4Gfc9eZVLD5zFg3FhiDZxmNDrT7laDq0fyfTR4UKGM292JJ+IrR
0Qe0Jo6WofBmjpXyxxQ4Psh7wKjuM868NHl/N6EBuXgP97T2koHTQlTVSkMT
aq0O3LUwaEadnDsm6Q5k4In9taGjmYIOx1QsPFS+w+/2TvEw9tS/rsOgThe/
kFc6umwyuSx0uQj5ufoG3lOf59P0rqcFj7PwM4UzV9KtGGn5lXeTbCgQWG2V
UtyXi9JREt92/yxB0ZQHKepaFGh3ubjlzlQJRphPbthuV40BPu8YVRvIQPKg
qDb3UP2pthcfYahHfbXXKvrOZJCUj+EetstHhgW9+0mBBZhKd/vu7ucUOOGo
WuVwqRAzvQOOtPoU4ic6h1pfQwp0Hzp/WqCsGKcG7siUJRahQ+ovw3oZCkz8
5Xxgf+bNg+nEOhSl+1SuK1+O7c+dlu49p+K3iLsnLvA2YaQ6uwO7ayXSBuWX
bN5Ahj9MjU18Yq0YYJf7XMWyBmVFaDwu3CSB5dOVpcgHRRhSEG5z0Csf/3Bx
MruZUaDSU9j8/kAJulmFKRfsLkBOvcW791UoQDwRpSjbWY7CvSIZUX8KUFTX
XSuJlwJq/rdOHn5SjeL6yn6wvgjz1PJbn5DI1LiqoXqZii9PfWzhYnpUgs00
oz6d/GTQVpy/oCvZhprebHF7xkvx55ltXxyfk4De872pzcsuvLZF8N1R33IM
mmgOW+9KhLjuFsHDH/vxS4IFaYdXJSrmMxc0sxLArEanLJalFN/PXj7DYJGL
744J76vU+te8Of6vX+rLMYrTTd68Iw+ftSYXHDpNgXKjnd2KB6ox88s2foW7
iHSDMp/7NlHgSF1kaxJ3Pc7IHV3OeFWAHE7G+w4VU9ctP6Aqlb4J3wpHn2Cy
KMQ5i5BzY3pkkH4WMDRzoBXrZ47P3zQtQrfbEsk5XSS4e3Xjp8jpDvx4o6+b
2bYY+RZTasKYSHDNV1ltJrEXrZPfkEQcS1DlCHdfLZUvy4Wcdr+SMYhbuVge
FJuWolHPmyeJe6fg1bmLNG6/R/DLOcZIT8EyzPJ+LfDAaRwW3KufK3j2oNIR
3UQD1QIMc5y4z3aLCMWG0zZmM0RU3sS6q9c7BwsYDbqdDLqAX+aUBbyow9hU
/bcCU5l4/SutUheBDAoTwqExg72ob35EcpdOPr7b5G9buZUIhbdjzh/mJCEx
yb5r/kAmEmgjQ8obOiGe2STQdoiMj7+ljpwQTEGayWnLyG0NMMQg/16UswH7
VNaz+yZl4LWHIjHazWRgOx86x8bdhOxl6+9JR2WissCNVjs3MrSFP0vuWurD
yebEE8+tc/FuK1TYlRHA8f2MgypxED8L9zWwr8tDCTHT66nnp2DEJqfh4XES
Or/mdCj4lYaHdbU+MYR3wiOPCu53w2Q8lhUkx0ZOwjNessNmgg2wT8+yPjyQ
ggU5ki8fy33H07VWBLYbRaCk/LD02FgDKox+f+salI6nt1+g2ZlLhqix299V
55tQMv5P/MrjDNzMYi0lYkKGeB3SeUPDVgyGqAWD25koYqURt0JDhgjdMI/D
Q/3o7bhSEN6QjXbnm7IYPAggocP56Iz6ECp1BqXtksjBjn5uUZs/k3A1bINH
O9MoSvjf+xW0PwdpcllsRTrHIfbG1MN9YiTc+E6hZtoiFeWqfaQdgjvB7I77
9uo+MvrQq1/Ey4l4wNqKdZsB1S8uWa2KeGq+4+i2iKv9ggaPPVWjRQpBTl+d
51FAI/rdd2oYDE/Ds1y96zmjyUB7aJPodEIz/j6i++r2w3Q8XFEZ36pKBsbc
q/SSh9vwXtgFX0NJqr8i7pfVBkmQYvVGjag6gMKr40sSuln45JNAvs9Nql8S
eJuSOIRhdbJZB5OzUGlBROh32SRErjuguld9FJtPvarue5GFUW525IhP48Ax
I23Vwz+Bbrrv1eo9M/FwEM/ZkYIR2NtVrM9C9XdXq8umEMkU3MaeHxT2tROi
57NezbaSUXb/8B3b0G9Iy1P2xjKlAW6NMXtnn2jCewfC9SiFqRie+kzIy5sM
9nJzNSevUfPTxtQTTM/SUGhxsuGBOBn0H7knbW1qwzv35rM7JdIRZ8vWG1J5
q+1F59nWok7k/5EoKj2XjuUdhUN/eElwtoWeOBYxgNPhHDl7ODOR5UpLlJAA
AURcJfqsF4fQkbsvJkwrE+Mvw3Dx+0kQ3RTlL/tuFCcvhd1OOJiJl24X8J63
HIdwTb7HPsoTaFjHjcNCGcglbLJTPXQELioPTbrOTqGfEDKIyabhsy/nTdPp
B8Hc/3pR/AkStqoUvc6VTEaP4ZfCqaWd4KDnxRpXTcbDlU8Wz6jG45WiA22u
mxvB5WTAq4KRFlxy/jk/FJmKV9YJSU5zkeEjvfOfGcN2jLtmkLqqmoa7mJLe
7/9KAq+fojKa6l0Yoxrx9cZyGhpsqNB8TUeCx4wGXISqXhSYcjDf5p2OIl5h
98WOESH156+ZuLEBDFFKf+5Hm4GpfENFHBsJ8MkyMLjx+DB+cHNWuyScgRWZ
i88czSdhLtQk/XnuKNYK+if2ktKRGjYGea6MQ4HfcsAPowncYyyc9Zk2HbM2
lXUpOI/ACJ1jScSvKTSeOfZd6VQqNjZ80mHcMAh/ZF2CagrIWKnypfi9VBym
CspckdFqhIdJDwRdokdh1fz1KLm0E7/kSydpZw+DmeXDTef3N0NJ46da9S9d
OLQsrBpqT/hr3vcz8h+KzaHghU9gzfkpGUv95B7NnM35e/+X2Quui9kj4B0x
UMHD2o4+Vd/mme1HQYPfZMOPhXbc0n5uafVKA34UbHYyfkWET083Sj5xHcLz
r/JWOcVq8LRshUocxySkNCgXKCxSMPowzYBmUjTkdtKWbmN5DXWBPArSyi34
ydy475JdKnaIvuk5K0kG5TtikyTXfrA6tLN2h+gQXjyot6eSeRSm70mb7Kkn
w/2HmV+j9tcgIfK9h+SREri9+3uZXx8Fv6iaNaiPheBp+ZKAqR9pQPEOtopl
r8C0G29TKVuG0PDszLmpnEkQzj3sfmWKgiXK5bfF97xH+LLVLyP5O9z1/pUv
a05Cs/SdxLSYbJhzS5HkFu74+3rmH1rgI1JwJnQ66tLzRJzeGL6NO+zTX69P
gIbHjR+SQcSHwVHBtgpZ9auL2qn51+7q3BnRzRkQqHSfS2OkGndw6obt30OB
KU8B04eseeA0+9pR61Qd+t9ycaEbIoMH0zb7fe1FQDd0Rua7TgOmC54N2+xL
htZaLoVbzJVQLuIt41TTiF8NLC+93k2GALo/6XOHGqGuh/dbom4z0lYpMkrL
kKDOO0LU0JKISzm2gQHkSthxh85uy8UuCBN1WXpY9QoieOXFVu9V4ntKz9F/
4b3tir+ORu8JgF25BKENVFxz6vhb0U1AAY/vg8HxGyPhIndMkg+xFt9UmsUJ
UvEYt+1LbdbARNi1k46290ED6ony2wRScazDw4+DX7TG4Yhs2pLsg07kkfVL
Ta0ehAtr/cKDa/3C1mv9wjxyhG+8W+Pxaw3rijCpHOcrZyp261HgwQpzwj1J
Kn++Tmy3HqlE3VJPyUkFCuxXvuWdHf0Vp8/eO7ZXtgbd05Urzx+hQJifU0lN
YhRWC6SKZYnWY1XXdvv966g4/6uYR31rMxxQndRUGO3C2ld14s8UCaBnaX5J
ZUsB2jv7J7o+LcOD/Vyx//K38/UG94KIQry4UlQQJFWBPitRlzn3U+C7xCM3
O4FiNKv5lbtVvwpHXfZQPKbJwF/3bbddXCWmuvzYVnm+FMdf0srqjpLBtY/u
bcNiDf7aQla+U1aGJb/NGkSiyHD7D1N7dVk9jv3aGdbBXoyV6TK04Z/IoCm/
TVyMuQm9w/n2UsRLUCv6JtlSjgxlAl9eh/W0YMLHmxF2d4pw1jA4NG+MBO3h
F69omdXgbBD7s3LZbFy4sCxGpOI6xs7ZEoW39Shb2OW9WzYHX62MZmyh4pNb
CbI3rAIbcW7fdr8t13JR5Cbl6qoXGerlc+88zWzGiyfo32s/yEO61OMX1E6T
oWQ13Z1WtA11pbQtHF/n49H332PNqPnlyuAxGYmDnWh0ccnyTAyi6P3MQzH8
JMhOf2j82nQAI38+4psrKsDLGhGmR7gJsEvtWthC6xBe4yvnGqDiZ4e0c6Ou
LpOgOe7qsddxFB+zN66EEAvwiIsj2/DVcYie/Lh/4OIE7lvlijXRL8Bz3hFn
2S1G4PGNm+qNpCm8drSAvut9Pm4794SzsHsANqlpJLz1ISOn9P2iXdpZOD4c
HPm2rhFMo61AnpWKE/b77n0+kYVBAue9DeOo/O697depP00oti2rh7czG08o
CMdq61D9/fBkjEWyFaczfgf6NeSgGu2bpRsrJNBI+zFV0tGO7bQcqZyVuZg7
6iq3w54E3NGsn7sHuzD8RdVP+aw8vN/hknaylggC/0U39XtNN0UnrH6mo2YY
H9W5gqscogoNp6xQ6wRM8zs9ijIaw0euWxpf1eVj79HtrlquY9C57aHJNNMk
3v7mel71Xh7OV5wZDPAcBtUtd08yeBHQ9lwFn0pfNs7eu3Q1uLkfHCpE36kp
tmDOMZEzlZ5ZGOj59ciFY9S8mVWlofSpDX+T9qrpGmfjMdva/rMFJBh9sBJP
VuvEQf9c/Q/ncnAPgw6fjDAJlN6/8fG37sFoUtAWZvpcrDmjqPPAggguC8RP
v8NGUPPnhupCKl6dbygQZz8xAQZdmVub+cZx2w5uFT61XFTd+C1rS+0oRO8z
iNiUPImdu+fYjUqyMeKTTW5e2RCk8hsrLW0iYvuIXbgwFYfstz6Xc0exD7Q3
lPeqj7djeGGY8tjhLPxAqZTVdyHB049/vhYkdeFBkTPBtqNZ+O3Bvs1a40TQ
mxUoYhzpRSm6uEzmd9lYUjPQEriHCJ8rapi6qsbxOauiv41UNj4h7Td4cGgU
MmsvMvSKTuHXHPsx8Q+ZmCPX86lm9xB8WvKfJRgQMfEq+wL3YhpmkrKOZfzq
gQDJ788JP7qRqeVEiktiJnqEn+wM+kjlC8l0m2dE+rFyWeFoiVQWRssIviUV
EcDYMvHs7i9TuEx/PCeyJB2NzgsoFtkPgka9k+O6VCLKK/oX0AlT8YBw587Z
tm5IO31UZ++eXiynMSJ9CMzA/nWiJ45QeU3J3h/7Lp8YwE/Ns5IcTJnI7n7v
tqspAVZXPXIK54mYu/HQLZnEZLzW6E4ObuqC6QHtK3KFA7jCF/M853c6ktOT
P5vsJwCty+OXSYId0Ckij0qnW/EBr3E2+1cCMOienJJbtYOPQZzlQwnlWMfH
oKdnQQERgWtjz7VjMO+z74fRuRJ8cK1udZsbBdgnOPcS3b9ix4afzxsvlyEn
7tSwsKWAz04BiXSTQCzIrm2asGhET4UW+7PlZCh/lvlp+GgGkl74d/zGInS3
GH8X6kqBZnMF47L2LByTjZC53liM19wdQ7qpv/syTtpHk5KLTJo3tuZuKkUN
A7ZYB00KnLsnSPO4uAQfMTf3cW+txUXXg4TpbCq/FikPb2YtQ80xZ31lsQZ0
upkWmmxNhucKGrpmmwqwvzc/9xRzIUaH+ryst6bA5RqrhQhCIW6pk4qoIxdi
jPyf8jRtCpycXzKm4S1B74aTvCKjRahv2aq1LPW/6g8F/6X+YCCedfPP8was
H7LPCfOqwJDalCBZZTJs+Mn7KZTUhNo3xaPzM6swaq/sw9stJDDaIvGa/V0r
3rSP8PC1r8Vq7ZcpuaIkyDio6WAy1I4026bdWH0acKnvoK/Qi7/3RWaz8si7
5BajAx/r10vuiPJPxtgHblPg2OKuBxX0Zeh/WbOu1KEAvzL6Z4ufo8DMxvju
L8UVeKleifWkYiEKM7P4JbBR4FPPIkHiVzVmEZRNuw8X4WrbkzukETJc9XcU
jipvwQz3a0/nLEtRbvH3g7eVJMhhk0k0PNiByntkaKvryzD+52XRTztJsK7+
mUoKaw/SN/FvbVSvwPdR2Vtr9hJhlbSyt+/CALaNCJT58FbhbhEjPtvSKaCX
rRgK9R7CKyNMXU73arBYWjSMl3US0s8eotk1S8Hug3vGBqrjQMKsP+fJ0Td/
XQeVM4Hfp+fK0K7fzrPUKg9NneeUuy9QQGKTem9oQCUGTT6qn0vPx+5NJ56e
ZadA/5Ed5S++1eCq5L22DdQ8z2Q1ReNCIgPDwzHOB/wNSM+nw2peXICHbL0u
v/lGhkMmegdvXW3Cti3W3C9eF+KNSErdI3UqXg2tHVD52Y5Gl3+sT7pQjLYm
NZ60ciSwjI42kK3qRsov55FR6j56f+VaffNdIsiy39Uy4BvA5zFP5cT/lOBN
1611OewEyHS6c4Y/bwhfRjrqxeeWouRyWO5B7Un49qC9MOjlKB4kKW+wuFWG
Lcyqxuq042A+/HxlCwsFtP1dL27dVoU+g0R+u/0Ff10fxiyZ+xJxPfjnk+Hu
gzcLUM7DccsOVSLkPD99g8BHQuJ2Scv5mzlIoClWSbXrhGrbE6lH6uuQzYff
f/+GLBS+ZtxaOEYGliN+AUsufei38dmJA9S8PxLb+nO6lwAqdOu0TINJ+Ifr
++EsngyMVDfoe+DfDrxch8UTqe8F52RvwZZxKr/uuk8il5LhqZ/PzoELTdio
/mcmJS0Tt0o6Z911JoNZIHQq7BxAhkqDRfOkXGTNXmTVp8a38RqNS9Jnh1Bp
dvvsXcY8PFk5JiBCPwXt60Sz906QMIdpNCBHIxWFAusIO4+3QdU3hkNb2Cn4
bLfesPVcIl65khD3rKQGZnWcGblfNWLx0HF53ol0/BH9siPkMxkev8+gu6bd
jJJs2g7KUdT4tLmq5YImGUZ9rtdsf9KKycpSh34ZZKLBV2uaE6skmBbKYE9v
GkAb3fdBZ5hzcPab9IvXtAR4uXEieXhpCB8I7OtOks/B6ZUf3IdfT4KYlP+W
PrVRPGmSk1BDvb5mazj9x5Bx+HHiR3k6JxnXPdjsf/JKMvIc7z9yeEcrrNpf
iTE/Q0HTQqGbyuQ4zF/Mk3r2qwoypsOPRSVScEd71cU6eiouvqZVVG9ZABFR
LqrXnjWhj53mrAOVb0auhBD+vCCD3w13rk/6LTjxBjM5ktLROrj73bIIGU5u
XzJf59eGeuv4XIV1MtCcYl+cWUOC2EtNM8IOg7g59NhV5fAs1FGXGDcNmgLW
jYvh7yKHUeKF2w/BzCyUUOjnFWecBJ2XkhYs86O4Cps47O5moULpu6CPjONw
YCfHMLv6BB7dOdNXapmJbJciUjd4jACN3ZDnPWUymj5r+ZWfnITC4jGKJO4W
MLvFGqCmQkG9Rgvu5T2x+EFa831Y8N/1sdbK1mHHDJpxvZtI1HGRNKRJ4RuS
uksGHm2D6zOarXhUvlZrrjENn1Sa+iZtJYOpfKg2Y3A7Wl7ZLKfyKB03O4aJ
24aQwLpPmPhGsAv9vJk8ROkzUOjKZCsXIwn2/iG2auwdwte6E/ueqmfiEScP
bnrRKdBSmPt6/+wInnLi0T+hlokP6MbP7gmaAH2N1eCXzmOYkx1ptmMkA7/v
zWTj9RgDWkWxI9ItE7jSaCxzfDgdk6NmwtN+DcPbPqtpGjoCnoh+2hUunIbu
m1W8/AkDMDEe/IvLgozSe9bv9c5LwM/jDoUs15pBWdyw99UdCubeqooUJkZj
ZJUGl/fjCjhz9/PMdBsFk3ZPEhiehGHB86yZHrNM6F0weRZ+tgXzIkJZSJap
yDz/9eGOc2RQOPC0heViGxrtMbI035yGp2q23nQdIkEfz7WJsz4deNyhJyw1
MA0v2fi3eJmQYKk3QpjneDdeFLOk+cKVjqwqrRWEViKwn/yuA0f68HP553cP
Q9NxKlcvP3YHEcbOpe1WiB1C3cCPo++EM/C5SEqTUusklNB/KBkrG0EX/rxj
DjszkPkk/Wb7IxNwNZaDadv6cZTRUE6ef5eO6pUXhZ9vHwM3WcEDjdKTuMXd
epfgizTsnX5+v85mGCSErAqStQlofWqHokNtCp51eDz6wnAARKfklRm8yXhd
/57Cx2fxmG3HRTwe1AT32k2OFj6k4Gepc/5dPFHY/yaUFPWsHPSMVm9eMejA
2c7k8ar0Zuw1KR4vGCHAi+Mth+SOUP9foQ+foz0bsGwla1/qw3EoW9M7Ma/p
nZLX9E5c8Y4Dh4aHwDpGyszvfD+yvuKoWnw3Aib/RT/8dE0/nJIvVCi9fwoj
nsXtVdhahWesYrexqA5CeYzl9Ee1fvCTjqD9yT+EsUtv6jyP/f87h9lZqa/A
+gI1/jhaiv/0ysEnEut/0fiUwzj3CWuXqhEgOF8MGnHsxncyJNJO5hFwnRBn
d58chGXDiDMtxDZ0VkjovTU5Dh5rui/7/6L7EtFzmvKP7keOc08Xjt/oxHjR
P+2fiibgiEbGlo/KFAh+HbxDP7gc3x6/2aZ+OxOiezSSlEN68AqxvMNbrR9F
+w/OHpgfh2M7b/hOnp4CPbYVidS4NjRkvCim39YDvNnOttPb3CFgT4vBfGsz
aqlpCS0+IMOMZkbemTu9oMWzfPSSWye62u1LojeaBOlz+s5e/9J1eK/jFOn5
CnosX5d8PZPgKJHcaG1FQVubwI/T2UXg8GJz3V3bXKBpu6Wt94eM9s7ufifC
CvCweJpqPFs17LipY5dWVAJsqh7i7PYtyJ+Va1vTR4LkN8/F6Ddng8mshIrw
ySbUcD6HN52o+EqA87ONFwWXZHy8+OgS4fSrp67SccWwXHlsYHcDBas0GFr2
s0Vgpml6kTNHNrSdLev0niQj189r1nc7S8ADeL9d+l4JhUoshQ5bs6Hq+Gut
B8ztGN1y7lBlHAn+VKzI7Z4n497m5W6ehWTcGD0AGqt1EK9tcGFykoJyjPq/
rSp0odJpwxBreTKQbARGgqsouJ7ej3L9bhLClF8gK28mvNd+we5/l4RfRNuj
DKbyYFtY9JEYiY5/6xaY1s7R6l/TLfzf3p+GNlIqNV0UzHxl1RvHEIw/i5LT
Pe/9H5yr/A/t/wNygsKL
    "]],
  Axes->True,
  AxesLabel->{
    FormBox[
     TagBox["\[Theta]", HoldForm], TraditionalForm], 
    FormBox[
     TagBox["z", HoldForm], TraditionalForm], 
    FormBox["qc", TraditionalForm]},
  AxesOrigin->{Automatic, Automatic, Automatic},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGrids->None,
  FaceGridsStyle->Automatic,
  ImageSize->{372.1909951884046, 190.0881735355344},
  ImageSizeRaw->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{0, 2}, {1, 10}, {0., 5.090078638533219}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{-1.0873005359959018`, -3.119032507278918, 0.734447930734658},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{3.768904198196269*^9, 
  3.768904299625461*^9},ExpressionUUID->"d60446dd-a478-4149-b861-\
68371998ca5c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Print", "[", "\"\<1<=z<2 case\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"qcrit", "[", 
      RowBox[{"1", ",", "0.1", ",", 
       RowBox[{"0.75", 
        RowBox[{"\[Mu]extreme", "[", 
         RowBox[{"0.1", ",", "1.75", ",", "\[Theta]"}], "]"}]}], ",", "1.75", 
       ",", "\[Theta]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Theta]", ",", "0", ",", "1.5"}], "}"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\[Theta]", ",", "qc"}], "}"}]}], ",", 
     RowBox[{"AxesOrigin", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", "\"\<z>2 case\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"qcrit", "[", 
      RowBox[{"1", ",", "0.1", ",", 
       RowBox[{"0.75", 
        RowBox[{"\[Mu]extreme", "[", 
         RowBox[{"0.1", ",", "3", ",", "\[Theta]"}], "]"}]}], ",", "3", ",", 
       "\[Theta]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Theta]", ",", "0", ",", "1.8"}], "}"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\[Theta]", ",", "qc"}], "}"}]}], ",", 
     RowBox[{"AxesOrigin", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], "]"}], ";"}]}], "Input",\
ExpressionUUID->"88490cb7-16f9-4260-8cb0-fc4a7f2498a4"],

Cell[CellGroupData[{

Cell[BoxData["\<\"1<=z<2 case\"\>"], "Print",
 CellChangeTimes->{
  3.7689043705984592`*^9},ExpressionUUID->"009e54c2-08ef-41db-bb3c-\
bfaca1722371"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$191984#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
     TagBox["\[Theta]", HoldForm], TraditionalForm], 
    FormBox["qc", TraditionalForm]},
  AxesOrigin->{0., 0.},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Print",
 CellChangeTimes->{
  3.7689043706700478`*^9},ExpressionUUID->"ab3d6dec-c33b-45da-a609-\
ad372b0d3762"],

Cell[BoxData["\<\"z>2 case\"\>"], "Print",
 CellChangeTimes->{
  3.768904370679421*^9},ExpressionUUID->"b3b2a0c3-44b4-41b6-9d55-\
fd34f2c3646b"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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

       "]]},
     Annotation[#, "Charting`Private`Tag$192042#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
     TagBox["\[Theta]", HoldForm], TraditionalForm], 
    FormBox["qc", TraditionalForm]},
  AxesOrigin->{0., 0.},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Print",
 CellChangeTimes->{
  3.7689043707646503`*^9},ExpressionUUID->"ffdb3f92-3314-449d-917a-\
bf071861cad0"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"qcrit", "[", 
      RowBox[{"1", ",", "0.1", ",", 
       RowBox[{"0.75", 
        RowBox[{"\[Mu]extreme", "[", 
         RowBox[{"0.1", ",", "z", ",", "1"}], "]"}]}], ",", "z", ",", "1"}], 
      "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"z", ",", "1.5", ",", "15"}], "}"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"z", ",", "qc"}], "}"}]}], ",", 
     RowBox[{"AxesOrigin", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}]}]}], "]"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.768904433829125*^9, 
  3.768904447333283*^9}},ExpressionUUID->"1539622e-d3a0-4d0d-9b6d-\
1b075449665c"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwB4QQe+yFib1JlAgAAAE0AAAACAAAAxOr0SQAA+D+LLvA/ehbWvyiWhtT1
EPg/ho/Uh+c61r+MQRhf6yH4P0fSx6REX9a/VJg7dNZD+D/sqbEBz6fWv+VF
gp6sh/g/O89QdSg4178GoQ/zWA/5P9nKzKcLVti/SFcqnLEe+j/8wovcSYfa
v8vDX+5iPfw/lSLNICDD3r/YCAzFCGsAQGavymQJpuO/zGuDDWOQAkDR+V46
MT7nvzuKRKb2qgRAE6vGf2Fp6r8aY6w6MPMGQEbVftSSe+2/+nevyWwUCUCu
7d9HJQbwv0lHWVRPYwtAmHtR7OlG8b8T0kwva6cNQCMerdn3ZPK/3pjbBIrE
D0CfmqLfJFvzvw2NCGunBxFAg6RlyBVU9L+r6/BQixkSQAFndRbXLvW/Byj+
3gsmE0DVS2bC1vr1v5vB3mpfSRRAlK9kWXDO9r8v+Qx0NFkVQDveBvUgjPe/
+40Oe9x/FkBP9BhxelL4v4UANSohoRdApFDrCcIO+b8PEalW564YQMi8u+06
ufm/0X7wgIDTGUCHBu5rFm36v5OKhSib5BpAbLeKw6QQ+7+N8+3NiAwcQExg
heqLvfu/RTp7GxMvHUDcwcbGQWP8v/0eVuYePh5Ax8u4In36/L/tYASv/WMf
QEqCjxMIm/2/byCA+i47IEB8hACx5y3+v0Z/kHGtwSBA1KyEaTq7/r+4jIpn
lVMhQAesvRu5Uf+/K2krHL7bIUCnEHNuqNv/vzr0tU9QbyJAH7SYWUg3AMAn
7lLXMAAjQI3eRuwmfgDAFbeWHVKHI0D3LAiQMr8AwJ8uxOLcGSRAv2LyfaME
AcApdZhmqKIkQCwcrAF6RAHAkip/PsIoJUBWJ77BLIIBwJaOT5VFuiVAcv4M
SC3EAcCbwcaqCUImQFmQoNLnAALAPKMnPzfVJkCjk03/2EECwN1TL5KlXidA
P4csPK99AsBdc0k5YuUnQE7ywYCftwLAeUFNX4h3KEAnMS3ir/UCwJXe90Pv
/yhAM9TKeucuA8BNKoynv5MpQD74e0gqbAPA4+QyX94kKkBAS5qDlacDwHpu
gNU9rCpA1yzv4mLeA8CtprfKBj8rQMdH5xomGQTA4K2VfhDIK0A3tQDzaE8E
wPIjhoZoTixAIqmoaQ+EBMCfSGANKuAsQOGE2aSXvATATTzhUixoLUDZL8Bv
zvAEwOa8cKGLai1AgN14bbbxBMCAPQDw6mwtQC1MKGGe8gTAsj4fjalxLUCe
oXAqbvQEwBhBXccmey1AaZDLRA34BMDkRdk7IY4tQKiuzJlJ/wTAek/RJBa0
LUA23f7Nug0FwBTQYHN1ti1AFxcQjaEOBcCtUPDB1LgtQJMyQUKIDwXA4FEP
X5O9LUAWIAiPVREFwEVUTZkQxy1AvEFMsu8UBcAQWckNC9otQHYhyCAiHAXA
qtlYXGrcLUBT+G5CCB0FwENa6KrJ3i1AOthJWu4dBcB2WwdIiOMtQKezoGy6
HwXA3F1FggXtLUB1zfUbUiMFwHbe1NBk7y1ACeNf7zckBcAPX2QfxPEtQLn7
B7kdJQXAQmCDvIL2LUBuLhcv6SYFwNvgEgvi+C1AzMOA284nBcB0YaJZQfst
QPVSLX60KAXADuIxqKD9LUDwGB4XmikFwKdiwfb//y1AfFJUpn8qBcB2JkQI

       "]]},
     Annotation[#, "Charting`Private`Tag$192181#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
     TagBox["z", HoldForm], TraditionalForm], 
    FormBox["qc", TraditionalForm]},
  AxesOrigin->{0., 0.},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 15}, {-2.6457512850268454`, 0.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Print",
 CellChangeTimes->{
  3.768904409241946*^9, {3.768904442972191*^9, 
   3.768904449772441*^9}},ExpressionUUID->"9c620350-cd83-4d80-8883-\
9e2803f10339"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"qcrit", "[", 
       RowBox[{"1", ",", "0.1", ",", 
        RowBox[{"0.75", 
         RowBox[{"\[Mu]extreme", "[", 
          RowBox[{"0.1", ",", "z", ",", "1"}], "]"}]}], ",", "z", ",", "1"}], 
       "]"}], "//", "Abs"}], ",", 
     RowBox[{"{", 
      RowBox[{"z", ",", "1.5", ",", "15"}], "}"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"z", ",", "qc"}], "}"}]}], ",", 
     RowBox[{"AxesOrigin", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}]}]}], "]"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.768904433829125*^9, 
  3.7689044564740343`*^9}},ExpressionUUID->"60e10700-6d59-428d-94b1-\
7f44024c5f13"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwViXk41HkcgH8z5sd4GDNFjnLMOGamMT+qPeyO8v2MXLMRTdY2tTVCh4ja
UrsU87gfR3myWmWfpKxB5KmtpFQ7WCS61hlNoppNYcIwztn2j/d5n/d5WWGx
4j1kDMMCPvO/m0amRBimRdkuahRv3o24Z9M7NQwtSj/dmaESdKMcoaX0A0uL
fJ+3lHpJu1FwofvR7o1a9LHiGumJvBu99U6+UJWhRe5PguK43/Qg/RL65Db6
LOpra5cbhfQivx94v1+znUMLDdkDoowX6FGjdCxswwIqsO9gMhuVqJdq/Dc1
CoO9NW0RhmXDqD0qhRaeR4Zns7sEaz1UyD3Lq2y6kgKmV5qTdkeOoJXhVYI1
k/rg05XYeSZhFM0dr3kYbWYIV0df+Trpq5HIVxIcGG4EhQlbPr73+YRMn/u7
Rslp4GBb3TcTMYGUhf2UrCY6FJ+/9MpxxySi5VKj5AbLIKV0T+uK4Cl05YM6
KNtqOZD2xZn3uGiQAXdJacQ2ha5Nexu65zSoSKE8IBWZwa81EZJDj6eR66zx
0S8lK8Bdqa9h5syg+VyThIEkcwicsjwcL9aiNOwrHqvEAkqDPhg2mMwi+rKK
ENVVS2itvzsqqJtFzxLVMtk/VpChPxZlfnAO5WelcYverITo2qzGUsY8yp0c
7cg0tgb/0LSR7HvzyFuQsMrU1QYGFM3NwvAFtGgb8s7WwxZaHt22Pzm3gEZD
KTWL4XbwXfJpU2rRIoplyuZc3JlwIhW7piKWkE9S3uFqBRM6q1IjBXeX0O2c
rH0FW1lgUHVvVd0WHXKOdLa+388COeNITHm/DgmmbgYGxdqD3Y1CiZ8bBpwx
cc8azAFylT4f2YkYrKg9ayPOcIAZPjVv3QMMil2ahgasHOFB2MTJyxQSrI4r
3Ft+yRH41lWkeC8SnOEleTRwnSCEc1/BTybB2VOBBd53nOCnJWM/ookERYrm
SkNPNkjyLj5XYWRYf5mD3LrYcDk/QNcrJMPLra5n/tjFAZTBX19zkgw7j4i+
DXvLgc0TCllxLRl+EQZIM49zgbOWGKrRkKFAObNxXMeFLzrb4lUuehDAy5E/
yF8NHtoEP160Hgy/WSdVOvIANp1PKZDrQXyMrGtDFQ96+ONDYUo9qC6rbdNH
ztDiq1rJtqLAYHVBIqPVGdxuYpP7Aykw4ZCevn8zH+wryiPpqRQo9gul8Qb5
8Dq1r/S3egoErH8t5u8noM/1r9jHagq8qz9Ukn2AANnLnw/e+kQB2QZMPRJN
AOHP3X1hggLXPexyKw4TcKHkEC9migKWwp0t7AQCIvMeedG0FHjj3efOOkVA
+dX2cyIdBeIDnzma3yDg65dLHXdoOJg9DT0Sd4sACwtGbokJDtVBakXnbQLy
1wk9M+k4DG6hS/PvEWDOpJ7+fhkO3sEB5xgtBNQL/a+Pm+HAkDykGb0g4Bir
lWlvjUNl37YfDwwQsFUb40m1wWHj9n8rHyoJEPSKto997mM7DPwyhwmQ/3kx
+o4dDgM7vZPxUQLiOjSrxA6fv7LzacQ4AYbD0nE3Rxzo0gi7pk8E1M0b1Nk4
4eAZmlKfPE1AjIuF63s2Dv2Dy42GtAS0N8r6H3NwOLr7kkQ4T4BGTCTe4OJg
MrS2/OIiAWpLW4vzq3GQhymmdToCToiDy5J4OPwH2kIdiA==
       "]]},
     Annotation[#, "Charting`Private`Tag$192227#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
     TagBox["z", HoldForm], TraditionalForm], 
    FormBox["qc", TraditionalForm]},
  AxesOrigin->{0., 0.},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 15}, {0., 2.6457512850268454`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Print",
 CellChangeTimes->{
  3.768904456895451*^9},ExpressionUUID->"0dad42c6-6e9f-4262-a423-\
262b3b36447c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Print", "[", "\"\<1<=z<2 case\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"qcrit", "[", 
        RowBox[{"1", ",", "0.1", ",", 
         RowBox[{"0.75", 
          RowBox[{"\[Mu]extreme", "[", 
           RowBox[{"0.1", ",", "1.75", ",", "\[Theta]"}], "]"}]}], ",", 
         "1.75", ",", "\[Theta]"}], "]"}], "//", "Re"}], "//", "Abs"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Theta]", ",", "0", ",", "1.5"}], "}"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\[Theta]", ",", "qc"}], "}"}]}], ",", 
     RowBox[{"AxesOrigin", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", "\"\<z>2 case\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"qcrit", "[", 
        RowBox[{"1", ",", "0.1", ",", 
         RowBox[{"0.75", 
          RowBox[{"\[Mu]extreme", "[", 
           RowBox[{"0.1", ",", "3", ",", "\[Theta]"}], "]"}]}], ",", "3", ",",
          "\[Theta]"}], "]"}], "//", "Re"}], "//", "Abs"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Theta]", ",", "0", ",", "1.8"}], "}"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\[Theta]", ",", "qc"}], "}"}]}], ",", 
     RowBox[{"AxesOrigin", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], "]"}], ";"}]}], "Input",\

 CellChangeTimes->{{3.768904467370821*^9, 
  3.768904495157382*^9}},ExpressionUUID->"f538f052-6882-4241-907f-\
5bf9e32f3627"],

Cell[CellGroupData[{

Cell[BoxData["\<\"1<=z<2 case\"\>"], "Print",
 CellChangeTimes->{{3.768904473694882*^9, 
  3.768904495811468*^9}},ExpressionUUID->"f0ab0d52-e264-4176-aba5-\
cb94aa536a99"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
        "]], 
       LineBox[CompressedData["
1:eJxTTMoPSmViYGDQAGIQ3Vo5b2J//Wd7BihYVKgsfaYJwV+1wEV4WhuCv/Nf
G7NWH4Lf91FxsvkEBD/pyR4l10kIPtepT44J0xD8mKlxDdPmIfj/tM3+Mq1H
8F0in367fR7BP7fZ+VWv4Bc4/6hC2rGeSQh+y/bQhQ+5viLMV7oTF92L4P/e
pi+tzf4Nzq9hfnlmah2CL6ZimajK8B3OL88L+8JVieDLmKWcUKtG8A/8LZzj
VIvgc/X2ulQ1IvjzVh+Z8rITwT/2wsj0xCwEXySZv6x1D4K/U0vWa+E+BD/u
k5bc3gMI/opGt2NfjiD41gtqxVLOIvhJd19vc7qH4LMv/dkV9wDBX5PDHl/1
CMH/9luJfdMzBL9LKipc8T2Cr/8oXdv2I4J/ZWXp/4jPCL6c5cTlE74j+IcZ
5lev+YngZ5xY43/iN4LPM2GX8pO/CP7G8BPf//9H8AHE965H
        "]]},
      Annotation[#, 
       "Charting`Private`Tag$192366#1"]& ], {}}, {{}, {}, {}}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
     TagBox["\[Theta]", HoldForm], TraditionalForm], 
    FormBox["qc", TraditionalForm]},
  AxesOrigin->{0., 0.},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Print",
 CellChangeTimes->{{3.768904473694882*^9, 
  3.768904495879159*^9}},ExpressionUUID->"bac685f7-b0b5-4d89-98c0-\
d0840cc46e5f"],

Cell[BoxData["\<\"z>2 case\"\>"], "Print",
 CellChangeTimes->{{3.768904473694882*^9, 
  3.768904495888596*^9}},ExpressionUUID->"2698ee52-d2d2-4f5b-a0ed-\
c307129d717d"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
x0lCbYkh+NoFVrFWpOP/98GGhg==
        "]], LineBox[CompressedData["
1:eJxFx1sogwEAxfHPJWpjkdrEGGOImZfJPXzZg4VcasLkUpglKxGZkJophQdk
iSyj3PZiD4ppTTNbIyGaNuFNXtzKXNpQ2jn17/SLbZZVtvgSBJH6299LUzxb
dv+PfOJ/rlcu7zoQnqPKTZEUODPOIq4Pgu3ZjLdFGhwh3Wazw+D5o8ehJCac
e5vFkEbDjneldiMGZibGO3kceFEhzk7nwWry+K2wAL40J+bpSJhSOqJIEMBd
1Rl0qhAmO9QZF1Xw/UxPf2sbzH6IIsYnYM1kJ/XCAVtoAUpC9um1+1QoLnXD
0a717kPVl9eNFT4v9uRvrw3BAn1TKsyyjo09pME3ZAjrgw+L+ayS8Hy4mpG3
KqqCy5x9tedyWKva49QNwsEi4vl+GLadKJUvCrjYMKsLnYKLlnW0cg2saXDZ
r1ZhP2buSsMabJw+yJFp4YLRM8nEDrxE0vn0XdjjrvEs6OH93ruZLSMcxec0
pZvggScJV2+GHZub70VWOKf9yWizwT9Nfrfn
        "]]},
      Annotation[#, 
       "Charting`Private`Tag$192410#1"]& ], {}}, {{}, {}, {}}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
     TagBox["\[Theta]", HoldForm], TraditionalForm], 
    FormBox["qc", TraditionalForm]},
  AxesOrigin->{0., 0.},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Print",
 CellChangeTimes->{{3.768904473694882*^9, 
  3.768904495969364*^9}},ExpressionUUID->"1a486e3b-0fd1-4ddf-b064-\
8a4d725916dd"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ListLinePlot", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Abs", "[", 
            RowBox[{"\[Beta]pu", "[", 
             RowBox[{"i", ",", "10", ",", "0.1", ",", "1", ",", 
              RowBox[{"0.75", 
               RowBox[{"\[Mu]extreme", "[", 
                RowBox[{"1", ",", "1.5389", ",", "0.0"}], "]"}]}], ",", 
              "1.5389", ",", "0.0"}], "]"}], "]"}], "//", "Log"}], ")"}]}]}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "0.1", ",", "5", ",", "0.05"}], "}"}]}], "]"}], 
    "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Abs", "[", 
             RowBox[{"\[Beta]pu", "[", 
              RowBox[{"i", ",", "10", ",", "0.1", ",", "1", ",", 
               RowBox[{"0.75", 
                RowBox[{"\[Mu]extreme", "[", 
                 RowBox[{"1", ",", "1.55", ",", "0.0"}], "]"}]}], ",", "1.55",
                ",", "0.0"}], "]"}], "]"}], "//", "Log"}], ")"}]}]}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0.1", ",", "5", ",", "0.05"}], "}"}]}], "]"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Orange"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Abs", "[", 
             RowBox[{"\[Beta]pu", "[", 
              RowBox[{"i", ",", "10", ",", "0.1", ",", "1", ",", 
               RowBox[{"0.75", 
                RowBox[{"\[Mu]extreme", "[", 
                 RowBox[{"1", ",", "1.60", ",", "0.0"}], "]"}]}], ",", "1.60",
                ",", "0.0"}], "]"}], "]"}], "//", "Log"}], ")"}]}]}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0.1", ",", "5", ",", "0.05"}], "}"}]}], "]"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0.1", ",", "5"}], "}"}], ",", "All"}], "}"}]}], ",", 
   RowBox[{"AxesOrigin", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.7621499400469303`*^9, 3.76214995788577*^9}, 
   3.7621504060089197`*^9, {3.7622220032765512`*^9, 3.7622220122290783`*^9}, {
   3.7622221031923103`*^9, 3.76222211569545*^9}, {3.762222195393902*^9, 
   3.762222207758762*^9}, {3.76222228040239*^9, 3.762222321589086*^9}, {
   3.762222545360361*^9, 3.7622225662647657`*^9}, {3.762222661267963*^9, 
   3.762222670416327*^9}, {3.762222734597642*^9, 3.762222737594122*^9}, {
   3.762222797837229*^9, 3.762222815592383*^9}, {3.762222849560255*^9, 
   3.762222852406355*^9}, {3.762222893602281*^9, 3.762222905160592*^9}, {
   3.762222950977325*^9, 3.762222961387184*^9}, {3.76222299625073*^9, 
   3.762222999671578*^9}, {3.762223037987764*^9, 3.7622230418512907`*^9}, {
   3.762224904821651*^9, 3.7622249348607807`*^9}, {3.7622250160612926`*^9, 
   3.7622250317400637`*^9}, {3.76222509634979*^9, 3.762225099578236*^9}, {
   3.7622251436673393`*^9, 3.762225145665094*^9}, {3.762227582763955*^9, 
   3.76222758619326*^9}, {3.762227627441709*^9, 3.762227630655265*^9}, {
   3.762227665362673*^9, 3.762227668473093*^9}, {3.762227709739233*^9, 
   3.762227712973514*^9}, {3.7622277527423763`*^9, 3.762227754852363*^9}, {
   3.7622277958025208`*^9, 3.76222779893643*^9}, {3.762227836234685*^9, 
   3.7622278435492287`*^9}, {3.763727142453827*^9, 3.763727155313245*^9}, {
   3.763728036764051*^9, 3.7637280415554113`*^9}, {3.768914034509223*^9, 
   3.768914048522009*^9}},ExpressionUUID->"00e8b5ef-6b49-434d-a054-\
4dc7a5782659"],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{
  3.768914146289603*^9},ExpressionUUID->"efe15cd5-f752-49db-a080-\
88f4c009a0d8"]
}, Open  ]]
},
WindowSize->{808, 651},
WindowMargins->{{236, Automatic}, {Automatic, 50}},
FrontEndVersion->"11.2 for Mac OS X x86 (32-bit, 64-bit Kernel) (September \
10, 2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 1349, 42, 73, "Input",ExpressionUUID->"1660daaf-ea3f-4f85-a23e-07410e9b2649"],
Cell[1932, 66, 2035, 65, 71, "Output",ExpressionUUID->"82a4d9b7-b60a-4469-a3af-303fa3dd7019"]
}, Open  ]],
Cell[3982, 134, 66530, 1626, 3243, "Input",ExpressionUUID->"a503bebb-a38b-4cbd-ab05-3e8f496e49af"],
Cell[CellGroupData[{
Cell[70537, 1764, 4072, 93, 136, "Input",ExpressionUUID->"aae50cd5-2258-4c0f-aa85-2368245654a4"],
Cell[74612, 1859, 6172, 121, 233, "Output",ExpressionUUID->"0de0d2b6-92f0-46e6-94e2-848b5b28d5b6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[80821, 1985, 4099, 93, 136, "Input",ExpressionUUID->"6b98588f-f740-4a76-b687-705ce5d24bf4"],
Cell[84923, 2080, 6139, 121, 232, "Output",ExpressionUUID->"8e5c3e66-7ca5-42fe-b45b-c6013aa1b749"]
}, Open  ]],
Cell[CellGroupData[{
Cell[91099, 2206, 3509, 85, 136, "Input",ExpressionUUID->"2fe1be5a-df7a-42e8-ad58-197d0edd2925"],
Cell[94611, 2293, 6165, 121, 233, "Output",ExpressionUUID->"af5c6bbc-bdeb-4e88-be98-fde1542a5873"]
}, Open  ]],
Cell[CellGroupData[{
Cell[100813, 2419, 3580, 86, 136, "Input",ExpressionUUID->"f06fee74-c5d0-40e0-97e6-3e690aa09e85"],
Cell[104396, 2507, 6165, 120, 231, "Output",ExpressionUUID->"f5affb76-b683-403b-affe-85bef254bdc6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[110598, 2632, 3067, 91, 73, "Input",ExpressionUUID->"bc9b9b44-0b5e-462b-ac57-0ad284fefca8"],
Cell[113668, 2725, 137, 3, 34, "Output",ExpressionUUID->"2fdef87c-f07c-4a61-b6ad-02e8c46e2eec"]
}, Open  ]],
Cell[CellGroupData[{
Cell[113842, 2733, 1860, 55, 73, "Input",ExpressionUUID->"dd928539-22f7-4d7b-b65d-3ed85301bfa2"],
Cell[115705, 2790, 137, 3, 34, "Output",ExpressionUUID->"11c2f78f-7fc4-4f73-8151-de72407e3dd0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[115879, 2798, 762, 20, 30, "Input",ExpressionUUID->"ce1f2b89-c298-44de-a7f7-4786799c1f34"],
Cell[116644, 2820, 142400, 2336, 207, "Output",ExpressionUUID->"d60446dd-a478-4149-b861-68371998ca5c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[259081, 5161, 1672, 46, 94, "Input",ExpressionUUID->"88490cb7-16f9-4260-8cb0-fc4a7f2498a4"],
Cell[CellGroupData[{
Cell[260778, 5211, 149, 3, 24, "Print",ExpressionUUID->"009e54c2-08ef-41db-bb3c-bfaca1722371"],
Cell[260930, 5216, 4540, 95, 232, "Print",ExpressionUUID->"ab3d6dec-c33b-45da-a609-ad372b0d3762"],
Cell[265473, 5313, 144, 3, 24, "Print",ExpressionUUID->"b3b2a0c3-44b4-41b6-9d55-fd34f2c3646b"],
Cell[265620, 5318, 8213, 156, 233, "Print",ExpressionUUID->"ffdb3f92-3314-449d-917a-bf071861cad0"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[273882, 5480, 751, 21, 30, "Input",ExpressionUUID->"1539622e-d3a0-4d0d-9b6d-1b075449665c"],
Cell[274636, 5503, 3341, 76, 232, "Print",ExpressionUUID->"9c620350-cd83-4d80-8883-9e2803f10339"]
}, Open  ]],
Cell[CellGroupData[{
Cell[278014, 5584, 788, 22, 30, "Input",ExpressionUUID->"60e10700-6d59-428d-94b1-7f44024c5f13"],
Cell[278805, 5608, 3277, 74, 241, "Print",ExpressionUUID->"0dad42c6-6e9f-4262-a423-262b3b36447c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[282119, 5687, 1883, 53, 94, "Input",ExpressionUUID->"f538f052-6882-4241-907f-5bf9e32f3627"],
Cell[CellGroupData[{
Cell[284027, 5744, 171, 3, 24, "Print",ExpressionUUID->"f0ab0d52-e264-4176-aba5-cb94aa536a99"],
Cell[284201, 5749, 5062, 105, 241, "Print",ExpressionUUID->"bac685f7-b0b5-4d89-98c0-d0840cc46e5f"],
Cell[289266, 5856, 168, 3, 24, "Print",ExpressionUUID->"2698ee52-d2d2-4f5b-a0ed-c307129d717d"],
Cell[289437, 5861, 8739, 165, 241, "Print",ExpressionUUID->"1a486e3b-0fd1-4ddf-b064-8a4d725916dd"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[298225, 6032, 4118, 93, 136, "Input",ExpressionUUID->"00e8b5ef-6b49-434d-a054-4dc7a5782659"],
Cell[302346, 6127, 137, 3, 34, "Output",ExpressionUUID->"efe15cd5-f752-49db-a080-88f4c009a0d8"]
}, Open  ]]
}
]
*)

