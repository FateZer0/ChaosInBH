(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    269137,       5213]
NotebookOptionsPosition[    266971,       5167]
NotebookOutlinePosition[    267333,       5183]
CellTagsIndexPosition[    267290,       5180]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"\[Mu]extreme", "[", 
    RowBox[{"uh_", ",", "z_", ",", "\[Theta]_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Sqrt", "[", 
       RowBox[{"2", 
        RowBox[{"(", 
         RowBox[{"2", "-", "\[Theta]"}], ")"}], 
        RowBox[{"(", 
         RowBox[{"2", "+", "z", "-", "\[Theta]"}], ")"}]}], "]"}], "/", 
      "uh"}], "/", 
     RowBox[{"(", 
      RowBox[{"z", "-", "\[Theta]"}], ")"}]}], 
    RowBox[{"Exp", "[", 
     RowBox[{"-", 
      RowBox[{"Sqrt", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"z", "-", "1", "+", 
           RowBox[{"\[Theta]", "/", "2"}]}], ")"}], "/", "2"}], "/", 
        RowBox[{"(", 
         RowBox[{"2", "-", "\[Theta]"}], ")"}]}], "]"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"qcrit", "[", 
    RowBox[{"us_", ",", "uh_", ",", "\[Mu]_", ",", "z_", ",", "\[Theta]_"}], 
    "]"}], ":=", 
   RowBox[{
    RowBox[{"us", "^", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"\[Theta]", "/", "2"}], "-", "z"}], ")"}]}], 
    RowBox[{
     RowBox[{"Sqrt", "[", 
      RowBox[{"1", "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"us", "/", "uh"}], ")"}], "^", 
        RowBox[{"(", 
         RowBox[{"2", "+", "z", "-", "\[Theta]"}], ")"}]}], "+", 
       RowBox[{
        RowBox[{"\[Mu]", "^", "2"}], 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"z", "-", "\[Theta]"}], ")"}], "/", "2"}], "/", 
         RowBox[{"(", 
          RowBox[{"2", "-", "\[Theta]"}], ")"}]}], " ", 
        RowBox[{
         RowBox[{"us", "^", 
          RowBox[{"(", 
           RowBox[{"2", 
            RowBox[{"(", 
             RowBox[{"z", "-", "\[Theta]", "+", "1"}], ")"}]}], ")"}]}], "/", 
         
         RowBox[{"uh", "^", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", "z"}], "-", 
            RowBox[{"2", "\[Theta]"}]}], ")"}]}]}], 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"us", "/", "uh"}], ")"}], "^", 
           RowBox[{"(", 
            RowBox[{"\[Theta]", "-", "z"}], ")"}]}]}], ")"}]}]}], "]"}], "/", 
     
     RowBox[{"(", 
      RowBox[{"\[Mu]", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"us", "/", "uh"}], ")"}], "^", 
          RowBox[{"(", 
           RowBox[{"z", "-", "\[Theta]"}], ")"}]}]}], ")"}]}], ")"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"uz1", "[", 
    RowBox[{
    "q_", ",", "us_", ",", "uh_", ",", "\[Mu]_", ",", "z_", ",", 
     "\[Theta]_"}], "]"}], ":=", 
   RowBox[{"NDSolveValue", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          FractionBox[
           RowBox[{"q", " ", 
            RowBox[{"(", 
             RowBox[{"z", "-", "\[Theta]"}], ")"}], " ", "\[Mu]", " ", 
            SuperscriptBox[
             RowBox[{"(", 
              FractionBox[
               RowBox[{"u", "[", "t", "]"}], "uh"], ")"}], 
             RowBox[{"z", "-", "\[Theta]"}]]}], 
           RowBox[{"u", "[", "t", "]"}]]}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", "\[Theta]"}], ")"}], " ", 
            SuperscriptBox[
             RowBox[{"u", "[", "t", "]"}], 
             RowBox[{
              RowBox[{"-", "2"}], "+", 
              FractionBox["\[Theta]", "2"]}]], " ", 
            SuperscriptBox[
             RowBox[{
              SuperscriptBox["u", "\[Prime]",
               MultilineFunction->None], "[", "t", "]"}], "2"]}], ")"}], "/", 
          
          RowBox[{"(", 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              SuperscriptBox[
               RowBox[{"(", 
                FractionBox[
                 RowBox[{"u", "[", "t", "]"}], "uh"], ")"}], 
               RowBox[{"2", "+", "z", "-", "\[Theta]"}]], "+", 
              FractionBox[
               RowBox[{
                SuperscriptBox["uh", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "2"}], " ", "z"}], "+", 
                  RowBox[{"2", " ", "\[Theta]"}]}]], " ", 
                RowBox[{"(", 
                 RowBox[{"z", "-", "\[Theta]"}], ")"}], " ", 
                SuperscriptBox["\[Mu]", "2"], " ", 
                SuperscriptBox[
                 RowBox[{"u", "[", "t", "]"}], 
                 RowBox[{"2", "+", 
                  RowBox[{"2", " ", "z"}], "-", 
                  RowBox[{"2", " ", "\[Theta]"}]}]], " ", 
                RowBox[{"(", 
                 RowBox[{"1", "-", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    FractionBox[
                    RowBox[{"u", "[", "t", "]"}], "uh"], ")"}], 
                   RowBox[{
                    RowBox[{"-", "z"}], "+", "\[Theta]"}]]}], ")"}]}], 
               RowBox[{"2", " ", 
                RowBox[{"(", 
                 RowBox[{"2", "-", "\[Theta]"}], ")"}]}]]}], ")"}], " ", 
            RowBox[{"\[Sqrt]", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SuperscriptBox[
                 RowBox[{"u", "[", "t", "]"}], 
                 RowBox[{"2", "-", 
                  RowBox[{"2", " ", "z"}]}]], " ", 
                RowBox[{"(", 
                 RowBox[{"1", "-", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    FractionBox[
                    RowBox[{"u", "[", "t", "]"}], "uh"], ")"}], 
                   RowBox[{"2", "+", "z", "-", "\[Theta]"}]], "+", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["uh", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "2"}], " ", "z"}], "+", 
                    RowBox[{"2", " ", "\[Theta]"}]}]], " ", 
                    RowBox[{"(", 
                    RowBox[{"z", "-", "\[Theta]"}], ")"}], " ", 
                    SuperscriptBox["\[Mu]", "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"u", "[", "t", "]"}], 
                    RowBox[{"2", "+", 
                    RowBox[{"2", " ", "z"}], "-", 
                    RowBox[{"2", " ", "\[Theta]"}]}]], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"u", "[", "t", "]"}], "uh"], ")"}], 
                    RowBox[{
                    RowBox[{"-", "z"}], "+", "\[Theta]"}]]}], ")"}]}], 
                   RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{"2", "-", "\[Theta]"}], ")"}]}]]}], ")"}]}], "-", 
               
               FractionBox[
                SuperscriptBox[
                 RowBox[{
                  SuperscriptBox["u", "\[Prime]",
                   MultilineFunction->None], "[", "t", "]"}], "2"], 
                RowBox[{"1", "-", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   FractionBox[
                    RowBox[{"u", "[", "t", "]"}], "uh"], ")"}], 
                  RowBox[{"2", "+", "z", "-", "\[Theta]"}]], "+", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["uh", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "2"}], " ", "z"}], "+", 
                    RowBox[{"2", " ", "\[Theta]"}]}]], " ", 
                   RowBox[{"(", 
                    RowBox[{"z", "-", "\[Theta]"}], ")"}], " ", 
                   SuperscriptBox["\[Mu]", "2"], " ", 
                   SuperscriptBox[
                    RowBox[{"u", "[", "t", "]"}], 
                    RowBox[{"2", "+", 
                    RowBox[{"2", " ", "z"}], "-", 
                    RowBox[{"2", " ", "\[Theta]"}]}]], " ", 
                   RowBox[{"(", 
                    RowBox[{"1", "-", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"u", "[", "t", "]"}], "uh"], ")"}], 
                    RowBox[{
                    RowBox[{"-", "z"}], "+", "\[Theta]"}]]}], ")"}]}], 
                  RowBox[{"2", " ", 
                   RowBox[{"(", 
                    RowBox[{"2", "-", "\[Theta]"}], ")"}]}]]}]]}], ")"}]}]}], 
           ")"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"u", "[", "t", "]"}], 
             RowBox[{"\[Theta]", "/", "2"}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "2"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "2"}], "+", "\[Theta]"}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "2"}], "-", "z", "+", "\[Theta]"}], ")"}], " ", 
               
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"u", "[", "t", "]"}], "uh"], ")"}], 
                RowBox[{"z", "-", "\[Theta]"}]]}], "+", 
              RowBox[{
               SuperscriptBox["uh", 
                RowBox[{"2", "-", 
                 RowBox[{"2", " ", "z"}], "+", 
                 RowBox[{"2", " ", "\[Theta]"}]}]], " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"z", "-", "\[Theta]"}], ")"}], "2"], " ", 
               SuperscriptBox["\[Mu]", "2"], " ", 
               SuperscriptBox[
                RowBox[{"u", "[", "t", "]"}], 
                RowBox[{"2", " ", 
                 RowBox[{"(", 
                  RowBox[{"z", "-", "\[Theta]"}], ")"}]}]], " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"u", "[", "t", "]"}], "uh"], ")"}], 
                RowBox[{
                 RowBox[{"-", "z"}], "+", "\[Theta]"}]]}], "+", 
              RowBox[{"2", " ", 
               SuperscriptBox["uh", 
                RowBox[{"2", "-", 
                 RowBox[{"2", " ", "z"}], "+", 
                 RowBox[{"2", " ", "\[Theta]"}]}]], " ", 
               RowBox[{"(", 
                RowBox[{"z", "-", "\[Theta]"}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{"1", "+", "z", "-", "\[Theta]"}], ")"}], " ", 
               SuperscriptBox["\[Mu]", "2"], " ", 
               SuperscriptBox[
                RowBox[{"u", "[", "t", "]"}], 
                RowBox[{"2", " ", 
                 RowBox[{"(", 
                  RowBox[{"z", "-", "\[Theta]"}], ")"}]}]], " ", 
               RowBox[{"(", 
                RowBox[{"1", "-", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   FractionBox[
                    RowBox[{"u", "[", "t", "]"}], "uh"], ")"}], 
                  RowBox[{
                   RowBox[{"-", "z"}], "+", "\[Theta]"}]]}], ")"}]}]}], ")"}],
             " ", 
            SuperscriptBox[
             RowBox[{
              SuperscriptBox["u", "\[Prime]",
               MultilineFunction->None], "[", "t", "]"}], "2"]}], ")"}], "/", 
          
          RowBox[{"(", 
           RowBox[{"2", " ", 
            SuperscriptBox["uh", "2"], " ", 
            RowBox[{"(", 
             RowBox[{"2", "-", "\[Theta]"}], ")"}], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"u", "[", "t", "]"}], "uh"], ")"}], 
                RowBox[{"2", "+", "z", "-", "\[Theta]"}]], "-", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["uh", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "2"}], " ", "z"}], "+", 
                   RowBox[{"2", " ", "\[Theta]"}]}]], " ", 
                 RowBox[{"(", 
                  RowBox[{"z", "-", "\[Theta]"}], ")"}], " ", 
                 SuperscriptBox["\[Mu]", "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"u", "[", "t", "]"}], 
                  RowBox[{"2", "+", 
                   RowBox[{"2", " ", "z"}], "-", 
                   RowBox[{"2", " ", "\[Theta]"}]}]], " ", 
                 RowBox[{"(", 
                  RowBox[{"1", "-", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"u", "[", "t", "]"}], "uh"], ")"}], 
                    RowBox[{
                    RowBox[{"-", "z"}], "+", "\[Theta]"}]]}], ")"}]}], 
                RowBox[{"2", " ", 
                 RowBox[{"(", 
                  RowBox[{"2", "-", "\[Theta]"}], ")"}]}]]}], ")"}], "2"], 
            " ", 
            RowBox[{"\[Sqrt]", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SuperscriptBox[
                 RowBox[{"u", "[", "t", "]"}], 
                 RowBox[{"2", "-", 
                  RowBox[{"2", " ", "z"}]}]], " ", 
                RowBox[{"(", 
                 RowBox[{"1", "-", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    FractionBox[
                    RowBox[{"u", "[", "t", "]"}], "uh"], ")"}], 
                   RowBox[{"2", "+", "z", "-", "\[Theta]"}]], "+", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["uh", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "2"}], " ", "z"}], "+", 
                    RowBox[{"2", " ", "\[Theta]"}]}]], " ", 
                    RowBox[{"(", 
                    RowBox[{"z", "-", "\[Theta]"}], ")"}], " ", 
                    SuperscriptBox["\[Mu]", "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"u", "[", "t", "]"}], 
                    RowBox[{"2", "+", 
                    RowBox[{"2", " ", "z"}], "-", 
                    RowBox[{"2", " ", "\[Theta]"}]}]], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"u", "[", "t", "]"}], "uh"], ")"}], 
                    RowBox[{
                    RowBox[{"-", "z"}], "+", "\[Theta]"}]]}], ")"}]}], 
                   RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{"2", "-", "\[Theta]"}], ")"}]}]]}], ")"}]}], "-", 
               
               FractionBox[
                SuperscriptBox[
                 RowBox[{
                  SuperscriptBox["u", "\[Prime]",
                   MultilineFunction->None], "[", "t", "]"}], "2"], 
                RowBox[{"1", "-", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   FractionBox[
                    RowBox[{"u", "[", "t", "]"}], "uh"], ")"}], 
                  RowBox[{"2", "+", "z", "-", "\[Theta]"}]], "+", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["uh", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "2"}], " ", "z"}], "+", 
                    RowBox[{"2", " ", "\[Theta]"}]}]], " ", 
                   RowBox[{"(", 
                    RowBox[{"z", "-", "\[Theta]"}], ")"}], " ", 
                   SuperscriptBox["\[Mu]", "2"], " ", 
                   SuperscriptBox[
                    RowBox[{"u", "[", "t", "]"}], 
                    RowBox[{"2", "+", 
                    RowBox[{"2", " ", "z"}], "-", 
                    RowBox[{"2", " ", "\[Theta]"}]}]], " ", 
                   RowBox[{"(", 
                    RowBox[{"1", "-", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"u", "[", "t", "]"}], "uh"], ")"}], 
                    RowBox[{
                    RowBox[{"-", "z"}], "+", "\[Theta]"}]]}], ")"}]}], 
                  RowBox[{"2", " ", 
                   RowBox[{"(", 
                    RowBox[{"2", "-", "\[Theta]"}], ")"}]}]]}]]}], ")"}]}]}], 
           ")"}]}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"u", "[", "t", "]"}], 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              FractionBox["\[Theta]", "2"]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              FractionBox[
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "2"}], "-", "z", "+", "\[Theta]"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"u", "[", "t", "]"}], 
                 RowBox[{"3", "-", 
                  RowBox[{"2", " ", "z"}]}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{"u", "[", "t", "]"}], "uh"], ")"}], 
                 RowBox[{"z", "-", "\[Theta]"}]]}], 
               SuperscriptBox["uh", "2"]], "-", 
              FractionBox[
               RowBox[{
                SuperscriptBox["uh", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "2"}], " ", "z"}], "+", 
                  RowBox[{"2", " ", "\[Theta]"}]}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"z", "-", "\[Theta]"}], ")"}], "2"], " ", 
                SuperscriptBox["\[Mu]", "2"], " ", 
                SuperscriptBox[
                 RowBox[{"u", "[", "t", "]"}], 
                 RowBox[{"3", "-", 
                  RowBox[{"2", " ", "\[Theta]"}]}]], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{"u", "[", "t", "]"}], "uh"], ")"}], 
                 RowBox[{
                  RowBox[{"-", "z"}], "+", "\[Theta]"}]]}], 
               RowBox[{"2", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "2"}], "+", "\[Theta]"}], ")"}]}]], "+", 
              FractionBox[
               RowBox[{
                SuperscriptBox["uh", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "2"}], " ", "z"}], "+", 
                  RowBox[{"2", " ", "\[Theta]"}]}]], " ", 
                RowBox[{"(", 
                 RowBox[{"z", "-", "\[Theta]"}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{"1", "+", "z", "-", "\[Theta]"}], ")"}], " ", 
                SuperscriptBox["\[Mu]", "2"], " ", 
                SuperscriptBox[
                 RowBox[{"u", "[", "t", "]"}], 
                 RowBox[{"3", "-", 
                  RowBox[{"2", " ", "\[Theta]"}]}]], " ", 
                RowBox[{"(", 
                 RowBox[{"1", "-", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    FractionBox[
                    RowBox[{"u", "[", "t", "]"}], "uh"], ")"}], 
                   RowBox[{
                    RowBox[{"-", "z"}], "+", "\[Theta]"}]]}], ")"}]}], 
               RowBox[{"2", "-", "\[Theta]"}]], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"2", "-", 
                 RowBox[{"2", " ", "z"}]}], ")"}], " ", 
               SuperscriptBox[
                RowBox[{"u", "[", "t", "]"}], 
                RowBox[{"1", "-", 
                 RowBox[{"2", " ", "z"}]}]], " ", 
               RowBox[{"(", 
                RowBox[{"1", "-", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   FractionBox[
                    RowBox[{"u", "[", "t", "]"}], "uh"], ")"}], 
                  RowBox[{"2", "+", "z", "-", "\[Theta]"}]], "+", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["uh", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "2"}], " ", "z"}], "+", 
                    RowBox[{"2", " ", "\[Theta]"}]}]], " ", 
                   RowBox[{"(", 
                    RowBox[{"z", "-", "\[Theta]"}], ")"}], " ", 
                   SuperscriptBox["\[Mu]", "2"], " ", 
                   SuperscriptBox[
                    RowBox[{"u", "[", "t", "]"}], 
                    RowBox[{"2", "+", 
                    RowBox[{"2", " ", "z"}], "-", 
                    RowBox[{"2", " ", "\[Theta]"}]}]], " ", 
                   RowBox[{"(", 
                    RowBox[{"1", "-", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"u", "[", "t", "]"}], "uh"], ")"}], 
                    RowBox[{
                    RowBox[{"-", "z"}], "+", "\[Theta]"}]]}], ")"}]}], 
                  RowBox[{"2", " ", 
                   RowBox[{"(", 
                    RowBox[{"2", "-", "\[Theta]"}], ")"}]}]]}], ")"}]}], "+", 
              
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", 
                    FractionBox[
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"2", "+", "z", "-", "\[Theta]"}], ")"}], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"u", "[", "t", "]"}], "uh"], ")"}], 
                    RowBox[{"1", "+", "z", "-", "\[Theta]"}]]}], "uh"]}], "-", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["uh", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "2"}], " ", "z"}], "+", 
                    RowBox[{"2", " ", "\[Theta]"}]}]], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"z", "-", "\[Theta]"}], ")"}], "2"], " ", 
                    SuperscriptBox["\[Mu]", "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"u", "[", "t", "]"}], 
                    RowBox[{"1", "+", 
                    RowBox[{"2", " ", "z"}], "-", 
                    RowBox[{"2", " ", "\[Theta]"}]}]], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"u", "[", "t", "]"}], "uh"], ")"}], 
                    RowBox[{
                    RowBox[{"-", "z"}], "+", "\[Theta]"}]]}], 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], "+", "\[Theta]"}], ")"}]}]], "+", 
                   FractionBox[
                    RowBox[{
                    SuperscriptBox["uh", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "2"}], " ", "z"}], "+", 
                    RowBox[{"2", " ", "\[Theta]"}]}]], " ", 
                    RowBox[{"(", 
                    RowBox[{"z", "-", "\[Theta]"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", "z", "-", "\[Theta]"}], ")"}], " ", 
                    SuperscriptBox["\[Mu]", "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"u", "[", "t", "]"}], 
                    RowBox[{"1", "+", 
                    RowBox[{"2", " ", "z"}], "-", 
                    RowBox[{"2", " ", "\[Theta]"}]}]], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"u", "[", "t", "]"}], "uh"], ")"}], 
                    RowBox[{
                    RowBox[{"-", "z"}], "+", "\[Theta]"}]]}], ")"}]}], 
                    RowBox[{"2", "-", "\[Theta]"}]]}], ")"}], " ", 
                 SuperscriptBox[
                  RowBox[{
                   SuperscriptBox["u", "\[Prime]",
                    MultilineFunction->None], "[", "t", "]"}], "2"]}], ")"}], 
               "/", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    FractionBox[
                    RowBox[{"u", "[", "t", "]"}], "uh"], ")"}], 
                   RowBox[{"2", "+", "z", "-", "\[Theta]"}]], "-", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["uh", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "2"}], " ", "z"}], "+", 
                    RowBox[{"2", " ", "\[Theta]"}]}]], " ", 
                    RowBox[{"(", 
                    RowBox[{"z", "-", "\[Theta]"}], ")"}], " ", 
                    SuperscriptBox["\[Mu]", "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"u", "[", "t", "]"}], 
                    RowBox[{"2", "+", 
                    RowBox[{"2", " ", "z"}], "-", 
                    RowBox[{"2", " ", "\[Theta]"}]}]], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"u", "[", "t", "]"}], "uh"], ")"}], 
                    RowBox[{
                    RowBox[{"-", "z"}], "+", "\[Theta]"}]]}], ")"}]}], 
                   RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{"2", "-", "\[Theta]"}], ")"}]}]]}], ")"}], 
                "2"]}]}], ")"}]}], ")"}], "/", 
          RowBox[{"(", 
           RowBox[{"2", " ", 
            RowBox[{"\[Sqrt]", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SuperscriptBox[
                 RowBox[{"u", "[", "t", "]"}], 
                 RowBox[{"2", "-", 
                  RowBox[{"2", " ", "z"}]}]], " ", 
                RowBox[{"(", 
                 RowBox[{"1", "-", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    FractionBox[
                    RowBox[{"u", "[", "t", "]"}], "uh"], ")"}], 
                   RowBox[{"2", "+", "z", "-", "\[Theta]"}]], "+", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["uh", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "2"}], " ", "z"}], "+", 
                    RowBox[{"2", " ", "\[Theta]"}]}]], " ", 
                    RowBox[{"(", 
                    RowBox[{"z", "-", "\[Theta]"}], ")"}], " ", 
                    SuperscriptBox["\[Mu]", "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"u", "[", "t", "]"}], 
                    RowBox[{"2", "+", 
                    RowBox[{"2", " ", "z"}], "-", 
                    RowBox[{"2", " ", "\[Theta]"}]}]], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"u", "[", "t", "]"}], "uh"], ")"}], 
                    RowBox[{
                    RowBox[{"-", "z"}], "+", "\[Theta]"}]]}], ")"}]}], 
                   RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{"2", "-", "\[Theta]"}], ")"}]}]]}], ")"}]}], "-", 
               
               FractionBox[
                SuperscriptBox[
                 RowBox[{
                  SuperscriptBox["u", "\[Prime]",
                   MultilineFunction->None], "[", "t", "]"}], "2"], 
                RowBox[{"1", "-", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   FractionBox[
                    RowBox[{"u", "[", "t", "]"}], "uh"], ")"}], 
                  RowBox[{"2", "+", "z", "-", "\[Theta]"}]], "+", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["uh", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "2"}], " ", "z"}], "+", 
                    RowBox[{"2", " ", "\[Theta]"}]}]], " ", 
                   RowBox[{"(", 
                    RowBox[{"z", "-", "\[Theta]"}], ")"}], " ", 
                   SuperscriptBox["\[Mu]", "2"], " ", 
                   SuperscriptBox[
                    RowBox[{"u", "[", "t", "]"}], 
                    RowBox[{"2", "+", 
                    RowBox[{"2", " ", "z"}], "-", 
                    RowBox[{"2", " ", "\[Theta]"}]}]], " ", 
                   RowBox[{"(", 
                    RowBox[{"1", "-", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"u", "[", "t", "]"}], "uh"], ")"}], 
                    RowBox[{
                    RowBox[{"-", "z"}], "+", "\[Theta]"}]]}], ")"}]}], 
                  RowBox[{"2", " ", 
                   RowBox[{"(", 
                    RowBox[{"2", "-", "\[Theta]"}], ")"}]}]]}]]}], ")"}]}]}], 
           ")"}]}], "-", 
         RowBox[{
          FractionBox["1", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "\[Theta]"}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"u", "[", "t", "]"}], 
           RowBox[{
            RowBox[{"-", "2"}], "+", 
            FractionBox["\[Theta]", "2"]}]], " ", 
          RowBox[{"\[Sqrt]", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SuperscriptBox[
               RowBox[{"u", "[", "t", "]"}], 
               RowBox[{"2", "-", 
                RowBox[{"2", " ", "z"}]}]], " ", 
              RowBox[{"(", 
               RowBox[{"1", "-", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{"u", "[", "t", "]"}], "uh"], ")"}], 
                 RowBox[{"2", "+", "z", "-", "\[Theta]"}]], "+", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["uh", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"-", "2"}], " ", "z"}], "+", 
                    RowBox[{"2", " ", "\[Theta]"}]}]], " ", 
                  RowBox[{"(", 
                   RowBox[{"z", "-", "\[Theta]"}], ")"}], " ", 
                  SuperscriptBox["\[Mu]", "2"], " ", 
                  SuperscriptBox[
                   RowBox[{"u", "[", "t", "]"}], 
                   RowBox[{"2", "+", 
                    RowBox[{"2", " ", "z"}], "-", 
                    RowBox[{"2", " ", "\[Theta]"}]}]], " ", 
                  RowBox[{"(", 
                   RowBox[{"1", "-", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"u", "[", "t", "]"}], "uh"], ")"}], 
                    RowBox[{
                    RowBox[{"-", "z"}], "+", "\[Theta]"}]]}], ")"}]}], 
                 RowBox[{"2", " ", 
                  RowBox[{"(", 
                   RowBox[{"2", "-", "\[Theta]"}], ")"}]}]]}], ")"}]}], "-", 
             FractionBox[
              SuperscriptBox[
               RowBox[{
                SuperscriptBox["u", "\[Prime]",
                 MultilineFunction->None], "[", "t", "]"}], "2"], 
              RowBox[{"1", "-", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"u", "[", "t", "]"}], "uh"], ")"}], 
                RowBox[{"2", "+", "z", "-", "\[Theta]"}]], "+", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["uh", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "2"}], " ", "z"}], "+", 
                   RowBox[{"2", " ", "\[Theta]"}]}]], " ", 
                 RowBox[{"(", 
                  RowBox[{"z", "-", "\[Theta]"}], ")"}], " ", 
                 SuperscriptBox["\[Mu]", "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"u", "[", "t", "]"}], 
                  RowBox[{"2", "+", 
                   RowBox[{"2", " ", "z"}], "-", 
                   RowBox[{"2", " ", "\[Theta]"}]}]], " ", 
                 RowBox[{"(", 
                  RowBox[{"1", "-", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"u", "[", "t", "]"}], "uh"], ")"}], 
                    RowBox[{
                    RowBox[{"-", "z"}], "+", "\[Theta]"}]]}], ")"}]}], 
                RowBox[{"2", " ", 
                 RowBox[{"(", 
                  RowBox[{"2", "-", "\[Theta]"}], ")"}]}]]}]]}], ")"}]}]}], 
         "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"u", "[", "t", "]"}], 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              FractionBox["\[Theta]", "2"]}]], " ", 
            RowBox[{
             SuperscriptBox["u", "\[Prime]\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], ")"}], "/", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "-", 
              SuperscriptBox[
               RowBox[{"(", 
                FractionBox[
                 RowBox[{"u", "[", "t", "]"}], "uh"], ")"}], 
               RowBox[{"2", "+", "z", "-", "\[Theta]"}]], "+", 
              FractionBox[
               RowBox[{
                SuperscriptBox["uh", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "2"}], " ", "z"}], "+", 
                  RowBox[{"2", " ", "\[Theta]"}]}]], " ", 
                RowBox[{"(", 
                 RowBox[{"z", "-", "\[Theta]"}], ")"}], " ", 
                SuperscriptBox["\[Mu]", "2"], " ", 
                SuperscriptBox[
                 RowBox[{"u", "[", "t", "]"}], 
                 RowBox[{"2", "+", 
                  RowBox[{"2", " ", "z"}], "-", 
                  RowBox[{"2", " ", "\[Theta]"}]}]], " ", 
                RowBox[{"(", 
                 RowBox[{"1", "-", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    FractionBox[
                    RowBox[{"u", "[", "t", "]"}], "uh"], ")"}], 
                   RowBox[{
                    RowBox[{"-", "z"}], "+", "\[Theta]"}]]}], ")"}]}], 
               RowBox[{"2", " ", 
                RowBox[{"(", 
                 RowBox[{"2", "-", "\[Theta]"}], ")"}]}]]}], ")"}], " ", 
            RowBox[{"\[Sqrt]", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SuperscriptBox[
                 RowBox[{"u", "[", "t", "]"}], 
                 RowBox[{"2", "-", 
                  RowBox[{"2", " ", "z"}]}]], " ", 
                RowBox[{"(", 
                 RowBox[{"1", "-", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    FractionBox[
                    RowBox[{"u", "[", "t", "]"}], "uh"], ")"}], 
                   RowBox[{"2", "+", "z", "-", "\[Theta]"}]], "+", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["uh", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "2"}], " ", "z"}], "+", 
                    RowBox[{"2", " ", "\[Theta]"}]}]], " ", 
                    RowBox[{"(", 
                    RowBox[{"z", "-", "\[Theta]"}], ")"}], " ", 
                    SuperscriptBox["\[Mu]", "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"u", "[", "t", "]"}], 
                    RowBox[{"2", "+", 
                    RowBox[{"2", " ", "z"}], "-", 
                    RowBox[{"2", " ", "\[Theta]"}]}]], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"u", "[", "t", "]"}], "uh"], ")"}], 
                    RowBox[{
                    RowBox[{"-", "z"}], "+", "\[Theta]"}]]}], ")"}]}], 
                   RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{"2", "-", "\[Theta]"}], ")"}]}]]}], ")"}]}], "-", 
               
               FractionBox[
                SuperscriptBox[
                 RowBox[{
                  SuperscriptBox["u", "\[Prime]",
                   MultilineFunction->None], "[", "t", "]"}], "2"], 
                RowBox[{"1", "-", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   FractionBox[
                    RowBox[{"u", "[", "t", "]"}], "uh"], ")"}], 
                  RowBox[{"2", "+", "z", "-", "\[Theta]"}]], "+", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["uh", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "2"}], " ", "z"}], "+", 
                    RowBox[{"2", " ", "\[Theta]"}]}]], " ", 
                   RowBox[{"(", 
                    RowBox[{"z", "-", "\[Theta]"}], ")"}], " ", 
                   SuperscriptBox["\[Mu]", "2"], " ", 
                   SuperscriptBox[
                    RowBox[{"u", "[", "t", "]"}], 
                    RowBox[{"2", "+", 
                    RowBox[{"2", " ", "z"}], "-", 
                    RowBox[{"2", " ", "\[Theta]"}]}]], " ", 
                   RowBox[{"(", 
                    RowBox[{"1", "-", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"u", "[", "t", "]"}], "uh"], ")"}], 
                    RowBox[{
                    RowBox[{"-", "z"}], "+", "\[Theta]"}]]}], ")"}]}], 
                  RowBox[{"2", " ", 
                   RowBox[{"(", 
                    RowBox[{"2", "-", "\[Theta]"}], ")"}]}]]}]]}], ")"}]}]}], 
           ")"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"u", "[", "t", "]"}], 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              FractionBox["\[Theta]", "2"]}]], " ", 
            RowBox[{
             SuperscriptBox["u", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"2", "-", 
                 RowBox[{"2", " ", "z"}]}], ")"}], " ", 
               SuperscriptBox[
                RowBox[{"u", "[", "t", "]"}], 
                RowBox[{"1", "-", 
                 RowBox[{"2", " ", "z"}]}]], " ", 
               RowBox[{"(", 
                RowBox[{"1", "-", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   FractionBox[
                    RowBox[{"u", "[", "t", "]"}], "uh"], ")"}], 
                  RowBox[{"2", "+", "z", "-", "\[Theta]"}]], "+", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["uh", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "2"}], " ", "z"}], "+", 
                    RowBox[{"2", " ", "\[Theta]"}]}]], " ", 
                   RowBox[{"(", 
                    RowBox[{"z", "-", "\[Theta]"}], ")"}], " ", 
                   SuperscriptBox["\[Mu]", "2"], " ", 
                   SuperscriptBox[
                    RowBox[{"u", "[", "t", "]"}], 
                    RowBox[{"2", "+", 
                    RowBox[{"2", " ", "z"}], "-", 
                    RowBox[{"2", " ", "\[Theta]"}]}]], " ", 
                   RowBox[{"(", 
                    RowBox[{"1", "-", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"u", "[", "t", "]"}], "uh"], ")"}], 
                    RowBox[{
                    RowBox[{"-", "z"}], "+", "\[Theta]"}]]}], ")"}]}], 
                  RowBox[{"2", " ", 
                   RowBox[{"(", 
                    RowBox[{"2", "-", "\[Theta]"}], ")"}]}]]}], ")"}], " ", 
               RowBox[{
                SuperscriptBox["u", "\[Prime]",
                 MultilineFunction->None], "[", "t", "]"}]}], "+", 
              RowBox[{
               FractionBox["1", 
                RowBox[{"2", " ", 
                 SuperscriptBox["uh", "2"], " ", 
                 RowBox[{"(", 
                  RowBox[{"2", "-", "\[Theta]"}], ")"}]}]], 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"u", "[", "t", "]"}], 
                 RowBox[{"3", "-", 
                  RowBox[{"2", " ", "z"}]}]], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "2"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], "+", "\[Theta]"}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], "-", "z", "+", "\[Theta]"}], ")"}], 
                   " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"u", "[", "t", "]"}], "uh"], ")"}], 
                    RowBox[{"z", "-", "\[Theta]"}]]}], "+", 
                  RowBox[{
                   SuperscriptBox["uh", 
                    RowBox[{"2", "-", 
                    RowBox[{"2", " ", "z"}], "+", 
                    RowBox[{"2", " ", "\[Theta]"}]}]], " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"z", "-", "\[Theta]"}], ")"}], "2"], " ", 
                   SuperscriptBox["\[Mu]", "2"], " ", 
                   SuperscriptBox[
                    RowBox[{"u", "[", "t", "]"}], 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{"z", "-", "\[Theta]"}], ")"}]}]], " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"u", "[", "t", "]"}], "uh"], ")"}], 
                    RowBox[{
                    RowBox[{"-", "z"}], "+", "\[Theta]"}]]}], "+", 
                  RowBox[{"2", " ", 
                   SuperscriptBox["uh", 
                    RowBox[{"2", "-", 
                    RowBox[{"2", " ", "z"}], "+", 
                    RowBox[{"2", " ", "\[Theta]"}]}]], " ", 
                   RowBox[{"(", 
                    RowBox[{"z", "-", "\[Theta]"}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{"1", "+", "z", "-", "\[Theta]"}], ")"}], " ", 
                   SuperscriptBox["\[Mu]", "2"], " ", 
                   SuperscriptBox[
                    RowBox[{"u", "[", "t", "]"}], 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{"z", "-", "\[Theta]"}], ")"}]}]], " ", 
                   RowBox[{"(", 
                    RowBox[{"1", "-", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"u", "[", "t", "]"}], "uh"], ")"}], 
                    RowBox[{
                    RowBox[{"-", "z"}], "+", "\[Theta]"}]]}], ")"}]}]}], 
                 ")"}], " ", 
                RowBox[{
                 SuperscriptBox["u", "\[Prime]",
                  MultilineFunction->None], "[", "t", "]"}]}]}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"u", "[", "t", "]"}], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "2"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], "+", "\[Theta]"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], "-", "z", "+", "\[Theta]"}], ")"}], 
                    " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"u", "[", "t", "]"}], "uh"], ")"}], 
                    RowBox[{"z", "-", "\[Theta]"}]]}], "+", 
                   RowBox[{
                    SuperscriptBox["uh", 
                    RowBox[{"2", "-", 
                    RowBox[{"2", " ", "z"}], "+", 
                    RowBox[{"2", " ", "\[Theta]"}]}]], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"z", "-", "\[Theta]"}], ")"}], "2"], " ", 
                    SuperscriptBox["\[Mu]", "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"u", "[", "t", "]"}], 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{"z", "-", "\[Theta]"}], ")"}]}]], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"u", "[", "t", "]"}], "uh"], ")"}], 
                    RowBox[{
                    RowBox[{"-", "z"}], "+", "\[Theta]"}]]}], "+", 
                   RowBox[{"2", " ", 
                    SuperscriptBox["uh", 
                    RowBox[{"2", "-", 
                    RowBox[{"2", " ", "z"}], "+", 
                    RowBox[{"2", " ", "\[Theta]"}]}]], " ", 
                    RowBox[{"(", 
                    RowBox[{"z", "-", "\[Theta]"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", "z", "-", "\[Theta]"}], ")"}], " ", 
                    SuperscriptBox["\[Mu]", "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"u", "[", "t", "]"}], 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{"z", "-", "\[Theta]"}], ")"}]}]], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"u", "[", "t", "]"}], "uh"], ")"}], 
                    RowBox[{
                    RowBox[{"-", "z"}], "+", "\[Theta]"}]]}], ")"}]}]}], 
                  ")"}], " ", 
                 SuperscriptBox[
                  RowBox[{
                   SuperscriptBox["u", "\[Prime]",
                    MultilineFunction->None], "[", "t", "]"}], "3"]}], ")"}], 
               "/", 
               RowBox[{"(", 
                RowBox[{"2", " ", 
                 SuperscriptBox["uh", "2"], " ", 
                 RowBox[{"(", 
                  RowBox[{"2", "-", "\[Theta]"}], ")"}], " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"u", "[", "t", "]"}], "uh"], ")"}], 
                    RowBox[{"2", "+", "z", "-", "\[Theta]"}]], "-", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["uh", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "2"}], " ", "z"}], "+", 
                    RowBox[{"2", " ", "\[Theta]"}]}]], " ", 
                    RowBox[{"(", 
                    RowBox[{"z", "-", "\[Theta]"}], ")"}], " ", 
                    SuperscriptBox["\[Mu]", "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"u", "[", "t", "]"}], 
                    RowBox[{"2", "+", 
                    RowBox[{"2", " ", "z"}], "-", 
                    RowBox[{"2", " ", "\[Theta]"}]}]], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"u", "[", "t", "]"}], "uh"], ")"}], 
                    RowBox[{
                    RowBox[{"-", "z"}], "+", "\[Theta]"}]]}], ")"}]}], 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{"2", "-", "\[Theta]"}], ")"}]}]]}], ")"}], "2"]}],
                 ")"}]}], "-", 
              FractionBox[
               RowBox[{"2", " ", 
                RowBox[{
                 SuperscriptBox["u", "\[Prime]",
                  MultilineFunction->None], "[", "t", "]"}], " ", 
                RowBox[{
                 SuperscriptBox["u", "\[Prime]\[Prime]",
                  MultilineFunction->None], "[", "t", "]"}]}], 
               RowBox[{"1", "-", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox[
                   RowBox[{"u", "[", "t", "]"}], "uh"], ")"}], 
                 RowBox[{"2", "+", "z", "-", "\[Theta]"}]], "+", 
                FractionBox[
                 RowBox[{
                  SuperscriptBox["uh", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"-", "2"}], " ", "z"}], "+", 
                    RowBox[{"2", " ", "\[Theta]"}]}]], " ", 
                  RowBox[{"(", 
                   RowBox[{"z", "-", "\[Theta]"}], ")"}], " ", 
                  SuperscriptBox["\[Mu]", "2"], " ", 
                  SuperscriptBox[
                   RowBox[{"u", "[", "t", "]"}], 
                   RowBox[{"2", "+", 
                    RowBox[{"2", " ", "z"}], "-", 
                    RowBox[{"2", " ", "\[Theta]"}]}]], " ", 
                  RowBox[{"(", 
                   RowBox[{"1", "-", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"u", "[", "t", "]"}], "uh"], ")"}], 
                    RowBox[{
                    RowBox[{"-", "z"}], "+", "\[Theta]"}]]}], ")"}]}], 
                 RowBox[{"2", " ", 
                  RowBox[{"(", 
                   RowBox[{"2", "-", "\[Theta]"}], ")"}]}]]}]]}], ")"}]}], 
           ")"}], "/", 
          RowBox[{"(", 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              SuperscriptBox[
               RowBox[{"(", 
                FractionBox[
                 RowBox[{"u", "[", "t", "]"}], "uh"], ")"}], 
               RowBox[{"2", "+", "z", "-", "\[Theta]"}]], "+", 
              FractionBox[
               RowBox[{
                SuperscriptBox["uh", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "2"}], " ", "z"}], "+", 
                  RowBox[{"2", " ", "\[Theta]"}]}]], " ", 
                RowBox[{"(", 
                 RowBox[{"z", "-", "\[Theta]"}], ")"}], " ", 
                SuperscriptBox["\[Mu]", "2"], " ", 
                SuperscriptBox[
                 RowBox[{"u", "[", "t", "]"}], 
                 RowBox[{"2", "+", 
                  RowBox[{"2", " ", "z"}], "-", 
                  RowBox[{"2", " ", "\[Theta]"}]}]], " ", 
                RowBox[{"(", 
                 RowBox[{"1", "-", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    FractionBox[
                    RowBox[{"u", "[", "t", "]"}], "uh"], ")"}], 
                   RowBox[{
                    RowBox[{"-", "z"}], "+", "\[Theta]"}]]}], ")"}]}], 
               RowBox[{"2", " ", 
                RowBox[{"(", 
                 RowBox[{"2", "-", "\[Theta]"}], ")"}]}]]}], ")"}], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SuperscriptBox[
                 RowBox[{"u", "[", "t", "]"}], 
                 RowBox[{"2", "-", 
                  RowBox[{"2", " ", "z"}]}]], " ", 
                RowBox[{"(", 
                 RowBox[{"1", "-", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    FractionBox[
                    RowBox[{"u", "[", "t", "]"}], "uh"], ")"}], 
                   RowBox[{"2", "+", "z", "-", "\[Theta]"}]], "+", 
                  FractionBox[
                   RowBox[{
                    SuperscriptBox["uh", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "2"}], " ", "z"}], "+", 
                    RowBox[{"2", " ", "\[Theta]"}]}]], " ", 
                    RowBox[{"(", 
                    RowBox[{"z", "-", "\[Theta]"}], ")"}], " ", 
                    SuperscriptBox["\[Mu]", "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"u", "[", "t", "]"}], 
                    RowBox[{"2", "+", 
                    RowBox[{"2", " ", "z"}], "-", 
                    RowBox[{"2", " ", "\[Theta]"}]}]], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"u", "[", "t", "]"}], "uh"], ")"}], 
                    RowBox[{
                    RowBox[{"-", "z"}], "+", "\[Theta]"}]]}], ")"}]}], 
                   RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{"2", "-", "\[Theta]"}], ")"}]}]]}], ")"}]}], "-", 
               
               FractionBox[
                SuperscriptBox[
                 RowBox[{
                  SuperscriptBox["u", "\[Prime]",
                   MultilineFunction->None], "[", "t", "]"}], "2"], 
                RowBox[{"1", "-", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   FractionBox[
                    RowBox[{"u", "[", "t", "]"}], "uh"], ")"}], 
                  RowBox[{"2", "+", "z", "-", "\[Theta]"}]], "+", 
                 FractionBox[
                  RowBox[{
                   SuperscriptBox["uh", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "2"}], " ", "z"}], "+", 
                    RowBox[{"2", " ", "\[Theta]"}]}]], " ", 
                   RowBox[{"(", 
                    RowBox[{"z", "-", "\[Theta]"}], ")"}], " ", 
                   SuperscriptBox["\[Mu]", "2"], " ", 
                   SuperscriptBox[
                    RowBox[{"u", "[", "t", "]"}], 
                    RowBox[{"2", "+", 
                    RowBox[{"2", " ", "z"}], "-", 
                    RowBox[{"2", " ", "\[Theta]"}]}]], " ", 
                   RowBox[{"(", 
                    RowBox[{"1", "-", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"u", "[", "t", "]"}], "uh"], ")"}], 
                    RowBox[{
                    RowBox[{"-", "z"}], "+", "\[Theta]"}]]}], ")"}]}], 
                  RowBox[{"2", " ", 
                   RowBox[{"(", 
                    RowBox[{"2", "-", "\[Theta]"}], ")"}]}]]}]]}], ")"}], 
             RowBox[{"3", "/", "2"}]]}], ")"}]}]}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"u", "[", "0", "]"}], "\[Equal]", " ", "us"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"u", "'"}], "[", "0", "]"}], "\[Equal]", "0"}]}], "}"}], ",",
      "u", ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0.1", ",", "5.7"}], "}"}], ",", 
     RowBox[{"Method", "\[Rule]", "\"\<ExplicitRungeKutta\>\""}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"fu1", "[", 
    RowBox[{
    "t_", ",", "q_", ",", "us_", ",", "uh_", ",", "\[Mu]_", ",", "z_", ",", 
     "\[Theta]_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"uz1", "[", 
     RowBox[{
     "q", ",", "us", ",", "uh", ",", "\[Mu]", ",", "z", ",", "\[Theta]"}], 
     "]"}], "[", "t", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.760192592390452*^9, 3.7601929217464333`*^9}, {
   3.7601929722065077`*^9, 3.760192993329393*^9}, {3.760193040762793*^9, 
   3.760193091078969*^9}, {3.760193171529488*^9, 3.7601931758456087`*^9}, {
   3.7601932067931223`*^9, 3.76019325452666*^9}, {3.760193288386395*^9, 
   3.760193323991431*^9}, {3.760193359986504*^9, 3.7601934730981483`*^9}, {
   3.76019359689893*^9, 3.760193613906886*^9}, {3.760193726224662*^9, 
   3.760193731011959*^9}, {3.760194763454104*^9, 3.760194797724354*^9}, {
   3.760195052619513*^9, 3.7601950904067793`*^9}, {3.760195140051777*^9, 
   3.760195191434626*^9}, {3.76019530188863*^9, 3.760195306139287*^9}, {
   3.760195379105094*^9, 3.760195379865697*^9}, {3.7601954544735813`*^9, 
   3.760195461877096*^9}, {3.760195548636257*^9, 3.760195560722537*^9}, {
   3.760195644850791*^9, 3.7601956504670067`*^9}, {3.760195715019919*^9, 
   3.76019571664364*^9}, {3.7602289404292517`*^9, 3.7602289778632402`*^9}, {
   3.7602293012863703`*^9, 3.760229318001708*^9}, {3.760231233851493*^9, 
   3.760231244860889*^9}, {3.760231275248008*^9, 3.760231304530704*^9}, {
   3.760231340883648*^9, 3.760231359480624*^9}, {3.760231663368948*^9, 
   3.760231761778689*^9}, {3.760231798806758*^9, 3.760231868625379*^9}, {
   3.760232034376698*^9, 3.7602320536962442`*^9}, {3.760232104469057*^9, 
   3.760232202625416*^9}, {3.7602326001879807`*^9, 3.760232611220429*^9}, {
   3.7602330217420397`*^9, 3.760233107082766*^9}, 3.760233214777938*^9, 
   3.76023325041366*^9, {3.760233395449629*^9, 3.760233398291109*^9}, 
   3.7602338257458982`*^9, {3.76023390166223*^9, 3.7602339233403273`*^9}, {
   3.760235713758239*^9, 3.7602357196761*^9}, {3.7602361706677427`*^9, 
   3.760236172433873*^9}, {3.760236205317773*^9, 3.760236206532155*^9}, {
   3.760236311363817*^9, 3.760236314144167*^9}, {3.760236391842897*^9, 
   3.760236393125551*^9}, {3.760497435137169*^9, 3.7604975544205437`*^9}, {
   3.76050286983044*^9, 3.76050290996631*^9}, {3.7605029400266523`*^9, 
   3.760502940421422*^9}, {3.76050299190031*^9, 3.760502992269438*^9}, {
   3.760503060719717*^9, 3.7605030621814547`*^9}, 3.7605030971323338`*^9, {
   3.7605032713364573`*^9, 3.760503277192334*^9}, 3.7605033125705147`*^9, {
   3.762145047382289*^9, 3.762145123000971*^9}, {3.7621453680680323`*^9, 
   3.762145383025593*^9}, {3.7621454268046827`*^9, 3.7621454521154757`*^9}, {
   3.76214896887669*^9, 3.7621489883431597`*^9}, {3.762149228513151*^9, 
   3.762149242777278*^9}, 3.762149835760147*^9, {3.7621499066265287`*^9, 
   3.762149910097723*^9}, {3.762150058516011*^9, 3.7621500623996077`*^9}, {
   3.7621503917168818`*^9, 3.762150396658319*^9}, 3.762150646321416*^9, {
   3.762150916247822*^9, 3.762150966102374*^9}, {3.762151032728849*^9, 
   3.7621510332023153`*^9}, 3.762151277503982*^9, {3.762151440143034*^9, 
   3.762151443858829*^9}, {3.762151834178965*^9, 3.7621518684212017`*^9}, {
   3.762152188519496*^9, 
   3.7621521931224213`*^9}},ExpressionUUID->"1e5217ca-884a-4b8d-9a68-\
594e6b8775a1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ListLinePlot", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"Abs", "[", 
         RowBox[{"fu1", "[", 
          RowBox[{"i", ",", 
           RowBox[{"qcrit", "[", 
            RowBox[{"0.1", ",", "1", ",", 
             RowBox[{"0.75", 
              RowBox[{"\[Mu]extreme", "[", 
               RowBox[{"1", ",", "1.5", ",", "0.1"}], "]"}]}], ",", "1.5", 
             ",", "0.1"}], "]"}], ",", "0.1", ",", "1", ",", 
           RowBox[{"0.75", 
            RowBox[{"\[Mu]extreme", "[", 
             RowBox[{"1", ",", "1.5", ",", "0.1"}], "]"}]}], ",", "1.5", ",", 
           "0.1"}], "]"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "0.1", ",", "5", ",", "0.05"}], "}"}]}], "]"}], 
    "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Abs", "[", 
          RowBox[{"fu1", "[", 
           RowBox[{"i", ",", 
            RowBox[{"qcrit", "[", 
             RowBox[{"0.1", ",", "1", ",", 
              RowBox[{"0.75", 
               RowBox[{"\[Mu]extreme", "[", 
                RowBox[{"1", ",", "1.5", ",", "0.3"}], "]"}]}], ",", "1.5", 
              ",", "0.3"}], "]"}], ",", "0.1", ",", "1", ",", 
            RowBox[{"0.75", 
             RowBox[{"\[Mu]extreme", "[", 
              RowBox[{"1", ",", "1.5", ",", "0.3"}], "]"}]}], ",", "1.5", ",",
             "0.3"}], "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0.1", ",", "5", ",", "0.05"}], "}"}]}], "]"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Orange"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Abs", "[", 
          RowBox[{"fu1", "[", 
           RowBox[{"i", ",", " ", 
            RowBox[{"qcrit", "[", 
             RowBox[{"0.1", ",", "1", ",", 
              RowBox[{"0.75", 
               RowBox[{"\[Mu]extreme", "[", 
                RowBox[{"1", ",", "1.5", ",", "0.5"}], "]"}]}], ",", "1.5", 
              ",", "0.5"}], "]"}], ",", "0.1", ",", "1", ",", 
            RowBox[{"0.75", 
             RowBox[{"\[Mu]extreme", "[", 
              RowBox[{"1", ",", "1.5", ",", "0.5"}], "]"}]}], ",", "1.5", ",",
             "0.5"}], "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0.1", ",", "5", ",", "0.05"}], "}"}]}], "]"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Abs", "[", 
          RowBox[{"fu1", "[", 
           RowBox[{"i", ",", 
            RowBox[{"qcrit", "[", 
             RowBox[{"0.1", ",", "1", ",", 
              RowBox[{"0.75", 
               RowBox[{"\[Mu]extreme", "[", 
                RowBox[{"1", ",", "1.5", ",", "0.7"}], "]"}]}], ",", "1.5", 
              ",", "0.7"}], "]"}], ",", "0.1", ",", "1", ",", 
            RowBox[{"0.75", 
             RowBox[{"\[Mu]extreme", "[", 
              RowBox[{"1", ",", "1.5", ",", "0.7"}], "]"}]}], ",", "1.5", ",",
             "0.7"}], "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0.1", ",", "5", ",", "0.05"}], "}"}]}], "]"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Green"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0.1", ",", "5"}], "}"}], ",", "All"}], "}"}]}], ",", 
   RowBox[{"AxesOrigin", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",ExpressionUUID->"cdc59cf9-2fed-4f31-b446-e9e834a172c8"],

Cell[BoxData[
 GraphicsBox[{{{}, {{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.016666666666666666`], AbsoluteThickness[1.6], LineBox[CompressedData["

1:eJw9031MU1cUAPAWWqgU+gkzRlB0wcXp5hI+JMhyDoOIIobRBYewGYNIRbfi
SCaOMFCzBdyHs+IfgrqJI7poxehwIDJgYfIxCljZ2MCAAZquQPteS6EotGzQ
vNOT3Lx/7vmde889b0NOgeqwD4/Hy1peK9/XddUDqcZxsJUyp2xhkxDpiQnI
Ox16XJIyCb36lTBCxR1TiiZ4CtR5K2GCqwnia2s6p4DnCTO0/rXY25w7DdVV
KzEJa7SFJW3sNOdNQ+qRtel7j1o4zwI19oUP3h20cB4DDrfAURZt5TwbNFYm
1h48a+X228A1lBmRMmDlfDvIsvqWjgUzXP4MlJdsZgx7GYjy1HOAXvp4Wn2K
Ab7HmwXrZIfBrWOgz+PNwttfTNSm/Mlw3hyUGnPOsE7ynFByhQfFISznzcMj
n5c/q99iOe8FXA8b7YzYxXLeC8DZ/h0hH7Kc9xIODN/FrwtYzluAmMK0Z0/L
yFsEo+LeujfPkeeCnbHT0X9Xk+cCXmPSYf4N8tzQf2v14NBd8pZgsnt7ekUj
ef/BhtYdE9vaWK5/PByqDNWwHbSfh5oHpzeN61munzxUaoMF4U8pn48NR7vD
WwapHh+/igdl/zB5PninPH/7oVHyfNBxOcpeMUaeDxp2Ss2pRvJ8saerL7bJ
RJ4vNmRafhw2030FaMKM+l+myBPgp//8MJZhIU+AlT3uuhYreUIUFlt+dzLk
CfH+EaHI10aeH+7XNev+tZHnh5dTe3b9ZCfPDzPKQ8eSZ8jzx5AO11zXDHn+
WHhM/e0bDvJEqLvRG1fkIE+EzzqfRNx0kCfCJ+J7khYHeatwkzMzvdlB3ips
MrSbarxeAJ4fdeVqvF4AVmTlusO9XgCqyvI/a/SeT4zsH4+iI73nE+Ort7Vr
v7OTF4jJsb9d6vbeNxCvqfIvPmfJC0RtWvuhXoa8IAz0n314zkpeENbvjr+0
zkKeBAuy34st8r6HBNPsF5xaM3kS/DKBH6M2kSfFE1ti3mEmyJOialvi1rAx
mhcZFi19X2MeYbn/X4YPzie1JS7Pk4fPk+FrC3uer1+eN096lQxXZ8y//5GB
6slwRBoa/4qePDnGBByXiTrIk+OvdcWaza3kyTH7sfj6gQby5Cgc2BdXUUee
HFUjJ8+eqSVPgeL2+0ERVeQpMK7U1ZvwDXkKPHjyYnXt5+QpcH1ldqTiY/IU
GPCwfl9yFnlKvNoVVTOfRJ4Sm0607tdvJU+JUbfTFnPk1C8lbtHeurJnhuE8
Jc5d+GSjfz/DecFoGddtFN5k4H+4KZyU
       
       "]]}}, {}, {}, {}, {}}, {{}, {{}, {}, 
     {RGBColor[1, 0.5, 0], PointSize[0.016666666666666666`], 
      AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJw91H9M1GUcB/DvHQceP+64HxKGmwm6CcyACisi+HwGUW3l2WqCxjCo8auy
QjCoBGKZAdPSG0OMOKgBB7hwoaWICf4AVBQ0ygsxPeC847y77wFHx+8obs+n
9/bs+ef5vD57nj3PE/j2h6+nCzmOS/5vrMyn1CWhTbV62Hurd1dkiQm+PbaS
EQjeUJ6+tG4cnnJlDL5JjVtXJjLDjesrMcCF3EOaTTfNkJmxEiO0SoLVTfsf
AufKOKQMHN9QudHCPDMU/uxZE9VmYZ4Fxisn/evCrcyzQlDWwRdqNVbm8XAj
uSbiDmdj3gRYOy9PdyfZ2PoJWKouCm+ttzF/Eqof9Y9pH7ex+ilIedE7yLqR
h0hXPwccPm8ICnuTB4HLm4bgKw/Fr5bx0O/ypqFGdcVvoY1n3t+g2ZvYMqzj
meeE1INDDZ/NkjcDa0qSvtjhZ2feLBxV3XpuJMzOvFnoGONt+Ql25s3B/OeO
tNyddubNg5cqdtv69+zMW4Apbl/5xU/JWwRHNHhXlpK3CMf3+P4+UEHeEkQb
dndqasn7B8Thgi2bm8lbhp7mkqvf/WRn58fhI9+39MnaaT2Hos7WC/Wddnae
HF5qH9TldFO9AKc3JUZ/fY36CbAwfleBZIA8IRr3V3Vxg+QJMXRBEJZ/mzwh
vuRwWywcIs8NvW1VHevvkueGkq2jRdn3aL8ijDv5EZemJ0+E5/D6RekoeSKM
nzgS/skYee6ouxd4osFAnjs26p74teoBeR6oXxbNbzeS54GKHVnP6o3keaA2
JqA0ykTeKpyZCYp9x0TeKnwj0TyXYiJPjM2+W7UhJvLEeLuhuKj7f0+MeVFz
XISRPE/c/diEI+MBeZ44Gp+blGkgzwvl9V8lPz5Gnhea+7pfOzVCnhem5qiO
Ou+T540dkphS21/keWO6ZU/KkWHyfLAxc61i6E/yfDAg7q24s3+Q54Mebr2C
kN/Ik+C10sYf/fvJk2DWOUX7x1fJk6LF0JYTeZk8KUqb+LPPnydPilu2qbsK
TpPni5Xi+3X9J8jzRXPtgHuglu6LDKVhub+oauzs/cvQWV7m96TaDi4+Q4YN
OwsO131pB1f5MRlyrTML2fnUT4bLHkpdUiZ5csw7qd+3eTt5cqypDo34AcmT
o2jYqXg3hDw5GpcSpkJ9yZOj+n29pXiSZ54C+7PzrM4BnnkKzG+qcEpbeOYp
UJsoj3y6mGeeAssi1vb1qnjmKTD25UsfeK4hT4kHTkNT8B0b85Qo16TdfKbC
xjwl1nWpz4Qm0P+lxJ4zjdyghf5DJQr7Xgm4e8DKvNXIpWuXe1Zb4V9aP5iW

       "]]}}, {}, {}, {}, {}}, {{}, {{}, {}, 
     {RGBColor[1, 0, 0], PointSize[0.016666666666666666`], AbsoluteThickness[
      1.6], LineBox[CompressedData["
1:eJw11HtQlFUUAPDlzfLch0ECK5FARkTymKCYOIdxlkJHEyIVAUESAgmBP0x7
4GCBiNVIPIVCDLZk2BEYmRggCVBZXgvNxOTIYoq6wAK736JrgrBJsXPPmblz
/znnd+ae+b7jlZoTm2bO4/FS/j8bd2ncjthuyZ8weshqwqdvGkKCN2ICYhdd
3OMT7kO6KW7BxLSytdLwAGprNmISoosG6+TJahhXbsQdMDQZl3JlM8AzxTSA
7HadWDHL8u/DpKv0E+nQHJj44IfwlndVUFyLBsZM9WowiCQHw76Yh49N/WZB
evTH6ouBC8zTgGtWf5R+YoF583CukyuLO7LIvEWo9atZ6VUvMk8LEReKEvT7
tMzjoDp2TZF3Tcu8JchOWbgnd9Gx/CW4JFu3uZOuY/4jUDd9F7ilRcfqH0OM
h/uRHJ2OzccAZ++ioc2HAzOT9wSqi2OPyvdzbB5PIGTSLFBYyDHvH8h+IV5X
IOeY9xQ8Qu9dLh7nmLcMAVn6jgYdeSvgOfz+p5F8PfNW4Cex4g+Fl555zyDc
QlJzLlTPvFWoFdYqVTv1zFuDG0EP6owJeuYZIX1gV97rWeQZYUY52tF4krx/
oX+tQX6+kLzn4JBksPc4T946jP2c2njsgp7Nj4cl+gBV0yXK52HVSMNrmst6
Nk8ePi2K+D6qherN0Cp0/9+qdupnhhmDU45dneSZ415RUsXja+SZo8oQXlHV
R545piaf3Hz1BnkWWGjnKd2rIM8C3z0h/ezzIXqvJR6fijoRNkKeJY7Xfphf
OkqeJabMPU8oVpJnha5ZPcUvjZFnhb27o30OjZFnjcUf5Qsjx8izxqln/uoh
JXnW+GiglzOMkmeDToV+b/aOkGeDbtL0DN9h8mxx5MxF5dZB8mxxNd7/jbab
5NnizX3+g9f7yeNj5Mq3rjG/k8fHrl9eHN7TTZ4dzkq8Tl35lTw7nC8vq09s
I88OD7zX7RXdTJ49dhXsjEhqJM8ejxcce6XgB/Ic8BT/g9bKMvIc0E0c+SD/
LHkOWDEjqNiUT54jTqT1TW/PJc8R83Prq2SHyXNC/WR5eXgMeU7Y3rGV/1sE
eU6YucdOPv0qec4Y6Hfr+mERec6Y2J3mvbDMse9FgENBCit3Fcf+fwHuaqtv
Lunk2L4SYPO2xqWeMg5M5TUCNIuMkW3P4Fg/AY6eWZJHh5EnxO4O3nKSOXlC
POi2HHxlQMc8IUpqXt6RfFrHPCG2BliknQ6h/SHE6q/KPS3u0n4R4e60b/66
+qWWeSLckpLr9LazlnkizNQYczZXLDJPhO/IIjJkfNpfIqxsXy0xZtP+E6PU
q6fSoXeeeWKc07r7fr2qYZ4YeQ/XFUqJhs1LjHmKuG2OvnPME2OpKiHTRTDL
vE1Y6H2gI/G2Gv4D6pu28g==
       "]]}}, {}, {}, {}, {}}, {{}, {{}, {}, 
     {RGBColor[0, 1, 0], PointSize[0.016666666666666666`], AbsoluteThickness[
      1.6], LineBox[CompressedData["
1:eJw11HlMlFcQAPBlXa5ll71qCIUEVBClhaRdjlShM6ASRQiUEiCiaCEI6dJC
iwlnRUEsRVAWqHJVoA1pUXRNRFFAQKDVKhgrRZajBQRhF/aCLpdytGzfm+TL
98c383v5JjNvW3RiSCyTwWDE/PdsvivKN+M+NPr2ny+RPwc38WZ0QVvii+La
pX74//vvECZaW4o4NQQMQzyH5YH6lDXJ3yS/DxIcxdkFK2Nw0hAvQeWQ2R9R
8IrUD8IVm6NKH/0EPOvZjBGIsHIdsvF4Tbwx6ExKqWeFTZH8caiqTL5WEj4N
Bl48AS7Fl54seCug11A/Cfbpx8o3LJQQZzhvCnwCH8o+6lYSTwEu+huTyvgZ
4imhLlD1w7urM8SbBavbOdqarFniqUApqVZvW5glngYUG6yTVlEq4ungV46/
/Z8tKpKvg30JU3e/5amJPwftXre2+h5Rk/p58Eizq1usUpP+/APhcY+ds+Rq
MDJ4etjuNB9zlash/dCDlUJ8gumtId4CGN32rfWL0xBvEVgPuliLBRriLUHc
fnlmwU0N8ZYByloqU3uotwyyM3mLttPUW4ETbqroP9ap9waUlYdFkyIt8d7C
Hp9zpRU7tcRbhbR0lexDTy3xVqEie9h94oCWeGuworC+NRKiJd46RJZdZPhH
UW8DwlO2a4LjtaR/DOReDqoRfkXzGZjf3cxtSNWSfjJwTMqL9Mii9UaosAtx
enSOnmeEgWcm/kr6jnpMlDZWqnwLqcdEc7F0+VAR9Zjost/dpKiYeltQHjpd
aVtKvS3ICQse0pfS/2XhU5aw0OZ76rHwqvUxN2kp9VjIGRw1Di2hnjHWsOwV
x6XUM8a0L5Zibl6kngmWOxVd8rhAPRMcm3ugU52nngn6ZzaHd52lninqnONl
v2RQzxRT++J/yztFPTO8IFWwAxKoZ4ajVtc+HoimnhnePWpnaxFBPXM8bR6r
6zpMPXO8LHnhOOhNPTaG8YPbbV2px8ZYCa/jiC312Dg63ZkdYUY9C6wWN73p
m6PzZIH599nD2XI6fxzMjDr0s6CVzhcHHwn2/rS9SkM8Dnq5C+oCUun8cnHX
6dZO62DqcVERXz1ovIN6lujG4ygzdXSfLPET5yYYbFITzxLtZatff5ZK94uH
HhsNdn4f0H3koSPvS0n1ON1fPpqmsfd9nqci+8/HBnlgSK6DitxXfFxPSq+/
0TgLhvJyPt7pKeZmeNL7gY/ze65MRV6fIZ4A2wbutBVZ0vtEgC9LfvR0Oq4k
ngADAvcG6SsUxBNg6M6k2sL2aeIJcLhzcpfPkyniCfHh7rIk9r3XxBPi9bbG
xJzcSeIJMeRg8tle1wniCfHg4x0DEtk48YQoa2nNYDLHiCfC7FfhuR0wQjwR
SpM/febHkBNPhA7mwpxv3u8j/RJh/oG3Xr1+T4knwq2735P7d7cR7x3kpN8L
cm7ugH8BY4/BXQ==
       "]]}}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0.1, 5}, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.762149013892497*^9},ExpressionUUID->"aa9b8af3-37bf-4c37-90d5-\
4bfcfd9bcb13"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ListLinePlot", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"Abs", "[", 
         RowBox[{"fu1", "[", 
          RowBox[{"i", ",", 
           RowBox[{"0.5", 
            RowBox[{"qcrit", "[", 
             RowBox[{"0.1", ",", "1", ",", 
              RowBox[{"0.75", 
               RowBox[{"\[Mu]extreme", "[", 
                RowBox[{"1", ",", "1.5", ",", "0.1"}], "]"}]}], ",", "1.5", 
              ",", "0.1"}], "]"}]}], ",", "0.1", ",", "1", ",", 
           RowBox[{"0.75", 
            RowBox[{"\[Mu]extreme", "[", 
             RowBox[{"1", ",", "1.5", ",", "0.1"}], "]"}]}], ",", "1.5", ",", 
           "0.1"}], "]"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "0.1", ",", "5", ",", "0.05"}], "}"}]}], "]"}], 
    "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Abs", "[", 
          RowBox[{"fu1", "[", 
           RowBox[{"i", ",", 
            RowBox[{"0.5", 
             RowBox[{"qcrit", "[", 
              RowBox[{"0.1", ",", "1", ",", 
               RowBox[{"0.75", 
                RowBox[{"\[Mu]extreme", "[", 
                 RowBox[{"1", ",", "1.5", ",", "0.3"}], "]"}]}], ",", "1.5", 
               ",", "0.3"}], "]"}]}], ",", "0.1", ",", "1", ",", 
            RowBox[{"0.75", 
             RowBox[{"\[Mu]extreme", "[", 
              RowBox[{"1", ",", "1.5", ",", "0.3"}], "]"}]}], ",", "1.5", ",",
             "0.3"}], "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0.1", ",", "5", ",", "0.05"}], "}"}]}], "]"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Orange"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Abs", "[", 
          RowBox[{"fu1", "[", 
           RowBox[{"i", ",", 
            RowBox[{"0.5", 
             RowBox[{"qcrit", "[", 
              RowBox[{"0.1", ",", "1", ",", 
               RowBox[{"0.75", 
                RowBox[{"\[Mu]extreme", "[", 
                 RowBox[{"1", ",", "1.5", ",", "0.5"}], "]"}]}], ",", "1.5", 
               ",", "0.5"}], "]"}]}], ",", "0.1", ",", "1", ",", 
            RowBox[{"0.75", 
             RowBox[{"\[Mu]extreme", "[", 
              RowBox[{"1", ",", "1.5", ",", "0.5"}], "]"}]}], ",", "1.5", ",",
             "0.5"}], "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0.1", ",", "5", ",", "0.05"}], "}"}]}], "]"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Abs", "[", 
          RowBox[{"fu1", "[", 
           RowBox[{"i", ",", 
            RowBox[{"0.5", 
             RowBox[{"qcrit", "[", 
              RowBox[{"0.1", ",", "1", ",", 
               RowBox[{"0.75", 
                RowBox[{"\[Mu]extreme", "[", 
                 RowBox[{"1", ",", "1.5", ",", "0.7"}], "]"}]}], ",", "1.5", 
               ",", "0.7"}], "]"}]}], ",", "0.1", ",", "1", ",", 
            RowBox[{"0.75", 
             RowBox[{"\[Mu]extreme", "[", 
              RowBox[{"1", ",", "1.5", ",", "0.7"}], "]"}]}], ",", "1.5", ",",
             "0.7"}], "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0.1", ",", "5", ",", "0.05"}], "}"}]}], "]"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Green"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0.1", ",", "5"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.7", ",", "1"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"AxesOrigin", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0.1", ",", "0.7"}], "}"}]}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.762149030614156*^9, 3.762149073547586*^9}, {
  3.762149283060233*^9, 3.762149288975108*^9}, {3.762149321258995*^9, 
  3.762149360166872*^9}, {3.7621493935260897`*^9, 3.762149399198142*^9}, {
  3.7621494418196373`*^9, 3.762149445918008*^9}, {3.762149478125177*^9, 
  3.7621494823323917`*^9}, {3.762149534477865*^9, 
  3.7621495374462852`*^9}},ExpressionUUID->"6eb9261c-abf2-4237-b891-\
55b7d0fede0e"],

Cell[BoxData[
 GraphicsBox[{{{}, {{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.016666666666666666`], AbsoluteThickness[1.6], LineBox[CompressedData["

1:eJw90w1M1HUYB/C74+C44+1eXBINJqGbmWmJvIys5xnoTNYLEJ3pyBTOoyyH
yaXprBZCAkvICwRpRRLNJhrLgdM23pxQY5xd6CLrmGC83nH39+CU4147rv/z
+27//fdsv+fz7Pfs/08sLMnbLxIIBLsDz/J78pXVh6Z+vw91qfcEkwmzkBzM
vzB+2DqqVs+CYWg5EzAYVXV1zyozFGuXMwVxGp29fdgMgmBmgDP5nM4SCzSd
W84s6FuWnN+7LLxngbCS2va/dXO8NwdVlZvnq8fmeM8GW1ePNLwHVt57AHkf
HCsTfmXlzz+AgX6TvtVk5X071C507CuPt/H985CZf+/CJbUNNgfnLcC3E64d
0iobCIOeA44Zb4Yc6LTBraDngNadmo4Kk433HkLSBlmO10feIzi47czHe+I5
3lsEUc1L02vSOd5zQtxB/7a+1zjec8L5gXUbzmg43lsCXUf7D+YjHO+54Ovj
hypjT5HnBs2BlTcK6snzwEdb8vfZz5PngYZuUbX0MnlecN3u2TF8lTwfrHO3
5ZX2kOcH+es9zTG/cvz+BLj/Mat4wEDnBRgiy/zp59scv08BlidvrzX/Rf1C
PNmr7a8YpXlCvJmeZKsfJ0+EmWYsfXqSPBF2nmgz5M+QJ0Lt8Td7EyzkhWBS
7a4v6qzkhWD2FXVCL0f3FWPjYELaRTt5YqzbO1Wze4E8MX724xXHiIO8UCw6
an937SPyQtGe3piRu0heGF5PG1TudJIXhqXGOsWLS+SF4ftv6+9KXeRJMCuj
p7nLRZ4Ex/yYXuAmLxxTR02JM27ywnFg/skvizzkhWPupvU6o4c8Kdbc+rD8
WS95UrS0jGdVeMmTYff0NYnRS54Mk77zexQ+8mRYn/rqMy/7yItAUYur7FMf
eRF4zdg+dMlHXiTOpPX13vGRF4mFl+UCJ/MiMfGb07Er/eRF4Z3QwlOb/ORF
oeaI75dsP3nRKF8/smKvn7xojCueMh/2kxeNeeCuPMm8GHxijes5PfNiUFRg
XtXsp+9Fjv/036+6GKj////l+M5ZY1NHoA7yWjn+mZNyoitQB9vPyfH6jT9y
+9k8OZ6OTX5+iHkK1DZuzB9mngJTKnI6R5inwM8vZOhMzFPgW23S1jHmKZDL
anpjgnlKrP7N0DDNPCU+VdR31Mw8JXaViYVW5ikxK8zwAsc8Je7aHp9mZ54K
RytnHfPMU2Fxd8onDuapkLNtvPuQ7UuFY2ezIxaZp0LJWvXjTuatwK1b9JKl
QP0fAlOrsA==
       "]]}}, {}, {}, {}, {}}, {{}, {{}, {}, 
     {RGBColor[1, 0.5, 0], PointSize[0.016666666666666666`], 
      AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJw90wtMW2UUB/BSSmlLKb0tw0mcg4lidBKyydhcmnM6FGQawcFIBB8Z2SqP
oajRjLkoGTrnNnnNDSs4GqlON7DMzDGysGVGlKmoWBgC2cIYDFr6GrZdB22v
pd5z/8nNzUm+8zv5Tu5NLn192y6hQCAoDj3L75HczSn+d6ZAPDAkMXfPwfpw
bkJ91XndA4kWGPx9OdPwmvEeafGMBV7VLecWvHVhIrdSbwVBOHOgPmIamN44
D5/rl2MBzYWMD1Q/z3PePHTsz/ouMsvGeTZoLfq0seGMjfMckCaJqypW2znP
BQvD62C83M6dd4Emfiyn5Jyd82+D/9jpbaJFO9e/AIqxitPjGQ54PDzvX0jc
ar7YX+GAiLDnhsWrb+qa9Q74I+y5QfqgYsrzo4PzPCAv1NU1zjo4zwtHc4Bx
RTs57w6kWi2zTSlOzvOBu9d0bVrj5DwfrK592rW10Ml5d2F1/9jlxDIn5y1C
bWOS1VBD3hIUfd2elPwxeX4w7el8cvQ4eX5o3vt8tu9L8gLwxuE+9/dd5AWh
3Rh7Nr2HPBY2flN///FLTm5/Asw7eaI58hc6L8DyHGP3sUEnt08BNhj6r+wy
U38ElsyWbDn0D82LwBezt88lXCNPiHtN6bjqBnlCHBZXDXROkyfEuhFThnmW
vEi03ld/ss1KXiTmmXeMqu10XxH++tegdouTPBF+VrnymfTb5ImQDQy+MrNA
XhS6rq5lytzkReGz77+XdtFDnhh/yGybsHnJE+Nj39YafXfIE+PwU976GR95
0VjDJDzSc5e8aCzT/NlavUieBFckrOuKXyJPggWeNSNfLZEnwazCM9qH/ORJ
8cAThskWP3lSrCgy6/x+8mTo2t1XtD1Angw98dliY4A8GXbn+DosAfJicEd+
zebUIHkxqFcd7H0pSJ4c12d2OD8JkifHNs2jLeeD5MmRESUUXg+SF4uWc9U9
LO/F4m5bi3YVS54CA0PJOzNZ8hRYkL+/7jmWPAWmVrb4Slny4lBoEqveZsmL
w5328hUfsvS9KHHImIdHQ/X//78S2diHr7SH6jCvU+LKgjWTp0J1uF2vxNyD
U6az/DwlyjHl5T7eY3Bffpa8n/cYlP10efQ33mMwMeLS+BDvMRiz6YW1o7zH
YJox6sYE76kw2DAmm+Q9Fbbu+bv3Ju+p0GC413+L91R45NSG6xbeU+FHDdpK
G++psemwtMvBe2pMendTp4v31OjdsK96gd+XGkXqLwRu3lPjgaYTpR7ei8dD
WnOrN1T/B3aEowo=
       "]]}}, {}, {}, {}, {}}, {{}, {{}, {}, 
     {RGBColor[1, 0, 0], PointSize[0.016666666666666666`], AbsoluteThickness[
      1.6], LineBox[CompressedData["
1:eJw903tMU3cUB/C+KBRqe9uLMgdGmXSdgSkPiQHE33EzIA43xzYV4hjsAbig
TiE++GeIk8EUZjJGhE0zBs4QNXOCg7nErC5mdQN8MGYFEQas6/Pe8rC0QNuV
7p77TW5uTvI7n5Pfyb3R7x7I+UAkEAjy/M/iOyM8+kS9fIzc2/mssmOdiSQF
Mk7KVpqLxQMm0tuzmAmSlH9YUtdiJsVFizESzc2taZ/sshBBICaS0s9s2eW2
kOamxZjJ9vjpZ5JrrZxnJbFjyhW0zMZ5NrKJ2VB4rcLGeQyB0JLKthEb5zmI
Qbf3xR0pdu68g2j3HC99WmPn/Emiqdld8cNdO9c/RS5t0hVUKRiyPjBvmpzd
OJK6LYMhwoA3Q5zXPo97cIQhfQFvhlx4Mk71tjKc95T8dnbtxKPfGc5zkpS7
LexJO3qzpLxPd+NVOct5LrJssEjfqmU5z0XSTDkxJsJynpsoVmffLnuL5bw5
UhubfqehhOW8eVK8QVh/5hh6C+SQtPdSWw16C2R1497+4Eb0POR8dUSDpQU9
L4l1JIQdvYyejwx3F1b+dZ3l9icAQ91mh/YmnheAwtDy6We3WW6fAnhy+k9q
eQ/2C8FZ5HvTeh/nCSFDqj207CF6Inj0Hv3ClSH0RHCO8kX+MoKeCKq+2bE0
fxw9MZRGsIkNRvTEsIWVRe43430l8HrZbo3Tip4E2uOPVSYz6Elgjf7EG+sd
6AXBHVfekHsSvSBI3Kk+eXoaPSm8U5wdNDWDnhS0R7tK1znRk8IXD9tSs2bR
C4arTNa+l13oBUNndeSZaDd6IdBOD+qNbvRCIN5gGftyDr0QeDyZn5swj54M
osKjCn6eR08Gg/DAmryAXij8WD7d/e0CeqGwp2tljtiDXihIe3RLcz3ohUHM
rCX1gge9MKgtuTVg8qAnB2XV8aEYL3pyqFlj1OR50ZODV594uNaL3hK4Puc7
0uFFbwl40r7/1eBFTwHtMXWjbt5TQOu9yxkRPvQUkLT5SkGCDz0lrC1Mr9vq
Q08JXbkHV73tw++FglHDP+8f8Nf///8UDAgNX3/srwN8EQUfhUWJ6/11oL2J
glNxk3808/MoaKa6Nd/xngpecTSmXOU9FagvLo/7ifdUIDN2rtDxngpu3dgY
q+c9FVQoMvf38Z4asjKrPf28p4a+0efsBt5Tg6RT8tow76lh+/N00t+8p4bs
l/ZdnOA9GralN3X/y3s0VNzvOGjhPRrmzp97bOP3RcOq4UgRy3s0uD50mx28
Fw7lmdFfTfnr/wBdeJ1g
       "]]}}, {}, {}, {}, {}}, {{}, {{}, {}, 
     {RGBColor[0, 1, 0], PointSize[0.016666666666666666`], AbsoluteThickness[
      1.6], LineBox[CompressedData["
1:eJw9039ME2cYB/C2lFIrpddWDSKOFScy0UVhxslK3wdF98cCKEwzJ4tAigwS
6WCG6Ig6lrGhc8E4CSLSaok6wpKiMQHBxUqHzsWWZcMwMthkYqG0XFEotKU/
Vrp77kkul2/yPp8n75M7RbEmr4TH4XAOhZ6lt+IF7D/cMEYSW2fatE0T5HLz
Uo2RelXTz5R2gqSF6zlJPV+dbfxqkpifLNU46e+wm0bybKT0yFJZiaX+uzqv
aIpwwjVJVOsySsoMU4xnIx287izlTjvj2cnWgxcrcvvtjOcgO84rY3PSHYxH
k9uKqqwuvYPxZki5LSXp36CDOT9D9FVULC9/mvFfkpFz27dtbJ1m+l8RyfUH
LXv/mSZvh+fNkrndPxTti6MJN+zNkWOrv8l8mUMTS9ibIwW71kc+O0kznots
8lF3em7SjDdPajrSzorNNOMtENuGE/f20+i5yad/7pFERDsZz016I2DXiSQn
43lIj7q7QKpyMp6X3Hed+SUu38l4i+Qnyl08UuJkPB/51fpWcWM1ej6SajEl
n6pDz0/KuAru4wvoBYg152G/XotekNQPD1WntTuZ/XEgs7PSqL2N5zlQqhqu
5Pc6mX1y4Kjn2uQXfdjPhS1rr2g2P8Z5XEjQb7r4+gB6PMh94q6sGESPB0fl
hvnkYfRCueb0a4Wj6EVAUlv/m4lj6EVA74DaXDOO9+VD0bYDHx+fQI8PemPs
rGIKPT7EyPsaah3oRcLnmnfTdTR6kZCu0sV9OYOeABo/Sb2w5RV6Akj+zLu3
cxY9ASjpNWUCF3pREE89Orx9Hr0o4PEuK99bQE8IgvcPNO1woyeE6sKhNqkH
PSGU/xVQ/u5BbxmML2jok170lgFpifKvWkRPBLv7Gip0i+iJQDxvoFb70BPB
3x7XqTofesvha9fWZKsPveXwVFSRr/SjFw2qbHjjjB+9aNDdPac1+9GLhrMp
vnZRAD0xqOPjV2YG0BODvXDlpcoAejGweVAwdCWAXgwsqDPUpgB6MTBoSul7
wXoSEHYpSvhB9CTglj68kxDE74WC8hU14ndC+f//n4KCwLUH2aEc5o9Q8IHO
EFcUyuH2ZgpKB9Z+VBXEeRRYjTt7allPCq6niZoG1pNCliHhZgvrSaF1tvHb
G6wnhapjRZmdrCcFS+6Htm7Wk0FXnumqkfVk8OOG+7WPWE8Gp9sb28ysJ4ND
B4Vr/mA9GQw3f+8dYj05tP92K2+E9eRg6V6V+oz15FB6a/T6c3ZfcjDf67pr
ZT05ZKyTHLex3goY5Wycsofyf8dGoPs=
       "]]}}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.1, 0.7},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0.1, 5}, {0.7, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.762149059000326*^9, 3.762149151846196*^9, 
  3.7621492198479347`*^9, 3.762149268831811*^9, 3.762149312246852*^9, 
  3.7621493501098967`*^9, 3.7621493848640347`*^9, 3.762149419686487*^9, 
  3.7621494669725313`*^9, 3.762149503401062*^9, 
  3.762149558141713*^9},ExpressionUUID->"49c9644a-ff17-484f-bd16-\
4133bf812155"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ListLinePlot", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"Abs", "[", 
         RowBox[{"fu1", "[", 
          RowBox[{"i", ",", 
           RowBox[{"1.2", 
            RowBox[{"qcrit", "[", 
             RowBox[{"0.1", ",", "1", ",", 
              RowBox[{"0.75", 
               RowBox[{"\[Mu]extreme", "[", 
                RowBox[{"1", ",", "1.5", ",", "0"}], "]"}]}], ",", "1.5", ",",
               "0"}], "]"}]}], ",", "0.1", ",", "1", ",", 
           RowBox[{"0.75", 
            RowBox[{"\[Mu]extreme", "[", 
             RowBox[{"1", ",", "1.5", ",", "0"}], "]"}]}], ",", "1.5", ",", 
           "0"}], "]"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "0.1", ",", "5", ",", "0.05"}], "}"}]}], "]"}], 
    "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Abs", "[", 
          RowBox[{"fu1", "[", 
           RowBox[{"i", ",", 
            RowBox[{"1.2", 
             RowBox[{"qcrit", "[", 
              RowBox[{"0.1", ",", "1", ",", 
               RowBox[{"0.75", 
                RowBox[{"\[Mu]extreme", "[", 
                 RowBox[{"1", ",", "1.5", ",", "0.3"}], "]"}]}], ",", "1.5", 
               ",", "0.3"}], "]"}]}], ",", "0.1", ",", "1", ",", 
            RowBox[{"0.75", 
             RowBox[{"\[Mu]extreme", "[", 
              RowBox[{"1", ",", "1.5", ",", "0.3"}], "]"}]}], ",", "1.5", ",",
             "0.3"}], "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0.1", ",", "5", ",", "0.05"}], "}"}]}], "]"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Orange"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Abs", "[", 
          RowBox[{"fu1", "[", 
           RowBox[{"i", ",", 
            RowBox[{"1.2", 
             RowBox[{"qcrit", "[", 
              RowBox[{"0.1", ",", "1", ",", 
               RowBox[{"0.75", 
                RowBox[{"\[Mu]extreme", "[", 
                 RowBox[{"1", ",", "1.5", ",", "0.5"}], "]"}]}], ",", "1.5", 
               ",", "0.5"}], "]"}]}], ",", "0.1", ",", "1", ",", 
            RowBox[{"0.75", 
             RowBox[{"\[Mu]extreme", "[", 
              RowBox[{"1", ",", "1.5", ",", "0.5"}], "]"}]}], ",", "1.5", ",",
             "0.5"}], "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0.1", ",", "5", ",", "0.05"}], "}"}]}], "]"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Abs", "[", 
          RowBox[{"fu1", "[", 
           RowBox[{"i", ",", 
            RowBox[{"1.2", 
             RowBox[{"qcrit", "[", 
              RowBox[{"0.1", ",", "1", ",", 
               RowBox[{"0.75", 
                RowBox[{"\[Mu]extreme", "[", 
                 RowBox[{"1", ",", "1.5", ",", "0.7"}], "]"}]}], ",", "1.5", 
               ",", "0.7"}], "]"}]}], ",", "0.1", ",", "1", ",", 
            RowBox[{"0.75", 
             RowBox[{"\[Mu]extreme", "[", 
              RowBox[{"1", ",", "1.5", ",", "0.7"}], "]"}]}], ",", "1.5", ",",
             "0.7"}], "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0.1", ",", "5", ",", "0.05"}], "}"}]}], "]"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Green"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0.1", ",", "5"}], "}"}], ",", "All"}], "}"}]}], ",", 
   RowBox[{"AxesOrigin", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.762149578161323*^9, 3.762149587030727*^9}, {
  3.762149624108705*^9, 
  3.762149630942996*^9}},ExpressionUUID->"ea9ff4d5-32f0-42ce-bf88-\
5047148cddf1"],

Cell[BoxData[
 GraphicsBox[{{{}, {{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.016666666666666666`], AbsoluteThickness[1.6], LineBox[CompressedData["

1:eJw11HlQVHUcAPBlWbmPXVYgGIHkNocIN/Ao+n7FoASqCUQU1mMk4lIwsKFS
QXPwGA2GNBAsTAUdNDKaAXPklCsUwbiE5RD2gH27yxUgRyjF9n3fmTfvj/f9
fn7v933f91t7ICkkmsvhcKL+u1bu+XkrcR90ms82bV/TDm+LVqIO1vvNBMiS
nsH/z5vBYfrd1V02/cDRxlNobxmcum03RPkdUBV9/Oqr6WH4XBvd4LpPXJmb
I6P6XmhQyI6WGymgtWUl+qGsPkNveMcIeUOQdeatB29+PUr5w+BVs/hs/1El
aHmRDP6c588O72XgibZeDkLRI0WpqwpitOuNQJJuZ4V7l4o8JeQ7tMRaJqjJ
Y6DCp6mPkarJUwPjuTNbLNCQp4HImOWO8Ho1eePwfHaZJ/JTkzcJNbkaS7Mi
FeVPgujnDKuECYb8KeBYJyT2OjBU/zfUDChtGkRK6s80NL9Iv2vsPgo6Wm8G
0rjVO9wX2H7MgFPqd1e23pCTNwtpX+62cXaUkfcCgsIM/7D/Ypi8OQg5cnYt
Wj4nbx7WS3iPc1ol5M1Dqu6eh5VzXeQtQLBhvBjjnpK3CB/7htfPSerI+wdy
ddKbi7iV5C2Bb9HFfvOfHpO3BBJe8pptFR3kvQR7jtxzrLeHvFfAfUe/9M7u
AfKWwe5174Ntd4aofxw8lJ82kZEspXwOcnJl/Y76cuonBwPjHozcSFRQvQ4e
vFQSGF8yQuvp4IRUEpDSNEoeF8Nhe2dMjZI8Lm7z2PBbzhV2Prh4Mzf4ZE+k
ijxdvJDPz96sy86DLgadyQrIy1bTfnl4YjZebrnEfn8eVomlcxoeOx88/Ktu
YOf0NTV5q3BTn8v3jtastwojncPSlckq8vTwwwupgXNl7DzooaQn7VbCoJI8
PXSuFotPMKPk6WP5IbuG6Q52v/o44ZQjc8tXkGeADjma8jc2yckzwN/vrVso
LpaSZ4Btl5lHtQz7PxriZlXtyQX5AHmG6D72K+fT1F7yjDA2kNe663AneUbo
OuOhue73hDwjfN9mo20Ap4Y8Y8zseO38nPVD8ozxXHVE5lVsI88EN/mf8h8J
7CLPBIOtbFJafSTkmeBioY9bYeYgeaZ4YV3h6S3ew+SZYvyuU43dGil5Zphw
rzZQmsLu1wyPlLlVObUpyDNDW3s7dR+X7Z85xik8XSYslOSZY9AvtgVjXIbm
hY9R0aUmBt0M/f98jHi09RyTqaLzio/jl+4e3uKpBm15Hh8Lvr0V+lmZmtbj
Y2dGqNjbVEOeAKutCj6aGWfPEwHuLbkWfvmYmjwBvjxf/MMSoyJPgK1umXWl
77HnhwAPxF6v+uAb9v0scGx/8lRGPnveWaC0PGLf8R9HybPASZeEm23HRsiz
wMR7UTsbN7L9sMCq+ayxsGYZeUKM228VZeghJU+ImpDzXdV7hsgTokgQUGV+
u5/6JcQNvl7t/sIe8oTYuNFTE9rTTt5q9Prq4v1PTjfDvwbFxPs=
       
       "]]}}, {}, {}, {}, {}}, {{}, {{}, {}, 
     {RGBColor[1, 0.5, 0], PointSize[0.016666666666666666`], 
      AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJw11HtMU2cUAPDyKuUpbRENEUZlMTJgGqk4I9k5GQxNkI7HEDYQeUwgYGRs
TGEqD0U2xstNNlaQaUAmIBCWKjoYpHHymjBeAvIUaCmlRcIAeSm40Z17kpv7
x/2+3813zneOICzW57Q2i8UK/+/ZeheIt+J3OJL8deflsm4QOm3FnxDUmy/h
qfvh/+9t4Nfs835T2jCwNNEFyp76AvmPz2l9L3Cy9mCEeAIiNNEPJQVR26eE
Mto/CB/u+cFts1gOf7dvxQiE8TI7fZRT5I2D67GWjVHONK2fAHP+rnkDjhI0
vJMMri6eChUrldCh2S+H5NwHLPfKGYjU/E8B2zl2tok+KvKU4Oyi+0dSr4q8
GWDXBKVYc9XkqWEpIrBor1xF3iwUhTw9/G2Mirw5cD92S9L61wx585CeU5Ky
aTRD6+cB+9Kvxe1Xkv8PtDSreiucp2n/AmRdaygx3KWg/CzCSkjUBRyVg5bG
WwJv3w376HMyyscSfBOM/mzZBHkvQXrSobDWapy8ZYh2DG4PgBHyVkDb1veD
9sYB8lZhOPq7tR03eshbhcLMsGSRbxt5a1AtfRP79sM68tbBL9UkUG/yMXmv
YECSZ59X3UXea0hKOMq6yOsn7zXUhHd8BM1D5G2A1oZf18bsGHmbkPBlZrqH
aIK8N/Dz9TtRpguTlD8WtjSebsuKlNN6Fs6aT/tlSKYonyxcm19c2znE5EsL
DUbkssYx5j5ooejJ4vHgx0rytPHEXKFQncXUXxvvux24FfoeU09tTBfn312R
qsjTwQrrfXyJiZo8HXSrx7CaBRWdVxdbE6u4F68w9ddF4e0Yw8+VTL11Md9S
j5X77gx5eigqU82s+jP118OPj1uWXAmfJo+NEpfmB/dFCvLYaOGft+MTC+a8
bMzwFrjfrpWRp49VNondTvaT5OnjW2nCT/vPjpPHwYP1OU07l0fI4+Be5dDw
UPYz8jiYDdnJv2T0kmeA0cUvGssuPCHPADnTY5lBJQ3kGeJiw4HxttJH5Bni
2ZEvWjhBneQZYnFsxb5uYR95Rig+d+JOqQ5TfyPsXlfHF+MYecYYcP56c5XW
BHnGKGr83ut51SR5xhhZH+qkeEdOngk2lbIF5ZemyDPButpDX/lXKMgzRbFd
mkH2PaafTPFe9pFUj5tM/5ti713PkLozTD22YXC/bLeXFdPv25DrWOHdUcnM
AzO0LP/Mm6XP9L8ZmrkmV7ZsqmhemeHar78FuxSoQLNdbIYmDtaCQ3rMfTLD
G89qLnt4MfOAi2lF0uriJGY+cbHdwsDxTO40eVx8NWqaE5CiII+L56tuenqK
mPpzURTJixO/lJHHQ3mrl9Zy3CR5PNSPf8gLbBwnj4cn94sf2ZSPksfDdbHs
aEzAIHk8DCy1sguOe0oeH1NzBa7xP3WQx8cXtnmCUy1S8vjosFsnYf6SlPLF
xyKrGO+Dnh3k8dHYZu7qgDfjmaPzQM/hPpdB+Bdz5L0p
       
       "]]}}, {}, {}, {}, {}}, {{}, {{}, {}, 
     {RGBColor[1, 0, 0], PointSize[0.016666666666666666`], AbsoluteThickness[
      1.6], LineBox[CompressedData["
1:eJw11HtQVGUUAPDlDctjXyRqDbYCUT7KpIRo8JyhIgZiMIRBYAjFfKCNvNoY
AwvQhBlhQDMcHhKWk8srFNdwJZixhXiKIMMSIK67LOwDXd6CPIvt3DNz5/5x
v/O7955zvk8YGx9yxJTFYh3+71q/FxWuhxT2r/n5r+7tgfc81kMGFzhveL4S
L4f/n7eBt5usq3NhEFjG6Iai9MNdk4tPaH0vSJO4hdMfK+GoMeRwuVzW4DSo
ovwBmOj5W5Tmq4auzvV4DHWnBlg/Z46S9xQ+CEhP2Vo6RuuVEFqv5rde0YCR
9xiBUdkBCT9RCw+M+Wp4tag6bttbOjhmfN8YnPB+sE8i1ZGnhYgoL9/bHD15
Orifc8v3hr2evHEQJnol5Eh05D2DJKfCk5ytjGeA5faTmanHteRNgnDxL0VP
robWT0Lekt188yXme6fgEcxdkYlGKX8aZAtNfaseaqrPDOgNZwo62lRgYvRm
4bayN+XabiXVYxZC9pbO3et5Qt4ceAnDNwe0D5L3AqpDIz/d4y0nbx6eb6zl
upv2kLcAbWtRol/WmslbgPbpx57OFVLyXkKKxDG2QNBC3iK0VtdLvk5l+r0E
wy4Pf7rxq5y8ZdgYqrfiuQ+RtwxpOYsJUy4K8lZA9VyRuCNcSd4qTGek7QzW
q8hbg6kzJkmafWqqHwufph4TxeUx9WHh0f0tQfHlY1RPFjqYN4fXXNNQvglW
5qf8XnRaS+8zQT+OMttjF9NfU9zptqnzfiPTL1OMZJvrLvP05JlizAbl2URb
PXlm6D/6uDagRkeeGbbcdKpXbdbR/5pjIYid+2K05Jnj+2tttZ1nmX6bI9fR
vi4ia4w8C9w+Hb6l//goeRYY1FKRcMpNTZ4lLtXWXDwhVZFniRHdVxVeryvJ
s8SD7RmJwWJm/1jhne8NftnFg+RZYelvJf/YWDD9sMaBd6dsDE3d5FljWa74
7QBRM3nWuHLo840fDknJs0F5/pGVlZIW8mzw3MvY6At1zLyw8bUyn0BDv5w8
NjYcuPOlU9gQeWyc2WEW2vCZgjxbTHFV7AqOU5Jni2/ybtklLTLzbIchFrbj
EKMmzw7FbkK+S8koeXYYWp2cXyVh6meP6dGCxqxKDXn2WLUpKF6QqSXPAfsP
3ize5sn01wHDX8yGSWTMfnXAxkoHcaCA6S8HOeP6cr4Ns985aHbxUdlEOTMv
XBQmm2RfF+ho/3NRGWn/45ZwLZ1XXNxjuHr+7mkNGNMLuej6TUbFcCozn1ws
vqU9NxDFnFc85Cdr3unYoCaPhx2WX1yaFavI42Fv1nDVXXsleTzc7fPJSPV3
T8jj4bDG/+H5r5jzlI+5x8Kc8x72kcfHEitDXEhWN3l8rHqWEKjQN5HHR4NH
7A/l2++Rx8eQO/OHtG6t5AnQVd7p/tFMD3kCvO5zzklv20+eAAui02KfZg5R
vQSYJpzoChUpyBMg+8/o+chUJXmO+O0fY6J09gj8C/kJx1k=
       
       "]]}}, {}, {}, {}, {}}, {{}, {{}, {}, 
     {RGBColor[0, 1, 0], PointSize[0.016666666666666666`], AbsoluteThickness[
      1.6], LineBox[CompressedData["
1:eJw11HtQ1FUUB/BdnssC6y6rwdAUoZDKaA5BgVpzzh+GGjS8Ag2lBKTAXcoI
SSgQqVQMUEGeYUEwPIMaUAEh5CXyChlx5dHKsg+W9cEzQJ6RbOd3Zn7z++N3
z+fOvd/7u9aBX3gF67BYrKAXz/o7O2u9auFodc1wW2UvODqsVwu0HsgUv9wm
gf+/d0Bg0lrYmNMQsLTVC7z2i4Pv2gzT+D6IyzzTE3pvBD7V1kMYLyroVPsp
qH8Q3pGJPpTVKqGne72kkFIOBQenVOSNwLJJm7mUpabxctCNt7Ctf6YGLe+g
hJnGzRbJlWPwl7ZfBb4h7T1hbhr4TDufGuycgwpfKdeQpwF7kbdHWrOGvMeQ
erz6pMF5DXlP4YLIWXGLoyHvGSidNt3MOzxG3gTcTxyM2x6nJm8Klr/aVF8Z
P0rjp2B30pDF7mMq8qfhnJd9d+tLSuqfAdP4xhs6+XLan38gYk9Cf8CLdbK1
3iyUbwnsLPSU0n7MQsFUm7nDtgHy5mAyw0e9IO4jbx64rJqIm+xu8p6Dw57U
E+U7GslbgD4bebBH7G3yFiCnuSnGKaGLvEUY3WJ3ROzMeEtwKLGnbedSP3nL
cImHHP3tUvJWwKvev/iWVEbeCkgn2RXsVDl5q2Cu7M2/zGHW+y+8fvjG3WJv
FXlrYPvzJb3Sr0dp/1iYs7hklROppvEstDQ8rcrxYPJkof9QB0TraKifjZvT
8sKF3zH5sTGC98nlqiYmXx0MufJtaPLvTP46aGd9JTbFk8lTB11CNu6sqh0j
TxdbPEOFZ+eY86WLGQbhfCtjNa1XD0tS504Yr6jI08O9n8f86HhXSZ4e3mmV
z0yHKsjTx8dV1dZ+IyPk6aNjqkQS/P4weQboW2gTyQoaIs8AC1dcuObPJeQZ
4Dar3CMzT5j/zRALhmQPHri1kWeIMU8sTFILa8nj4AW/h68Ve94hj4Nbz56d
PRjdSx4HFS6nPpBelZBnhAUSSUW6yRB5Rhjy1MZVvfqIPC6675LkHm8YIY+L
A3Vdy+2uCvK4yO27bhX1m5I8Y3x18hv90yrmvBtjhoDXkTA/Sp4JNjUEfDym
ZPI1wfuWPl2+ZUy+JjjBkXna72fyNcWj1/0bE0uZfE2xce+uBe8WDXk8XKpY
2/HoIpMvDx331V5T85h8efhGVqwo7RiT7wbMjZwwKkpg8t2Asj+bz5QlMeeP
j28l1CXXiFX0//Nxa1XWr2obJd1XfFzpzz85WSkHbXsWH/WirCLczUZoPj6e
yny7ThgtJU+A7tOKokWfAfIE+INXbIlzXh95Avw7TpJ9NaqbPAE6dIr+yL7W
SJ4Ah+f3ff9lWQN5ZsgWFbJs+V3kmWGJX78kXZfxzPDQqrPleFc/eWboshyW
ZM+SkmeGZa1+eedqZOQJMb3pp5zxeDl5QiwND3VzXVKQJ8SZjwR5nP1MnkJM
vPfLeyli5n4ToujNgNtrYub+24gZEbnN5w+MwX+SkMh0
       "]]}}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0.1, 5}, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.762149608751321*^9, 
  3.762149652890852*^9},ExpressionUUID->"5cee1825-114d-4ff4-8f63-\
b6e7a160b752"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ListLinePlot", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"Abs", "[", 
         RowBox[{"fu1", "[", 
          RowBox[{"i", ",", "20", ",", "0.1", ",", "1", ",", 
           RowBox[{"0.75", 
            RowBox[{"\[Mu]extreme", "[", 
             RowBox[{"1", ",", "1.5", ",", "0.1"}], "]"}]}], ",", "1.5", ",", 
           "0.1"}], "]"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "0.1", ",", "5", ",", "0.05"}], "}"}]}], "]"}], 
    "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Abs", "[", 
          RowBox[{"fu1", "[", 
           RowBox[{"i", ",", "20", ",", "0.1", ",", "1", ",", 
            RowBox[{"0.75", 
             RowBox[{"\[Mu]extreme", "[", 
              RowBox[{"1", ",", "1.5", ",", "0.3"}], "]"}]}], ",", "1.5", ",",
             "0.3"}], "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0.1", ",", "5", ",", "0.05"}], "}"}]}], "]"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Orange"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Abs", "[", 
          RowBox[{"fu1", "[", 
           RowBox[{"i", ",", "20", ",", "0.1", ",", "1", ",", 
            RowBox[{"0.75", 
             RowBox[{"\[Mu]extreme", "[", 
              RowBox[{"1", ",", "1.5", ",", "0.5"}], "]"}]}], ",", "1.5", ",",
             "0.5"}], "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0.1", ",", "5", ",", "0.05"}], "}"}]}], "]"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Abs", "[", 
          RowBox[{"fu1", "[", 
           RowBox[{"i", ",", "20", ",", "0.1", ",", "1", ",", 
            RowBox[{"0.75", 
             RowBox[{"\[Mu]extreme", "[", 
              RowBox[{"1", ",", "1.5", ",", "0.7"}], "]"}]}], ",", "1.5", ",",
             "0.7"}], "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0.1", ",", "5", ",", "0.05"}], "}"}]}], "]"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Green"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0.1", ",", "5"}], "}"}], ",", "All"}], "}"}]}], ",", 
   RowBox[{"AxesOrigin", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.7621499400469303`*^9, 3.76214995788577*^9}, 
   3.7621504060089197`*^9},ExpressionUUID->"782409d4-9a9e-4079-b327-\
d2e40bc436ff"],

Cell[BoxData[
 GraphicsBox[{{{}, {{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.016666666666666666`], AbsoluteThickness[1.6], LineBox[CompressedData["

1:eJw903tMU3cUB/DbUmjl1deMDrehRvyjG/PBEBhkv8NItiEiCQImJF0cQzSZ
QV03RVNJTdZlpPiIIW7gBrpmihqnoLCxsJkFeYkQFRfFBhWLrs97wRYope1d
6e75fZObm5P8zufkd3Lvqoq9xTvFDMOUh5/F9+ed23Mu9z0nj2QjqVKlnaRF
YiUj207IugvtZPjOYibJh/363A3LHWRX1WJeEgPXtM5z20GYSGzk59WtFb/u
dpKmxsXYyZCs8fiQxyl4TlLQvPpjXbVL8FykRrJLd+qxS/BYkhFwaZ5muQVv
itwt0XWMH3ML56dIu6bt4IuHbsGfJsGMmxdSXmeF/lck2bCs/WIxS96LzPOQ
wRFpntbIElHE85LnV4xT8naWjEQ8L9nh1BhrxljBmyG2mhNTGQH0ZslXrRes
liRO8OZIrc+fPJHOCZ6PfHedN3QUcoLnI+mmhv6uCk7w5klhsCc172tO8Pwk
z3x28EcjegvkB0tOr6wBvQDJbtu07++z6AWIp+z0ev9l9IJke9eT0mcd6IVI
58TS0TN/oceTzM9sE0V9nLA/Bs49MZ5aMYznGVj7my0/aZQT9smA5lrBhspH
2C8CR1Lw+8RxnCcCm96R/84EemJgK/ZYhifRE0Mz0+QS2dATw/7GuMp/HOhF
QYMv27zNjV4UDORm3fiWw/tKQP4058uD0+hJYGt/9ZVUD3oSmHmwfvM1L3rR
UGdN0UbPohcNW/W1eRvn0IuB5D3nfs/2oRcDk0Xl9pR59GJAbNJ9451HTwpV
e9sGL/nRk0LWTfZ0wQJ6MvhToteNLaAng80WXVNZAD0ZFGX+EdUbQG8JvH+/
54u1QfSWgDT3ark+iF4sNPsPaQaC6MXCyuLS+LgQerHwIuFQwkch9OLAFKtb
cTiEXhys2vRY2hpCLx5UnNF0N4RePLRkHsv3Ui8efLfH7ql59BKgc8sO8zoe
vQSYcyx99xMevUQwLut7oOXRS4QjohZ2H49eIoyb6waOUk8O/RvLzp+knhyO
8paen3j8XhTwywF76cVw/f//r4D0NctN18N1hK9SwIz7SH13uI60Nyrgjqes
9hadp4AsbYthiHpK+IA9efUe9ZSQtlu95iH1lKA8nOS1UE8JCyXitGfUU8Jx
jXXaSj0VGHbeJ/9STwUdn67UOKinAnlOXbeLeirQ7q8UcdRTwWz9qGiaemrY
8tbL3lfUU4O5uqvESz01tN5quDFD96WG+rcZ5yz11OB/0xKYo95rcOANHesL
1/8Bpo2tqw==
       "]]}}, {}, {}, {}, {}}, {{}, {{}, {}, 
     {RGBColor[1, 0.5, 0], PointSize[0.016666666666666666`], 
      AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJw11H8w23cYB/AghJDID3qr6trY6YZrz8pCSz2Pu6pbbUOu3OlYUfTKOs6o
baer/WhVr2vtOPXjSt38Kk5/zq9a21VLGSY6UYsbzq9EUsNoaTVbZc/nucvl
j3ye1zefJ+88sthkRbwph8M5/Pq1/l5ctF4tMMcLvPFTgxI8PdarHboPHSwu
WVTB/593QX+wlvvtD2rgGKsfbm56fqevbJTOPwah46bNr0rHIcFYKjhtsLPx
8pmg/mEIytHflddOQl/Peo2Ax0B1b9P8FHljUBBdGD8mmaHz43AuMzYqwU4D
Rt5jAt7ybogqW9FAr7F/Ev4+GhBz+r4WjhifNw2F8vTOlrRZ8jQQlvNFc7JY
R54W9uZdvRdWrCNPBxxn2UFvkZ48PVjlb9dxUvXkzUFilCy4oUVP3jwMXb6m
GFax8/NwgFchcbqtJ38BOg1PvcPTWP8ihNSdGHCW6mk+/0C1oKyn85IOTIze
EjgE1fOP2OtoHktw3Vr4NXw5S94yvB8a61rTye73DPZlpPA+M2jIew5uUU8U
yw4a8lZAk15/KsBhhrwVWEvYm269OkXeKmz/1FGYf3OSvBeQMm2a0xYwQd5L
iEtKde6rHSdvDSSuQ1mftI6Stwbungt+n9epyXsF7y3H3y6xGyLPAMMfKN/+
fZDl51+w3HqmNvKbTpofB29xVyPcylvoPAfjHY9mm/V00Dw5OLrrZ0lwNus3
wT1dc2aZ/Sx/Jrh8P2R/RjLLnykmOnn6uZwaJc8UA9LWzjrljZNnioM+vpIr
7ux+ZugfU61SXp4kzwznvR4oojRTdF8upsr8ndOtZ8jjonqLk0YpYHnjospt
qf23RTZ/c7x7oHxb9C9a8syxILOQ754yS54Fnt1QcitNoCPPAn9cad0xVqAj
zwK5uXJ5oIDlg4dlmd9pq5JZnnjowoHGnc168izR9S+dSZ+K5csSa/ml3PNt
LI+W+MjriqHqOPOs8EnQyKDtBuZZoVPMQqm8nOWPjzXcSIuPN7Lvx0eBr9el
X0/MksfHuLmvOB09WvKscbO0PcSby+5rjS+ytiSdlLH82eD3pUrfShmbnw1e
n35jY4TJNHk2+CjrYd1s2yR5AixcbTu/O4TtBwGGVmi6CxpZ/oTYnbTzTfUf
7PcVovm56KcfdqnJE2KVOuvxSfkQeba4e3/68cE1JXm2eEFWX9eoZvkToZvL
TGV3Uwv9/0XYXDTxjiGlg/aVCHO7fN7tPaQEY3uRCO3v7MjY1aCi54nw3kMV
LySU5U+MCwkV4UmJo+SJ8dqxNf892Wz/iTHS79wF8bYJ8sToLnwQF3dxkjwx
flTf7f5ylO0/Ca60VvDMuDPkSTA7YF+QF09DngQjJFsrF/Ua8iTY1q545tms
JU+C7mE3BsqT2P6T4vBh84vpVmzfSfFMuKYlIU9HnhR9RvLtFXyWDyk2lf5p
CDzG8iTFXAzyuNrI9p8dptSEYdPr/P0HvKS4pA==
       
       "]]}}, {}, {}, {}, {}}, {{}, {{}, {}, 
     {RGBColor[1, 0, 0], PointSize[0.016666666666666666`], AbsoluteThickness[
      1.6], LineBox[CompressedData["
1:eJw11HlM02cYB/ByU0oLLTCycQTiGNfcZsBZjvo8ZEFE5xSGEQcIYwEVN5QF
5sGE6dQh1kahOjmSMgKBwciYCgOyMTwQcRxF7kOuHnYTGWihMK5J9/yepOkf
fZ/P2/ebJ49r/NHwBEMWi/XZq8/6d37eetXDqZT9vdkeXeDrs173YHtH+q0b
YX3w/++tUC1DsWPPELD0JQf3hhu/N7WP0vlucIgOeafVYwIS9dUHin/qXDQ1
k9Q/CGm2hu9n8JXQ0bZeI/DWzjJI9VeRNw6ao+e7L7yppvMTkFRTdkxTrAY9
76OAhvo92yQpamjX9yshMN//8Vy1Cg7q71MD5xs/6cViJXkayFwK163FKMj7
C9qErblvaybIewZWq0HaNBgnbwr2vv4gyL5xhLxp2CONcNyVMUDeDGwN63BJ
Kuum8zNQ41C++aVXG/mzwClcvt3z8A/qfwFWkcKin35sonxewrRPaFXjYhsY
6D0tXJGa3XvG6qE8tLDWf+xjcdsAeXMQctCh2dboCXnzYHZ6S78uZpw8HVzI
WclyMJokbwH4L1Sx19IU5C3AoD/vUm2tkrxF6HLTiLVNTF7/gkYVlZt4Sk3e
ElQF7kxNlKnJWwZJQ+r3H9iryVuGOu0wm+uhIm8Ftnoa3P1qSUHeKrzGFhWJ
CyfJW4OOfd9qlzgTlB8Lhwpb4gvEo3SehdUl0ey47CHKk4WZXpm5pSu91G+A
aC/zUrbI6T4D9I7qd+dJm8kzRFlWTlfl3XryDHHhePaR29tbyDPEvJSMeFEW
M89G2OqqNGktYebZCKfYvEdCp2F6rzFeZ50bj+KNkWeMvTphWmTwBHnGuK9U
VMTuZN5nglYbwjU73Jl8TXAs7nqQ9EMVeabYJ+QGhm1Sk2eKIqnL1exSZn5N
caODp4B7iMnfDCWxay5FRUy+Zhj0dACcJUryzLGgOHD0vW1M3uZoF+DdYtDO
/D9znM2LOn/ThZkPNiorqi6eOzFCHhuLy7+si353gDwLPBBxopKzq5s8C5xO
ztq05ZM/ybPAk58vJXyxt5E8Dj73a18OPH6HPA7K5gfCpA/aybPEw/6rttf2
95BniXd8OqVObwySZ4m1HOfIzJAn5HFxZe6mkd/X4+Rx0Vk3G9DpxMwzD71/
roqYFTPv5WHwVVl+ySMleTwUX1HszpOryLNCX+9mJ8lZZn9YoZ0o/Qy7QE3z
Yo2WsYdWxWxmn1jjd65cyzg7Fe0raxywb6jwVSlA355njdZJfS3zZyfpPmtM
8/xl48z0OHl8jHa/5Pj3jlHy+Jg9Kux9NeXk8fH5shN/qryXPD72DJ25FZwo
J4+PNZt7Q13q75MnQDdJCAgDGsgTYFZd8w85rg/JE2CS2LB2Td1FngDlG+qN
/HV95Anw/oLA4deEYfJsULmYn5L80Rh5NmjzODSm4lNmP9vgSbkmefYps59t
MPz07sqRQCZfGzzsejn9yAFmP9vib258XaFIDf8Bf6u67A==
       
       "]]}}, {}, {}, {}, {}}, {{}, {{}, {}, 
     {RGBColor[0, 1, 0], PointSize[0.016666666666666666`], AbsoluteThickness[
      1.6], LineBox[CompressedData["
1:eJw11HswXGcUAPC1rMdar10VQ7S0k1LaxKsainM8Ex1RdIsGaan3K5kwkiot
oxLZjDSRSQzSBzVlOpGaRhQlXaQEod5vdpMg1CMiXkFobc89M3fuH/ec33fP
ud93jUJP+oazWSzW5/9de/eC/L2ogUff/XKhybkLrK32ogn0DfM8R4z64f/n
rRCVsbpo5DUMLFl0gf7oWOnNtjHK74UsY5E3O0ECEbIYgNq3iyN0/KVUPwy+
Esu3thYk0PlgL8bgVlzcp27Xx8mTwqBfZXSU5wjlPwS3NXFa17EBkPFWj0HO
IqD99g/d0CGrnwQ/3k3dizH3IVK23jRoa6SBfeof5M1ACnuyVuFoI3mzUHy9
9FvXig7y5iDkYaQoZraXvHnwY+XH1roMkbcI4lrL4cClUfKWYHnEZKS8f4Ly
l2Bg6l3zORemv2fA0RHuVphIqX4ZpsVTSed8Jmg+z0Ex4z0zZ8dRkJN5K8AW
nHe8Ej9I81iBmMQ4uwNPe8hbhX7TnYr349vJW4PmTruI39TF5K1D0O/NEdLZ
u+RtgIXh6a+cxW3kbYDNJOeGcQnjvYCrei6XPd8ZJG8T4l9vb0pWHiVvC0pS
NvblmEyQtw1POOemml+VkrcNWZHJB2Y8mH5fgtzWSyXrzQnydsB9Zb/5m28w
+2EXTnsEurpmDNH8WCg111NMtuijfBb6Tv5j4OvfSfNkYUhhnUfQeiPVy+Fq
nzp3SVxL68lhTln6i3vVLeSxsVsr/VS5Tzd5bPQWBs62cQfIY2OBz5/HGwQj
5MnjEb16i5jocfLkMeVUfbx7r4T6VcCMyczDbQHM91NAoa8w3z9HQp4CNj3L
f2K/yfTHwYSu1NzF7GHyOHh2IeSISmQ/eYrYYSsqOni1izxFNPWrds/mNpOn
iM//crbbvF1DnhLOSXl5P/90jzwl/PLDrGvuj/8mTxk1l71aFMeY+SljkFpy
1B3+MHnKGJa4WnS8gHk/FTxRuYJxxyTkqWDsldccwoRS8rjoXJmWUCjP9MvF
pJ1QU4/GcfK42FVoKoz9hpmfKoZV912zvjxAnioueZYFKC10k8fDUl358+H6
reTxcKaD38kKqiOPhwUlmeFnChvIU8P0jy7e71PqIE8NDayCw6p+7CVPHeXz
gtNyOcx5VMfPapp4krpR8tRxaOqRu04Fc7400Cz5AweWA7M/NfCTzGCNBgsp
7RdNXC/lPhV9MUHnXxO3XimxCk0cpf+VJs63CA7blA+CrDxfE/dX99xKsmX+
D5o47XjCbFb3AXlauC2KmOj+VUyeFhbq1JXva60nTwsrqozjNPht5GlhcY3V
16kBPeRp4Y0kp5PR8wPk8TF4rtxWvmeEPD4GOrULS3fGyeOjQMjJU9GWksdH
P5s1o2UvKXl8jDp01Ol7Awl5Arxj6MG1+3iMPAH25yZeOnh3iDwBClXDA4fO
9tG8BGhvme29ts2cRwG6bV7wKyprIk8bd0VneFWHauFfjNKw9Q==
       
       "]]}}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0.1, 5}, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7621500518954906`*^9, 3.7621503857219763`*^9, 
  3.762150434208084*^9},ExpressionUUID->"bb953ca2-b3a7-4e33-9c39-\
9cb61360dbe5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Reduce", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"1", "\[LessEqual]", "z", "<", "2"}], "&&", 
      RowBox[{"0", "\[LessEqual]", "\[Theta]", "\[LessEqual]", 
       RowBox[{"2", 
        RowBox[{"(", 
         RowBox[{"z", "-", "1"}], ")"}]}]}]}], ")"}], "||", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"z", "\[GreaterEqual]", "2"}], "&&", 
      RowBox[{"0", "\[LessEqual]", "\[Theta]", "<", "2"}]}], ")"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", "z"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7621516058995247`*^9, 
  3.762151652956163*^9}},ExpressionUUID->"f7548887-e248-4ff3-ae71-\
709824d4853a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"0", "\[LessEqual]", "\[Theta]", "<", "2"}], "&&", 
  RowBox[{"z", "\[GreaterEqual]", 
   FractionBox[
    RowBox[{"2", "+", "\[Theta]"}], "2"]}]}]], "Output",
 CellChangeTimes->{
  3.7621516545709763`*^9},ExpressionUUID->"dc9ba25e-8eea-4c1f-b093-\
c33933fa171d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"2", "+", "1"}], ")"}], "/", "2"}]], "Input",
 CellChangeTimes->{{3.762151677781138*^9, 3.762151684262924*^9}, {
  3.762152362897643*^9, 
  3.7621523635242643`*^9}},ExpressionUUID->"14fa585d-e768-4bb3-9573-\
17c62b1dc0fd"],

Cell[BoxData[
 FractionBox["3", "2"]], "Output",
 CellChangeTimes->{3.762151684584036*^9, 
  3.762152364047394*^9},ExpressionUUID->"a37c7c8e-ef16-4d76-a111-\
1456444879ad"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ListLinePlot", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"Abs", "[", 
         RowBox[{"fu1", "[", 
          RowBox[{"i", ",", "10", ",", "0.1", ",", "1", ",", 
           RowBox[{"0.75", 
            RowBox[{"\[Mu]extreme", "[", 
             RowBox[{"1", ",", "1.50", ",", "1.0"}], "]"}]}], ",", "1.50", 
           ",", "1.0"}], "]"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "0.1", ",", "5", ",", "0.05"}], "}"}]}], "]"}], 
    "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Abs", "[", 
          RowBox[{"fu1", "[", 
           RowBox[{"i", ",", "10", ",", "0.1", ",", "1", ",", 
            RowBox[{"0.75", 
             RowBox[{"\[Mu]extreme", "[", 
              RowBox[{"1", ",", "1.538", ",", "1.0"}], "]"}]}], ",", "1.538", 
            ",", "1.0"}], "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0.1", ",", "5", ",", "0.05"}], "}"}]}], "]"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Orange"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Abs", "[", 
          RowBox[{"fu1", "[", 
           RowBox[{"i", ",", "10", ",", "0.1", ",", "1", ",", 
            RowBox[{"0.75", 
             RowBox[{"\[Mu]extreme", "[", 
              RowBox[{"1", ",", "1.55", ",", "1.0"}], "]"}]}], ",", "1.55", 
            ",", "1.0"}], "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0.1", ",", "5", ",", "0.05"}], "}"}]}], "]"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Abs", "[", 
          RowBox[{"fu1", "[", 
           RowBox[{"i", ",", "10", ",", "0.1", ",", "1", ",", 
            RowBox[{"0.75", 
             RowBox[{"\[Mu]extreme", "[", 
              RowBox[{"1", ",", "1.65", ",", "1.0"}], "]"}]}], ",", "1.65", 
            ",", "1.0"}], "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0.1", ",", "5", ",", "0.05"}], "}"}]}], "]"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Green"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0.1", ",", "5"}], "}"}], ",", "All"}], "}"}]}], ",", 
   RowBox[{"AxesOrigin", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.7621499400469303`*^9, 3.76214995788577*^9}, 
   3.7621504060089197`*^9, {3.7621505025636177`*^9, 3.762150584768229*^9}, {
   3.762150711946499*^9, 3.7621507337298098`*^9}, {3.762151167774871*^9, 
   3.762151256181389*^9}, {3.762151351836936*^9, 3.762151354060423*^9}, {
   3.7621514560462303`*^9, 3.762151488927505*^9}, {3.762151687044091*^9, 
   3.762151702988637*^9}, {3.762152037137191*^9, 3.7621520674034643`*^9}, {
   3.7621521412725077`*^9, 3.762152175683105*^9}, {3.762152243890764*^9, 
   3.762152264643681*^9}, {3.762152370340376*^9, 3.7621524179845133`*^9}, {
   3.762152511523136*^9, 3.762152531002396*^9}, {3.762152562802606*^9, 
   3.7621526161435413`*^9}, {3.762152658720001*^9, 3.762152719872999*^9}, {
   3.762152755261112*^9, 3.762152763353239*^9}, {3.762152794017836*^9, 
   3.7621527987406797`*^9}},ExpressionUUID->"db2d7eb6-b1ef-418e-b8b0-\
c7fcfabb6f17"],

Cell[BoxData[
 GraphicsBox[{{{}, {{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.016666666666666666`], AbsoluteThickness[1.6], LineBox[CompressedData["

1:eJw11AtQVGUUAOBdWHksr30QJTIKEw81QYiHGFPnwKgUKCkVCkKMIsI0KI4M
OoxKZNRgiwS6PBYIYUsQpWAMMohgeMzQGvGKcCNeC/sgcRZBgkVewXLumblz
5879/++//zn3/A6nE0NjDVgsVsz6tXEvlGxEPeyIaHwlzbkbvDw3og1mnXdO
s071w+Z7GaRLU08nFMmBpY8eaBN31bQeH6Lxf0JsiOFiasUonNXHAFybnF4a
D1bQ/L8h4W7QvL9kHLo6N2IIZgsCT+Y3T5A3BtHecYKcFiWNV8A/9Z+nPClV
gZ73nADxbp/ghSg1/KGfrwTPazHFb+nUEKdfTw05W89755zTkDcJ9Ud/aOhp
0JD3L3TcWPCuHNKQNwX+4YM7fHs15D2DqkbPxF0SDXlauN9kNxy8j/GeQ3GT
q7tJNbP+c6gMXt1rbqgmfwZUxRe5DV4qmj8LJXeH3OwPKCk/L8BJljO63X0C
2HpvDpRn9q5mzCsoH3PwaOFp6B7xGHn/QW3EPXmi6Qh58zB+0umvqfRB8hbA
dNbI8hvRAHk6CD3z4cN7pn3k6SBM2nfp8KCMvEWIXOoUxUiayHsJgeVBwz2P
mshbgjJht732mYy8ZXhja55uls94yxDimBs5eWuAvBXotL35e5RokLxV+GnU
tsjZaoS8NTjiWh5flzdG+WOh+P07x37TKWg8C90fLA3bvjlB+WThLfeOS8MH
mXyxceLhy6t+Pipaj42PHU60hHLU5BmgYn6lQlDD1N8A6w4Oldv4MvU0QI6y
kF29Xs9NzxC5OqH0Yi/zPxiivPXbkNz1/2FzvxyM5PVKEhuY+nNQHMjp1yQw
HgdnMkTzIQtq8ragf9YTblckU/8tOBdnZZB0R0WeEV7lrKbMNCvJM8KiseYH
Db8y+zVCa3HpOcf8cfKMsXHVzObT95h+Mcb9F0qyt0lHyTNBt8LHxjXHhsgz
wcGqH8OyxXLyTNChLGnFN7yfPFPUbneR91l3k2eK1rVBNosR7eRxcbk0yXFs
ve83PS4GHG7t/i6tnTwuWiTuuL3LlzkPzBDe3m3XEc+cB2YYma2dPiSVk2eO
rl/2GvdHMd9njv798R6KqlHyzDFIHXHiUIiCPAtMbn9t7eOicfIscPj+THZS
C9Mflrgz9iMv9zYmf5aoqJq67CdVkWeJXvEXzOyjmXpYoUv0J3VOi0w9rDBq
Rraw/zzTvzzcExDu7PEL0//rz19pP2hcr//mecXD68cz25d7NKCfLuFh4NdP
F6UFTP15ODFV7JLmw3h85JUHtix/ryaPjxmYmd/OVpPHx2Rv2ZV9niry+PiZ
39HqUwFK8vg4HzQrcnBjzj8B2oWFe7w7pyBPgFmvO0nKcsbIE+CLzNtn6wxH
yBPg5aibtcmpg+QJ8OeyEtaR9AHyhFgRe4Mdzu4jT4i6gsptpR0y8oTYnZXX
5nClifIlxGKjL0TXB5rIE2L6qynGuWsy8qxR5Gqpfce2D/4HAR/E9g==
       
       "]]}}, {}, {}, {}, {}}, {{}, {{}, {}, 
     {RGBColor[1, 0.5, 0], PointSize[0.016666666666666666`], 
      AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJw91HlMlEcUAPBlOXY595RSQORosJBYQEBoQd6TSqOs0JQjRQXaajlSSbC0
oGKjJRiCsSqXUKSVBQlECsES/MMEubTIuSpkS7gXWGSXvRAtrFwWtjN9yZcv
k2/eb/K9mTcup9KjkpgMBuP09rPzvl2+Ew+h4mZIZljvc/Dz3YnHwIxqODMy
JoX/vvfCcL/Xd+OhY8AwxHNY5aW497hMkfnDMGXdKEl8KoNkQ/wNw8321eER
syR/FPqagiz33JsDycBOTMCdtdfRVjI58WRwVnr5/a9X5sn8GXDkuso7dS/B
wPvOwfVPdIXHny3AoCFfDkk5PRpFmQJSDOu9hC/somonRUriKUCWK/khUaMk
nhJSI13cYy8tEk8F4mrbiiyGinhqCGsvDj6aqSKeFq6Wx6V5TqmItwQlulTn
6GA1mb8E2fsVk+MFauK/grxojk/HhJrkL0PypbyHM84aUp/XsFdWNGGRqAEj
g/cGcm65eLwq0ZB6vIEpkdOFgG4N8f6BfIf1kfRlDfFWYCHS23+3vZZ4qxDp
W6BsOaglnh5ODHoLxAla4ulhpn5oMDhbS7y3wKkKDZ8u1hJvDVgdot6heuqt
w7Wa2J9OtFNvAyyD30U2v6DeBqTllVdwZqm3CRl3lwaqlqi3BSPp49qiTeq9
A/ef73ixzXWkfgzc/elclKtAR+Yz8JvuFLstBx2pJwNzAwNKW9x0JN8Ijwjl
+Sc9dWQ9I5y+2P+rqTf1mBjvP1Ta5Uc9JmbonzRVBlKPib+H5ZbVBVHPGHsF
XQ2zB6lnjIwDR4Rfgo78rwnmOSkG2Ug9E2yIGeh8C9QzwcvcjG4PoJ4pfvte
n7j0f88UNSDaCAqinhm2hUbECwKpZ4ZiTyeW0I96ZpiqP67Y70U9FtaWxaWd
8qAeCyX5aTFFrtRjY8N525wme+qxcV9xQstdHvW2x17polgW9cyxIV6grl2n
+2WOP3Jvf3hOS/fXAitbsuzE03T/LHDx6MWZFYmWeBZ4ZXCXv6iV7qclTq12
PEquo54lPrn+6LxVAfWsMMvNiKHPpJ4VZs5Pt07EUc8KNxxDmEmB1LPG2K9K
OT5C6lljW/q5ZamK9ocNNmftDZ9oo+ffBrMKK+fbftEQzwZ7TjodUMbQ/uKg
vTCg7IEt7R8Opi4txp95oSbnhYsRSuc/gq+oSf9zsap43vjwR2pyX3HxWuC9
qzkSFRjSy7nI+rxwduQ0vR+4KEqpamRrFonHQ/5o+/f3U+l9wsPO3MNzh6RK
4vEwoe+zaIaPkng8lMbabOkvKIjHw3mR9+Ba4wLx+Biyr0t+rY/ed3wUlLCk
4wPzxOPjmLjlr/t/yonHx4WE8j3HMueIx8dI9tPqQ4JZ4gmw3kE15J8nI972
uMateebGJPEEeKzobD/+NkrqJcCN7A9qXB2lxBNg6426Wx+PPiOeEHetP/C4
ufkY/gVXh8Q9
       "]]}}, {}, {}, {}, {}}, {{}, {{}, {}, 
     {RGBColor[1, 0, 0], PointSize[0.016666666666666666`], AbsoluteThickness[
      1.6], LineBox[CompressedData["
1:eJw90wtQVGUUB/C7yy4sLKz7AKpxGKFoN8vMcEmM6ByECkRMcJFJagIcFukB
E1b0AAMapEaxBFIhJmcSJhmnaKhA6CEqNkRiIGaEEo8WZNknuryWXbZlu+f+
Z+7cOTPf+Z35ztwbll2QmsNnGCbD/ay+ny7PuNaeNAZlJbmb9uZNQX3dasbB
lhARO6W+DZs9+RdSjScKrwdOQ9+V1eigaLit8feRacjVrmYKMv7KDoqv1gPj
yTTMTzYoX1PPsJ4eeNkdtohfZ1jPAFmi2u92JRpYzwiDUlFx8nkD65lh03MX
Fw6tN7KeFRxblOrIj43seSts7nnoSv6okfVnYZsq7fCGR01s/x1w4uundxww
gdoz7y7YGy5UfNZqAp7Hs8FLZTH55wwmuOrxbLDTAGd3rzOz3hx0RKU025LN
rDcPjeMne+97x8x6C/DTjWyJ+gsz6y2Cbri26kyXmfUWIXPJp39glLwluJb+
pJNxkGeHmDsNxoNBFtZbhksXDwVXbbCwngPSWlNf0cZaWM8BmnX3+KHGwnpO
+K1Aa03MsbDeCljP/FLa8iZ5LvinzyY8WW5h98dg/MJEqOoTOs9gWOmYqqTe
wu6TQelQ0/vtjdTPw71x+/qtX9M8Hir2PJMf20YeH2feSnr1/M/k8TFuS8nI
wW7y+NhdHyKq7iXPC+Up4grffvK8sGr7i3m263RfAerk72kz/yZPgNsuRehf
GCFPgMdrBiONY+QJ8YHOrLIwHXlCDNlT4Ot1mzxvDPle+XCdnjxvrKveWmgw
kOeNyZ2CHxgzeT7Yzb+1dtRCng+qNrZHHpklT4SnexOFAXfJE+GHrkCJ1kae
CEeXGzM/nyPPF5WFFU3fzpPni4dDRarmBfL80FhVNly5SJ4fio627H9+iTw/
1DNPRPLt5IkxvDYh50s7eWJUdgmmHl8mzx8vTwcXti6T549R4q7jDzrI88dH
ipLOHXGQF4BHGU2w3kFeAG7PK/8j2kmeBAd+nNBVOMmTYNHLA0/1OMmToBD6
mrxWyFuDLd3WoagV8tbg0nB48f4V+l6kGHnLO7zGXf///0tx8mZ7Woe79vBa
KX6ztuKjm+7a014nRfv9GpV9heZJMTp58liQizwZpj87G7LRRZ4MNZmx98a7
yJPhn/mnLqe7yJPhruyz+/Jc5MkQP6he/y7nybE0ui2hkvPkGBiWYqrhPDmG
Ag9OcZ4c5Tvispo5T47HTowcaOU8Be4cj6np5DwFfjV3Y+gC5ykwK+ftjB4X
7UuBn4orH7vKeQqceWN37iDnBWLxxFbFkLv+DxFUnUA=
       
       "]]}}, {}, {}, {}, {}}, {{}, {{}, {}, 
     {RGBColor[0, 1, 0], PointSize[0.016666666666666666`], AbsoluteThickness[
      1.6], LineBox[CompressedData["
1:eJw903tMU3cUB/BCSwttoS/Y6B8wcBrEzWUBDZsTz9lWg2WLDyJNHGsyh6IY
XbeZzRnFsAKJLjEBxxaoQnTRkKgTYW6sM2YCiSsIsjE3GVRqQ2F90QIFWqCP
le6e+01ubk7yO5+T38m92R/qSg7Gczic96LP6ltjKX537h8rpIu3FNoH7JAf
ywTk5EvVQ6ccMDiwGhtsuybOjeQ74VDFaqZAYhMpDU+cwInFDspBL3AqXWBo
Xo0Dcm5/rd/udDGeC4xyTXCr1s14bmjfVbxe3+tmPA8cTvqjrDpzmvFmoF2v
D32hm2bOz4B1/Vj32a5pxp+For9Hs2/6p5n+OfikeUNe76se2BSb54MLdwoX
G8s9EBfz5oFnfLh9uN4Dj2LePBz/MU2TbvQw3gIIajb45swexlsEjbXw8/Eg
eX4ITkqq1Uov4wUgbdxc/W2el/ECUHBlTJ6h9jLeEmx+s2fjS1ov4y2D1FRW
wNd5GW8FDvw0tOA6Q14QLjz+qkJxnrwg2Kq6q75vJi8Ep6siQ5NXyQvDQJsj
d+IWeRF4nKV8ztTlZfbHwbJ0XekPv9J5Dv7s5KrvP/Ay++Tgi/eL9ggGqT8O
j2n2rmkdpnlxGGm5m9L0hLx4VB01F/PN5MXjuecncgIW8uLRcF2sPjVBHhff
WGsdvjhFHhdfbvq98YCD7svD/dfCr1hc5PGwskGbn+ohj4e1e9e9LZohLwFX
/OdyH86Sl4AlRq5vn488Pn6qyY6/N08eH7NClWuWFsjjI7e3v0nuJ0+A1a2v
5yUHyBNg6dq0Pe4AeYkoOtgX6FwiLxF3tglHypfJS8Rd7e+UxK2Ql4R1dxLP
nl8hLwlLVX6tMEieEP3eSzUng+QJ8YXhwpPmIHlCbOjnfbMpRJ4IpzK+FNSE
yBMhpj6zmELkifFWf6tEECZPjJqRnmPbwuSJcUvmTaMuTF4ytg/2tFwMk5eM
1vHfOnrC5KVg0ZL59CTrpWCtQXWCFyEvBUWZcnFWhDwJLhdcNrwWIU+C/t3m
Ezsj9L1IMXL3fe/+aP3//y9F7UeHVMejdYyvkOLWI1Od+mgda2+W4o7OzR/X
s/OkWPHd6I1LrCdD1b2M+jbWk6G9/8pbHawnwyMat83IejI8fGaksZv1ZFjn
Cx01sZ4cxxoS6h6xnhzT+4Kzf7KeHLtarj4YYT051ipvK56ynhwHzBz7M9ZT
4Ad9f+22sZ4Ca28s7vuX9RS4Y9SS7GT3pcCOBMdnbtZT4Man5QYP66Vil+kX
/Uy0/g/JXKbH
       "]]}}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0.1, 5}, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.762150540900935*^9, 3.762150571955308*^9, 3.7621506402958384`*^9, 
   3.7621506963689327`*^9, 3.762150911304207*^9, 3.762150943603251*^9, 
   3.762151023569955*^9, 3.762151161161619*^9, 3.762151266659717*^9, 
   3.762151304297387*^9, 3.762151375141666*^9, 3.762151453858724*^9, 
   3.762151524469846*^9, 3.7621518293875732`*^9, 3.7621518624150677`*^9, 
   3.762152014008284*^9, 3.7621521003911457`*^9, 3.7621521819187527`*^9, 
   3.762152226503623*^9, 3.762152354167939*^9, 3.762152438461466*^9, 
   3.762152551215667*^9, 3.762152604899783*^9, 3.762152637057137*^9, {
   3.762152681289247*^9, 3.762152740808165*^9}, 3.762152783856131*^9, 
   3.762152819553666*^9},ExpressionUUID->"f3a01dce-ddee-4045-acbc-\
bb29db6a8ea9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"qcrit", "[", 
    RowBox[{"0.1", ",", "1", ",", "1.43", ",", "z", ",", "\[Theta]"}], "]"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"z", ",", "1.4", ",", "3.2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", "0", ",", "2"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7621529047066402`*^9, 
  3.762152989208449*^9}},ExpressionUUID->"dd8c14fb-d2ef-480d-9328-\
f3ff3551fa7a"],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJxknXc8l90f8I0UJS2iUil7JHtzLnsUGSGj7D1TRpKMFpWMEk1aSnsgGr4p
WlIiGU1ShFCy+T7u5/5+Ptf9/J7+uV+v9+tzH+e8r7Ov8z3XCs8wWx8ONja2
w9xsbJxT//1W0bnP13eQ5G+4XLJPLlnv3Rbh21fMlSgupZmhMyKHke+ycHEa
XK9BSeTL2F1MHkUuVOp51lSbokznrtEwzxxHXvHq9zfh28aU/86gpT/zJpEr
r9nQc2i2JWU8ZJxY6chGAZ8RzTMjIMaOapBv+CPgxo6cLVPNQ36ZM+Xn+88/
DuQLxx/Nl93rQQ2fHGwsDuFEHrhBonRzih+V8m7PmhmR05APV4Vzl50MoxbP
FnzoGMeF3L/tXq2VbiR12ahA4WLydORR+dV9r1PjKJ049bPDqTOQF75bcFlN
Ppl6dfupgHkmN/LRqCPPuZ+lUC5djvtyc3mQr+H5KTRjfQYFngPl9XLFzStI
ndUayXv7VqNn4Cu/Bs1xbFNBz8D5IxW+8z7TRs/Abxgai4rsNUDPwN9+3Pzi
8WMz9Aw8+LrK0i1Z1ugZuPj+gshZ6g7oGXjh8MLepdUb0TPwaLaVudOYXugZ
eOOCO3YnmgLRM/BXL+pmunFHoGfgyxVf79ugFYOegbsaHn3sZpqAnoFvErji
3fVlN3oGvmNzY/cm/4Po+UpHE1PM/C05VBZyRMxNFj0DD1oY/fLrNCX0DLxh
mQLzV4s6egY+8E751LG7BD0DHz+etMdQwhg9A+9eP9LtZrgWPQNPjM5XVPlp
i56Bc13QrH6+wQk9A/fcvf+VH9MdPQPPlEi7/Om1L3oGfvC1QqFSfih6Bl4/
1r1iZuZW9AxcTDjIeubZ7egZ+JEh85KCjCT0DNzsqffrFwP70LNYGb9ySUgL
sTldsdV9UhI9A383a7B7j9Vq9Axc3tSqZ2GOCnoGzm78RW+mvjZ6Bn729C4p
ImyAnoE3q1cm7hIzQ8/APzSTgjoRa/QMfELA+0XyEXv0DPw5b7Jhfpcregbe
pMLZucPbCz0Dn/n8SIvh9ED0DDxsU5RUcsxm9Az8rvllIhkdjZ6BH1fTG0jd
sxM9A9/g2lQYLL8bPddUSt4WM28l/cdTvr9zFEfPwN2aRcx/bJNFz8APP1z0
veaHInoG7nLVbUNHijp6Bl62g/+z4kqCnoFnKcV2zrtmhJ6BP50Tzu19aA16
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
Ow68eHXqk4gHg+PCl+h/xsu9bf96kFhWZVWX6ME4/YtTcZiHfv/LcfHY49sd
HtRt5Z9cXmaT5FybX7LGoknyxdv5XFhlCLXn981r/dvHiVQFj5Lw5XGivO/o
l+Jqf0avU2D2C7sREsNapzyprzM6U+tNiai+f93lTc/bFzT0NczX9mI8WmD1
gHvV1PqWtd4Rc9mw8+I8byrhkIHlqii6X2ISoR9CU/XzgkaUQvzeQdJrtOn2
xeJBIlK+SUJGyp2xLvCJ3+XPk6Svb5nftJuTJH7Wft/bPmHU4d5edSOhqf7W
LrRoUeck4XVcNfj7UBi1NeX47X/63zOpf5X/6Y9P7g5W+BYbTs33791T6c8k
TsNBqeY6TGI7PG1n58LN1ImMowuvHZwk/HULDidvmiSS7wQrrF1CqecxjPnJ
TyfJDt4t2g45k2RX6uONsk2h1IC9uekD20nS3JNNSUpPEu7M6OncX8MpHltz
p+YzTHL65tOG61uYxL3o1RsX/3BKdS7JS22YmvdPGosVThsn6n18jVya/ozZ
OYt8I2vp33Ho1P4QvTnswbCyjPbY8pf+PeA+WTctRUMvxrJTFxTlCD2PGpwe
cTLocihj//jLBQ+m5mePX2db/p2aR81x/q6f0BnA4OPXqva+Nkm84fcCO7SS
vCJDGWduOG0pPDFEnrQ3/61/OUQeXb3w2izag9E37FT1z7ztkte/3gqTvvWn
7wxlyD7TMfmiwCR13g+fzXRnkh+iHJ7HV4QyqnzaxCwuTK37pvsUbH03Sbx8
/BL5xoIZDrx/DLdMzWsHuFp7Tv5kkki+Ny9vTM0POw1vBecnMsmNtDv6NTeY
ZPFIwqbqN6EMD//PW2ZYTZBrC6OmdUzNEx68kPsz4RKM67J1KacTAi1HiKpd
flD8ah9qOmt+8iKrhvuayTDZsut+14NOL1xvnlt444+V/Sj53PFXdKagH3WK
tT6N2vx3m+qvCbJxv0lI9/YQXG/qqjwciHk+TFx/P3DPWeON6822vhOnlr8d
IcUTXZt8t/lS7yKTb95JGiP52kqmvTfHiM+Y/vYlgn6MtLV5BR/zJwif/+F5
ZyMmyDzv0vepbsHUC8Yzzu7KCXI8iYe7LGeCpDqbf/7xM4RaUlar/XTT1HrK
XbH/yP4x0mYjVOUv4o/rStP2Y+e15UdJNvOl7UlZH1xXupsljbmqjZGM56eP
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
dsXyAv8uJZNoLOaJ5YX3uYyiOGeD4IVYXuDcTNOEvghVBpT3212dxOsxY+SO
Ubd4t68PlhfivV7u3FqzmWB5gf9QO7fOxt4Qywu8w/num+uLzbC8wDkqfXUb
7a2wvMAHpfzLD6raYXmB90s9cTsVsgHLCzyJt/Nvr5gblhfeQ115OXNVmjY7
lhf4JR6xrvkr+bG8wE+cOJ0cnrGaAeUF7upd/8U2RBfLi/cVcBX6qKToY3mB
G2kryQ55GGN58Z4f1n0CuD7SOHC/eYxJtlbNyXjsxobpw++MbrN+ZwTlmh0b
xsvOxiAxf74+XpFO7z+479dn3g25R8JlxgxMu+h9hoKV59rDWopJyTrrP9cK
9XGc7WHdU/HS/pZjuLYpjhcuZ9563wu5TDJu6VnMPWqF/eEz1nlavvEbZ+ZJ
rcd+4PZk6fgq80zy7tRv2+4sZywXHyufXUx7f54b9Lreh5XPiXNzr2ZwBaK3
q6x8ztnlZFajtBm9DbLyaZxqfLXuXhTWk3hWPjc7Kj43543HejK39t985rZv
a2prptd38WkRpZlitWR/R5xR7X16vWytMmsLG9sbEjCHcD5fqo7eDO6YOn0o
fkXyM5S2+ejpobfvzJjqkpCX5H1vW/3NBkP0tmdNIckSe07iCr0dTy2wQG8r
jrbcCm2pIpu/rvMUlab3T6paeSUsMp+QxJptlOFxB/QG+dTf9fKWzn16vQz5
5F36R+LiEl96vsfKpwxPhbmzWgh6+8nKp62Xe7aK5Rb0lsbKp+GlS8rHE7eh
N2VWPoP7khn9TQnYvj6x8nlaltPWz5Defxh0u9otZt5MrrBznTn2hl4vP+Uy
uZAp1kQmYxvPmf+h18u5lz+5sbE1kltqk9NFxjTp/Sub6EWhLQ1knfFrbZNx
Cn1qDc2payl+R8Kz7307bmyCPrlPXjxgnllPlvU4V/YbWKLPZgN9k5KQOmL9
slTsFKH3HyCf/Z9z15tso9fLz1j5HDcT99R4Sa+Xj7Hyuaw7s/NjrT/6DGbl
U9jrqV6adzj6JKx8znLin/23IBJ9zmPls7LVbdvP43Ho8zsrn4rf7tlT7Uno
s0Ro4FBL8VcyOf9IaNRMWfSZF8QIzhT7SgLnKs284qiIPvc9PGBunvmFzJLU
fKMZpoY+N89zkmBj+0I2eYzynVLURZ+3nllMD235RB4Uf1H4Nd8QfSaEtpW3
FH8k9T1hXjpMM/Rpyx+3zTzzA9nv9bb2UQC9/wD55Mlfs7GFbECfkM/3x2Pa
0kbd0GcKK58hFY1t1xb5oM8IVj4Hb9jv9WoJQp8lrHzu43R0PO0dgT5TWPlU
3D45kGQRgz43sfKp9TluQm8mvf+wJTHjkpj5d3KRd3mEFj99/ty1fuOeluJ2
Qq1bcy0yRh59GknKeGWKtZOKs1xu1ruU0ecq1vm0bfUP7/draKJPgVcVwmxs
34jKisDgHz4U+hxffmikOKSNbP6QdLAzwBh9tke4NIS0tJLG+nxrfV56/wHy
aXFn33326/R6GfJ5N733xWsdF/RpzMqnxvw9CpwD9HpZnpXPxkNpn2Zf90Of
gqx8tlQlDnTph6FPNpF/81kSuvVHUf5W9NnFymfpmzuLxXTp/QeFn/KPQ1p+
kvdDh333DNDrEThHV345NDBLWhZ9sqU/jWsp7iRP9I/paMjQ5x47Wef0vK7b
iZ/9q4o+a1Xd1cwzO0iHQNusYicd9HmXdd7vitmqPyWBBvT+c8twb3HID5L+
tdf1Lje9/7CalU+P65UdEtfo9bIQK59DR7lnBuk40us7Vj4dTm0RF87eRPef
rHyWL7XaJCfpjT7rWPmsT169ICcrEH3eZ+WTUf5bbvm+zeizgJVPQUehoOaV
9P5Dt231h+KQXrL7XffW/Gp6vQy/v5C4ElrNaPjPOmXYO1vM/Bd53b96HttZ
efR5nnVONa1tXsGAvTL6PHhqYl2mWA+xC5c+1nlbA31uZZ139Wre1NnUQtDn
RqNsHja2bvJ42ETy2VUj9NnFyifPYVPjeBsr9FkP+Yy82fn6I71ehnzKzOTO
eC/kjD4vsPK58mfCRgtZD/R5iJXP/XKJZTUnfdFnDCufWheT925/E4I+vVj5
PGP3yUD60hb0Wf9RZYzJ7CfsGhn6wvPEaW8K7I3FIf2k7bTm622CcujnfPKr
OyEtfaRiR5nKRJUq+oFzvFxh/BGuz7TRz4GG3Awx8z5iOykWE9Kuj37g7457
b7lxYokF+oHfuTS8SNj5l8eG9sPKT0yFBpeVjQP6UWSdEz7wXepqmuVG9HOB
lc+PfRHLVxp7oZ/FrHzWd6gefOgWgH7SWfn0eM39ZqAkHP0oZXLuEzMfIM5x
jm+fxEpheeG88fxnr6PKd2tgeX+m+i8zz/xNTL+1r6Z06X0ASOdi+mS49ml6
nQu/r6lxupx8xcWSXt+1v/ZuKf5Dzr69WXdF3A7Le4h1ntnH8vW7Y3OdsLzT
NE7oZ4r9IWJ9qbrhEe50fWDlU1n8/m7j0z5Y3l+sfM6ut/p2JTIYy5tu8pbf
PHOQLFf9pcTho4rlMiPql0NaBoiA4UjFyePaWC6If/HVudX9Kb1uhXMLUZcv
5+psNafXcbmn+pnMv+S5i83DcwnWWK4e1vnqh3tL+54k2WO5PLsDa4pD/pKU
CL0vh8RcsVwN8DsOnkGt5ZGeWK61rHyW3FrLKaJPr99/jeblh7QMkzncPxM4
FxviOgV4bWyl+No99DoUzjOIMveuJyYm9LrMMiRezHyYFLdaxi08sxbzv4b1
Hn/4QXOu2AFbzD8jT9OlpXiInDLT0auT2oD5V2Gdf+5/bj45kO2G+S/8w6WR
KTZELP+mGksXeWP+114Pk88UGyMjX59QpbpCmH/g8ydslw5dp9eVcB5Pm/em
ok8Fva5UZZ3XXbiUagtYYI75v8Q6j6Fjkh/ksMga87/MnruDyRwhJjwlf240
rMf8Z7LOw+wpyOPgF3HB/HNfrH9SHDJCEgKu+VClHph/OG/8VfZp+fZXHLiu
hPPMT2rb4tzYFmG5LrHi5eZuX+ZygF4/LmfF67pejZ39iV4/wjnnOv6rD3Zo
mmC5uFnnqM+y7qmD9LlY542PzJMtLJORw/TjWOcrLFj3TUH+oR/7a3jMzapZ
DDm090fW1+sn39HjO/QPL65vvizWRO83srPa6f4vJ75m8cliOtC+VrwvELSL
k8N04PcI9U3H7q5TovfV3VjtwrOtYbg8iJ73wrn60yefmxXOUaH7c1Y9lBYx
EVz2bjX25+Usrjyk9NzdRRH5O1Y9t412u3nmAD1/XsKqD6dTDD3sUuh58lIW
r+fTXGirSe8/K7PqG6NNScvGVhn7z0es+nl+qcKXnnV0PuN43m8VMx8nEXJx
W95KuDMgne0svvdZSvDoEvr9Swbruc/l+PzTsY9evzewzvlzFag2O61YienA
+f8Pv1xKBPeuw3R6WOfSy1i/F4B6BfHTFQusfA8bYb3ygHvkWPdkQnuB+ObG
zTeuH12HHM69dwkVEu/9VtiOrFjnh/VYvwvGfptVD/ex7q2C9hXD/HffYJ3i
j1gDDfp99+C2f/cNRKU0wrot9mK9gvmep7NM1/JMSeRwnj9zfGYAlcGPfmC/
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
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[
        TagBox[{Polygon3DBox[CompressedData["
1:eJw1nHUcFUUbhe/G7K5Kid2EiCIoioFgI4jSGCCCgYUIIqKkKCh2g6hgF2Bj
dyCC2B1YgIGKhWJifefhzPfH/N6zc2dnZ2dn3p7beOCw3iemtVrtiVCrZaJX
VLXavsIvlrXaHvphnMoK1R8oOlrlEeETklptpPABolNVPhbeR3Rb0dNUXlCb
B3R9svAy4Z3U36nCo/JaLRflgbvp98mq76bf99KzGui3/sInahB9df2D8KSi
VjtY+AS1P0i0pdpfp/oZanOc6o5VuVvX26j+LtFWwf3SvhLtqnuOEj5O/TTX
bxerzXTdmwlvrPog2kLlWtVvFVzAW4ruqDJcbXYQ7SB6kkpT9VlHfc1Xm6C+
f1dfewkfJPqvSmfh/kyifsvUvr3oP7reV1WHiv6msidzKfqDys7CXUV/VdlD
+ADRX1R2F+4t+qNKW+Fuon+rdBLuJ/qXSkfhQ0S/V9lJuItof43vDJUPdN1Z
dIJKLXE9eDuVpWq3rar3Ef1KpbVwR9GvVbYT7iS6SKW58G6iC1UaC+8sulhl
S+HdRS/VPPwuvJ3e8YjM33GCvuFE1X8n/Kro8ZqDwSpddX2cnn2J8EV8N769
6BWsD+HzRLcQ3YVvIHqF+tmC7636nqLNVHelcC/R89XvT+rvDdHPVDeDepXz
dL1c9a+L9kz8nMt5vvA5rB/R1nFNHyJ6segxqttT5WiVy3Q9JfVzJsdn8fuF
wn+o312Df28venXqd9lLv/8jeib1KmNUJqXeK5eqXKXShPfWmH5TH2+LfqC5
asSeEL1Y178KvyW6uca0pdrvIbptXM+s6366XiBcT23G6/cJqffZMJWJKq1j
OV3lF9ZQ6XnvLdpLZZBwM9EmKpsLdxNNc38vvhvvzfv3jO/KeHnfyfE7MQ8r
ha9RGS78u+itKmuoHK6+6qjuPd5L16eo/Fjz3PC9mR/mjTl+OPf3pu7Y+H14
Ju0uSD2n/HZR4fd4U3Rq6vHR7g5dz1X96qKz1FdjvpnoGioHq/54vUsd4T7C
g4XXEj5ceLhwQ+HDhE8SXl34IOFB8AHh7sJHCgfhnsJHCRfCvYSPFs6FewgP
FH5R77KGnvuuxjBE4+qTmme9r+vXVN9O8zFK+GrVPS86WmWa8HzRTurnJuHb
M/NA+BQ86hv99nKcw13V5nK1uU5t2gtfJnytcF3hvvBd4UfV7nK1z/Ws1VR/
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
G2NPbIaernZDRHurNEeWqa83sVnhcbn13jkax2vZKtWu1gg7BR4tvEL0zLg3
2qADq3SM9sKLucd5t+go0U7RLjhN5VCVbVVORT9V2Vqlofp6RX1+j26gdz4p
sY9iEns/6pbP5Pbj3JTbBtok8VhfyVaptbWN0Sf12xvIH+yq3L6fF1X/U+J7
4RXrFm6zkmeh/0Q9f6DaL0TvzWzLMOZ/df0DfAa9XXharH9f+Kr4vu+hSyTm
IzsmtueRMdgkd+kZz6Ori65RmC9eXtj+xw9wneirmX2Nm2b2I+JLwJeIr6ZD
Yl/Q6qr7UHRzlXV0/+tq/3thP9xqqZ81SGXv2Oap3GO+Efkh2i/O/xiVQ1Ra
qeyh0j2xP4V3Ghvf98nc73RP7vtGx3t515Hw2pq/4fj4HZ/OPR+z4zPHx7ni
OafEPlmD4xLLgqm51whr4wmVd/X7HbnXwsi4Hh6L19R/mdgO5bnYEvhn8Hcw
f/ik8M/0ivPeNM49fpQ/4zhHx/HwjqPitzs04pZxPsbGObk5N4//QfRDfCVq
u1nmdx8R1zZ7ETvz75r307C4p1ivrNt3Yv3w2ObgeC/jf1t9rSbaInMb9iTv
jw+nh/BMdIXc3/e83M89Oa4x9ujQxPu0Q8R/1YwHx+eidw6Oa+ZdPWMNdDD8
JLnHgs+ZuTo+sR+xd1w3m0cML3hb7d7BNyTaMvOaGhTrP8KXJNo487fqE9/r
2sT850PsK9FuKp/WrFudLTo1s343SfgKfLrIIuEpwrsho4QnZ5YVtwjflZnX
3ip8d2b5drPwncJL8N0ItxL9DH8NtpLo5yobCW8n+o1KE3SNzPopeupf6mOZ
rpuqvh17XKWZ8K6in6qsK9xc9BW1Wyx8lOi3ut5cuH1m2wRb5ffcdg02Kf4V
bHjsP2yZeaV9a7cG26noGw2RY7l9gSfm9s3eIfxTsNy7RPga9f+G8FLhQbn1
4nOEr1T96+wB4eNyy4fJwjcg49XPYF2fKrlxhvAJwiOjXL1CbW7KrCNMZZzC
bwp/JXw8+zvGDogFoLNvEvV2/MzEEH7R71/yzuj1ol/g8xJuI9pDba4X/jLY
/4zd8bPwJur3EOGhavNujB0cW9gHjhz/LNjvynO/EH462rwH6Pdt0BGEJ+je
bZGxwhPxpaErIY+wo4R31rq6Gl1ctGtiG/V+Xe8iOp29q/e4THhXlfUKywf0
/61Uv7vqHmU9FfbBE0NZFvcS++jjwm2W43eKaxg/ySWJbeP2KlNie/baP3EM
2Oc3RPyJ6hFG3IsdfX1i+fJxzTygY9wv1yWWax/VHDPaJ/KBL3Lz5FNy+6C4
F313cuJ9yB68NbeuuhxdJ7cfDH/Y6/grhZuIfoycFm4q+o9++6Jm/8OrKp8J
Hy3aGr1G+Ey1+URlHeFmou3QSYUvRe4Lfy58TG5/EL6NAfjJYvwI/byNfhuB
DGSNZavCPbUtRLdX/cnCkxBu0b+3uLB/HtmD3BkW3x3ehB5xemJ9+41s1S21
zUV3Yl3DD4V3ED4FPie8M7qF8PnCO7IPhM/NzP/h/fgDE5X2yIfMsqhvlEdj
I98HE1MjLnNgaR0L/n5fYdt8VLQr1lPd+on1qin4YBmb6GSVIjEemjrOhR/7
n+izxXd7aVxLrJ/TNZ56uncHjefw3HrUC8JXFI4XTcbWTOzLRR8akJvOy+zj
xr/6mNp+JbpUpaHK46r/lm+GbarrDRP3i48EvED3Pl/atz9F3+2IKF+o75ja
/sIO+0hlfmK/5QuJfftj1K5ucOwJnxJ2J/7SpzLbl08JP5HZNsUn/CTrTe0e
gncV9hFTf1NhfxS+KGzFv9XmYdanxpUX7ueGwrbss+zZzLb4HOFn4NnY9Ylj
afUS+8bRqx4oLTNP1rvPEG2g+jNFD82taz2ne68qfA/j+Vz0A5U1kZHq89HE
/g5iFnWFp4ouEn0pcSznOl2vJXptpPjVX2bd514L8/EBaQzfwKew4YSfgT+o
/UO59bjbRR/JvX9vyC23O0Q5zjpEL0H3mJObJ9yWW4dCl0K/erjwc/Hr/1L4
m95aOM48PO4f7ALWwjX4ywu/33RsZ/ahxtlZdCX7R3j/zG2wHZbhx9V1G9Xv
x95lnMJ9sGEq2wC3F5b18C50s0p1HdSmr9pMqRwbXqD3fja3DnCL6POJ54u5
ItaK7o0N8lPhfXSz6JOl4xfEMT7j/RN/v89YM4njg1+Izo3fa5Gun0gcCzs/
8kbkAXE/7CT4ykWRDyMPniptJxAzaYP/JXV8dl2Nrzf8UOPfJvWz8FV9LTov
7iniL+iV6O3EklbxE+Gt1f6pxDFXfFvcd4HqW6Qe2/9jrtBzC/vVtoy+tdcK
6wDn4HcsvMeJ2zyemxehb3/G+mcvIquxv5Adoss11q10756Z52yjxDbMe7qu
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
SsfOG0eeTDyPOOBXoh/G/bsC+yx1vsbbpf2wzM9SXX+Uek2/WzqHAB7yfumY
HDzkvdJxdPb+W8GxWvIePy0dc8V+/Kh0bJt9RJ7yLsiL4BzRRPWD9PvEyvLy
2tK5rOuq/nj0+dKxQNbDK6Vzd+BX+E7+S+0/+bh0vJw9eB26EO+T+HzNGcgn
/BbB55vI9fqkdAwY+/Ha1LEH4pZvlM5p4Ju+VjpuxxrjbBF6H3mnr5eOC7KW
3gzOwR5YWLdEdyXv6+3gODV5mPghya/FT4HdgP3QMO5L4rvsx+/U/sGac7GW
BZ/LIP/tE/1+Q+o8/m+Dc9rJPftSdbOjns05oNbovjFeQ/4M59eIocN/8L19
Epx7QH7accFnvsi7+yg4D4EcrY+DcxXIASMmzvk7coDJ38VfyF7YB7+Q6ncT
/bIwP/+icN7uM6l5G/TziN8Iju8fWThPF9sE3w65xvPinDwtuij1ebx31P7K
mnNoZ+l6cWrfJ3nHD6XW/8g7fj7y0AVqf67a91f7Y4LPXpFb2DbKypO1nvYW
Xog/Qfe9EpyfcHhhOxFb4Ah4aum8JWTfr4XjieQlcW6ROGgb+HPp3CxkIuvl
qdTxKnLnN0rty/q9dO7r/th2pX3Newj/VDpOs5fw8tJ+3j2F16icO8L6IX8c
HYq89FPV1zY15ygOiLyLnLqfS+cl7F1Yp/1b+Ez18V3p2DAy9PvScS/k44rS
+aKdhH8oHetCVv5SOvd138JxZXztnD34tXR+bOfC8XjiLWNEDws+/0LuHzn1
/0aeTxxqr9Q56uTz75aa3/VRaVBzfiD5FvDwM3LbqvjiOAuzIlgek9edE1PP
7BvBL7S1fjs75lnXV5s/cp83Ib9v/cJ50IyBfP7Po++PXOhjhTerOV+RMwHo
YOTrHxx8ZoQcxa9KxxHxp80trdeh36FzkqOALfaprm+rOR/1y9L+9B2jTEcH
xff7b+k8jwNVX6ucf3Bw4XMk9IN99E/p/Myeql9ZOv+5m/DfpXM4ewj/VTqf
uTu8sHKeQZ/CZ1KIiZHf90Vp3zf+tyWl83jwcaGfb6DxkCjxX+lck4NUPyr4
vCd5sJ+Vzg3CD/Z56dgbvruRwedDyYlNK+c99IVfBZ8hJd81q5yjcIjqfyud
R70fPKr02TB0qj9K52l3Ef6mdFwWvevr0rFYdLalpeMo+PG+FSb5Et1vbO55
Ig86VM6NOFT1eeUciH7Cq1fOqYKHrFY5n4M9W1XOp2Evk7PN+uUMTVE5lwKe
gF3JeR5sOuwg/E7kL/1ZOqe6K/pacG4SzyUHCR2AGMi84Pwu3p2zA5zr4XwP
a5c1zDW5U/Xi+uSsE7rnTcHxcvx+nJch77dtlHfk+C9LrVsQMyZ2zJkXcrSw
Wf7MrYdhV6KXYbNhu03MfaaGHHLO7XDGGZttC9Z+cJ45mHOU5MES4yY3Br0K
HnGffr8+9RlT5MnXUaagF1U15wyT+8EeHVx5DOiE+MCIDxJnJP5PDiq+CfIx
sUfw8eCP5Wwv8RTiKuTzMO/E/zl3ck/qvBNye8gZIHcgw55MHYMkBsuZSfJM
tg8+ewm//Vn0m9T2MrFgdFDihMQgsJ/Ia8I3NySOc2Vwfi+5zeQwkGdCHi75
JOQ2kEf8V/A5U3KbyfMgT+Os3OfpzmFdVT6nhV+CfGTyD5DV5KhwTm9ZtF+I
YeNX3CA4b4VYe8Mo38H4VPtGXRk9+fHU73xQ/H1pbENMje/M+ZWO6mu58Fu5
ZeNPUT7iO8KnwLkuYs0N0qgjpZ4j5oe8Rfwp+FKIs9P/0tz+HGyP/3LH6YjL
E5//U/d9l1o3Qt5x3o3zR/gT1lfd2qVtYXxPnFXC1wSPOabyGcOz2XeVz05O
Qj5UPoeHbolc4EwYPpkmuqd+5vxvcho400tslzxhYu74pZEx8AHORfyUO1cA
/y+xAPS4b6Muh5z6fz7sk6llBvLi69w+Jd6Xs3Wc12ocfJaQfDny5uYH523C
T8iLxgdH/vWjqc84kWdKriPj3bvymcUidR7RzOBcPmQo/mb8zvjBz6rsE2Gu
OL+N7U4s/sjSZ5Q4q4QdiO6MjnR7cB4gMpezgvRJzGZucL4oPH934d9U10H0
2eC8Nfj5ZdF+IwZPrGFCzbLmmeB8wgOjLOOc2YWV86OYg52ELxftV7O+cVlw
TiM6CecsyfnDR8fZsllR11qSWidDH3s+OK8VudA1ticng7OuxE+IQ3EemT0x
rvK5tJmp/Rk3YPfUrKtwbh2b/vLKuWHsdfLTsO/JBcc3QLxyYM06Et8ZPZa4
P7FI8h3XCM5nxh9Hbg5nuHpFXRQbcla0rfmvi9E1y9xbUp9pJwf9vuC8PuQU
utvKqL9xhqt36jOY5LCRG8f6Jq+M/DP4wpBoY3KGBV4Fz+LMz4mRd4HvDM4/
RHdqF/nhHsFnvzjPM7PmHAb2Kvng5HrNqzmPnpwuePwJlXOxyJljX9WNOhL6
Pblb8Kqhlc/w3Zs6Voofm/+0uKTy+uG/OPhPDv774pjUutQjwTmH6BgPBecW
ooeQU/Sz+hymex8Lzj9EJ7k3ONcRPfbu4NgWcv+B4HxF5Cb24h+pbUbOMrMn
2Y+cMSWfh3zv03KfyeQZnH3kjANnGTqpnyfi/JA3xb4/sXJ71iPnRKenPv/G
2bc74BWp3+1/kFx6dg==
           "]], Polygon3DBox[CompressedData["
1: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
3MkzvYT+/zV8jByG+/u+5Za93tWNlY03O9nGbeVw5XLlbxaqE/Ma++6ofgOv
W0deXZ9RXV1H3om+QXVyFuYudpCDcW7WkV0/cuWfleHKXVNrefwq9yKHLF+s
vXUuDG6eh8ffGXkp3tcNVfhtuW457/7IR5fhK8oifMT49E3SiY0yX2Q86rs1
RjNW27FI/GqMaX5AfaO/tyT9a7P/C2X8uyXAa6mPi8Szzt9z2H77IrGr8+1s
bTPbPMzvI/qI7DvEOSnmnFvV4fTl6Q9o8NTgabrh7OTuti2SfzHGNqci/323
/mInXP02RbgTY/jjuolTXLuu4ZnY/wXuaVQ7ua6NOPavrkHG12e/wcb/4JvA
a4A3AL8NvgS8QhH/9QvwzeA1wYMa+2y+by3whj3xo9UNznfn/Vu0i52/jK/D
+O/gB8GDwJuAt+N3dCs5u+nL5ItcO74T340cnVzdD+DtjI9o1+tPdpNP2a4K
d7kofXMw9kmZ2FsfVV/1lzK5jbk6ybfMVCe30a/h59RH5krMEZorNIdoLtEc
pLnIp6twCfqw+rKeT25MHWlsYo7MXJnX3685vtyfc9TY3fXiWpTvHIx8BNsX
zTVOW6cpT894b+Txjc86yYm4nvSR9JW8xie8XtpL6kPOeaSxE+OHFuGcXP/r
18kF7NysL3NK5pbU+U+Cp6tzLjkKuZLpwVeybx/6+iCPLsM1apPMJzmur6LP
8l0Zf0A+rirCfx1fho8bpwifdGAZPuXvhq+6kf43wMONCZH3of0DHgZeWFvY
jW5Vxw4ssn7Ux9e3wwm5/tTHN7bDIZmzcj2PAX/e+P+/tpLjM9c3pmjGaF8U
yc8aTzxZhO8xhjCWGEy7ybXE+NvInxbhE4wv5gEfQLu/SDzVvx0OSC5IP1p/
2pjDfKL+8SzIO9LuRL6Q1redmMzY7CDalsircX/Tuq7BW4BXBU8Dvg28lf62
9gX5DP1u4y/1P+PXgl/n/oYaYyPfVSSXth5t7yLx4nzGkrQHi8SHC7XDUclV
7VXk/ozhjOXMTxtPXe+19SSH8zbnuqKT3M5HtFsZf9V9e+KPyNXc0U7OZvci
sf494DeRb6jDt8q77tuT5/8M448072dYES7gvnY4+0+q8KkfFuFXPy7Cxz1E
3yfIH5eJD40T92b8M7a/lGtb1mfXEw5WLvatZnvz58ZzxnWH9CRPbr78d9oP
RfLpxn/GgQf3JKY0ttxQjkqfkPZLOzGz/N5PbP8z8rfIh+p/F8Fu47bGnMae
5ui/KnL9Xos1AHKKxuzG7ub0vylyDV6LMbt84c3qPWM72gPI59COaWdOyP+p
382XX9VOjt054lz5A7y/PjG4dyc5Xvl59YfYfnWLc8y59rfnKMIpyC04x+Qn
rRnQn9D+92bbLbuxxdpo7faCZfLarknXpjpF38Lcorrmxm50hfmS1Yr4uNpq
bbZ2fLI6vpN59cPZfqg8ZCc5SvO145fh6+bWPyqjY7XfMxT/X7+hLZ67iG7V
J9Z31YedrIyPZX66TxnfS99DX0Cda/7ogjq+n3UnIxr/Wi5S/aceXKCOL2Ae
XL5QvqEf9zo+fb8WWZ/WDsjJys26PsxFmpMcyD5Llbn3K/U3yqzvoh3OWO5Y
vmIOuQna00V8Un3T6YvUt5ynPmtHJ8gvu/7fb4VDlks2/rf25dJ26mW053Lp
V4CfL+JD6Evow+rX6l/IxV/bDqf+NOPntcORbFXEdprvGqVPyfU+w/j57XBM
QxibvYxvp086h7FnHV/LOObkxhex3mB0J7UEi5bJQ1ujMWEZfW6uTZ2kbtIW
mktaq7Hn2ndlffh/i8QIG/v+isQO+s7mv5xTzi19UueL80ZfVR5FX1cft1eR
GqCfisxva4OW8D0yNqAd/kuOTq5OTuHuMjGr3Kc2S9tlDChXKkdgbGiO09yN
Mb2xvTG+3KAclrG/HIHcpRyC3IGcgtzrVq1wDebEzI3JGZj7NcdsLYCcgLln
c6LmRuUYzF3LKcstW5NjrtkaAHNJxvjG+nLEcsVy0Oae5bDlsuWYzT3rE+or
rlTGV5RjlmuWIzfXLGcud96r8ReXcb2x/d3GF2WacsU2A8pw2nLbctbWxpjT
M7cnh25uXE5cblzO3Ny0nLncuZy4uWk5b7lvOW5zv3L0cvVy+Oa6rZmwdmJg
K7VPcirmHuRg5FrkmeSb+rRTE+Y1e+3PduP76iPfBt64iO98fBG+cvp2asLM
r/Zj/KNu6puOKcJfTtdOjdNBZfJf/3STLzu4TD7o327ybfI3K4P/103+Tv7w
VvBg9p2yJxyutR5yCHK76i99SWtmpixj38xHm8N4p9nnoW44SI8lJ2QuxXN4
Ljkma03klOSe9I/0Rfaj3VfE3mub9qLdW2SOOFde6abebFCZeqe3uqm32rxM
fdSH3dRbmf/tC367m/o27fWPrXDybxfhrOWu5VjuLJMjHlt71cq+5vTNxcop
yS3JwZgbOrIVbkbOX+5fDuWmMjkBcwNyLreUySGYSzBncUMZTs/ckRyIXJ8x
t/rLnJX5XTmka7vhMOQy5Fyu74YjkYuRU7mhG85PrsUciLkQOaXrynAy5tYu
bYWrMadhbkNO6poyORBzIfIRV5XhnMyNyanIRck5mRs7ohUuSg7rpCZmktuS
wzKGkq+Qz5BTMvd1WCtck5yWuS85KbkucxrmNuS4biuTQzCXIMc1qgznZC5s
RCtclDkWcy1yIFeUqZGw1mbGVmon5DytpTTGMtaS87yzmzUhF2qNhLVKM7dS
O2FO39qmWVrJ9VuTYq2PNTDWqljDYK3RTK3UNlgTYG2QNTXWClhTYu2UOQxr
TawhsXbKmh5rS6yZsTbIGhdraaw5sXbIGitrUaxxsBbINenalOO6o5s1Jfdl
zYO1QNaYWAsh52ZuRs5NLq6niSGNr+Sb5PjOb2JKuT85XHOfO7TC7RofzVwm
vpWvkgM0F2OMbqwuZ2auSM5SLk3OztySnIb8lZyOvo71I+aX5ZzNHcn5yUXL
2ZlbkuOTy5MTV2dZwzpOFX/kqlY4tLnr+Mz6zl/Rd1CVei1rB7/ppFZOH9ba
wnfa8W1HV5HH1R/yeLTv24lBJqkSk5jrfLKVWGW/nuRJzJd8LNdVRTb/YaGQ
+eDx2qmh+KLJr+ov63Pre19aJZf9E+3HKj6JeQbzDfoq8k+btGKD5ZusIbWW
1ByBuYKfab8iL6APUsVHNufwQiu+c8k+43QSwxrLvkb7q5W+Sq6iSm2sNbHW
xv5Q5VqMYSZFHqnO6KTm1nqCW6rUblrza+3vG76jdmoCrA0wP2Yu3mv6pUoN
rbW0PsPvkM+XX2sn5rEe92jaD63krN5DPsrn3QqH8m7Dh37Xio/p+zRnZdxp
/Gn8fx/XN247NSXWR8xcJZdX006vktM1r2ffaeBTquTfZjTmqsJfWetojDhe
lXj8i1Z8eOP/A6vMHX22t6rk2Iy7jL/kM4xxvi4SXxj7nEf7rJ0Y1/pjYzrj
XuNfY70z5SPbqZ+yHtMY2DjFeMXYuBftHORT26lPPpj2dSsx4Nu+X9o3rcRk
7/guqvi2g/Rfq8RUXxaJh4y1rOEwbjd+lx/VR9NXW5g2RZV8sbWc1st+KLfM
9g90k1O6Wd8AfH83HNFN2krwfd3kuG6swzFYu7JCK9yDz+vFdvi6p5zbVWJJ
OQHzz9YHGIu6Bqwv+LBM7cWLzfPt0h5rh1Ow/tWci7U55ljMxZiTsbZmQCu5
GjnDDRp/TS5RjsPaHHMuch/moKwl0ecwN2VO0NokORJzhfog1u6YI9I3Maez
UqNf9f/MwazY2F9zM3Isgxr/Sf9VH2XNxr/Un9CHWaPxX/VtjN/lp19q3p/1
3saOC9Imd+6XqXV/tZn/vm+3tabmWeQPqsQ79zbv56cysbs+hPUc6redipzD
c8mPuTacw9bb/FiGG3CNWd9hDL9zEQ7N2F4OTC7M+sz56mwvvzCWQ6jC3znX
nXPWz1gzLs8p3ymfbj2SsdHHrdQXWb9kbPRpK/VIzteX2+G3rMXxnJ775Wb+
WiN8tbamWe+uf2U50Rca/fVEKzUm6is5Cv26Bxr9Kf/v3P68lfoja+h/LPKM
fdaPVYnFxrRS36O+8Vlb82LtizWL8iA+00fq1EAZt7nPQ3Vq6o37jf/NR8j5
yP0Yo8pXyDHJNalTzcfLqcmtGXPKZ5nfN9evzjkH+Z8qvrL26u8q3wfoa7+i
z4t8ax1fVZ/V/P/OVXwtfTB9MfmsAc3xrCWQE5Mbe6uV+FLOSe7p7VbiyVF1
+B91kLpo1yq2Xx9GX2ZoFd9Fn0DfYDfw7a34NPo22lS58ROL2Frru0Z7rQ2f
4Pcavit1lPUDo4yZ2+EU5cOs/9f395uRP5B3cX604kPqS+5YxVfU59T3lO/U
F5irTLx7YR3fVR/W/PpFdeqbTumG37+2Dv99ezf57yvq8OPXdMOHX1anfuWq
bvJvl9fhv6/uhk+/pg6/fls3/PdVdfIbt3TDv19dJ393azf5/Evq1ANd0A1/
bj2o3Ikxx/Hcy5V1fGfvR/793Dr1BvuBVwOfUydfuK8xl75undjVGHZFfdk6
9Q3DwcvrG9eph9hDHauvWqceYpgxkLFAnfqjvcAr6dvXqX/Y2xhH361OfcP+
4NX13er4avpsa4DPrpNf3scYSN+sji+sT2w+ZRj39GgrORLjvd2b+eD8NLa6
pY6teLCb+pRRjG/cjg3Tlt1UpTZejtbah7E1LkXWhGtDH0lfSRtkvZLf2Pit
jce4o0qNnXUR1kec3RxPrtXvESZEHrfK2jFmvbZKzYRxa5/GP9In0jeSM9Qf
Uueqe+Ukf0WeirZ4O9/ouP70b9ZvZw6fW+WeHmziR2txhjTxpM/AWp3bqthe
bb62X39K262Po69jjZAc6Nj6xCo2V9vrNzGuhymr1Cr+044+OKvKvT7G8f9l
DVxQpVZGm6httGbOuhn7LqzyvP2WabLmeVlTck2RZ+Tz9vsddaffnMgPbVon
l7VMo++tD9SW7FaEL7ZeTFutT6tve3GVfJQ2X9s/sort1yfQN/D+/dZKHaP/
cW+dehd9UH3Ry6r4DvoU+hbaVG3rH91wLdbQWAsrB2BtjfrRZyGHd3UVf/T5
Vo6pf6w/bv2gHLP+pNdn7ZB91hbq3/nsrKlR33q91t54jLIKXyVPoQ6+v45+
UxfLYfg+9af1na2Z0X/tqaK75DCuaOyLPIY67b4692dtjftUVWo0rIW2Bsba
DfPZ2g51pvWw1hz57ZY1OtYiueZce+qEW8usWdeua/LmMjUC8q3WnKtf1Enq
JnWSuUJzhkOL+MzaS3WKukWdc3uZHJJc3tia9jo6SF2kTrijjI5R16hjri6j
U09p4mFzqeqM/Zv47q4yOkhdpM66tozOUnepg64vo5PUTeqwK8voJHWTOunG
MjpUXarOtVbKmglrv62pspZCHawuVqebm5yzTi7RbyKsj7CG67ciHLW5Zmtm
/Nasbyu1NNbU+O1cn1ZqbazBWbSJ3+VPtAHaAm2AtRnaAG2BNsNcqzZD26EO
N7dqjvXCJn4196qNub2J/629sqZtVBNPyy+pM09t+AjjXb9B8FsEdfbjdWpC
LmriX/kVbYi2xJy1uVlthrZDmyi/YE3TMk18Lh+qzlZ3W3N8T5kY1Vh1bM6s
SrxzSJFvAqxt1b+ZvAxfb+2J8a65mzc7+Z5OTldu1xqGR+tw8HLx+uidRv+O
KJKjNX9qzsHcgznNMxp9Yw7OmPD2xn/ygz7zh9ZqqEM+KMJ3qVvUMeamrKd5
qfFHzS3pPxxSRUccVWRNubbUMUcWWcMjG/13eBGd5Hq3vmH+MjVd1vpbvzBf
GZv8c+NDyJ2bQx3drBdz7frc19eZT3LafjPyYJ33NWMZTtxvSSaqkovQJvh9
qzZH2yOH4PdefvPRtwwfbu2H9S3/FPGB9YX1kcy9WK+g72ROyNyQOetp6tSj
9CuTMzd/rY49oohOU7fp8+j7yO/JTxlvmltTn91TJ6dibkUfXF/c/PKcZfIH
1rYYD5prUz/eXacGzW895SitTdupHhuej61pkN+1hs1vL6xJs7bNGku/DbFG
w9pLazL9tkT+3lpN799vX6yRe6wO5+m3pnKkcqHWbPrtgzV11nJak2jt/8qt
1CrKofrtrt94ya3KkcqXy1fLf1qzKl8rPyv/b42n+QPzBfL9cszy9/Lz8lvW
+Pltar9Wav+s8fNbD2vurP2zptN8gvkD+SprPv02xvyCtaByuH47K+ctt/t/
t+ufZA==
           "]], Polygon3DBox[CompressedData["
1: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
           "]], 
          Polygon3DBox[{{1604, 1055, 1270, 1983, 1442, 1443}, {1605, 1056, 
           1314, 1989, 1444, 1445}}]},
         Annotation[#, "Charting`Private`Tag$725998#1"]& ]],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], 
      Line3DBox[{794, 1, 1353, 16, 1367, 31, 1382, 46, 1397, 61, 1412, 76, 
       1709, 317, 622, 91, 1849, 581, 265, 518, 1441, 106, 475, 266, 1468, 
       121, 267, 1481, 136, 479, 268, 1887, 725}], Line3DBox[{796, 2, 794}], 
      Line3DBox[{798, 3, 796}], Line3DBox[{800, 4, 798}], 
      Line3DBox[{802, 5, 800}], Line3DBox[{804, 6, 802}], 
      Line3DBox[{806, 7, 804}], Line3DBox[{808, 8, 806}], 
      Line3DBox[{810, 9, 808}], Line3DBox[{812, 10, 810}], 
      Line3DBox[{814, 11, 812}], Line3DBox[{816, 12, 814}], 
      Line3DBox[{818, 13, 816}], Line3DBox[{820, 14, 818}], 
      Line3DBox[{514, 15, 513, 316, 820}], 
      Line3DBox[{1380, 30, 1683, 263, 514}], Line3DBox[{1395, 45, 1380}], 
      Line3DBox[{1410, 60, 1395}], Line3DBox[{1425, 75, 1410}], 
      Line3DBox[{1439, 90, 1425}], Line3DBox[{1466, 105, 1439}], 
      Line3DBox[{1480, 120, 1467, 1466}], Line3DBox[{1492, 135, 1480}], 
      Line3DBox[{645, 151, 481, 1685, 269, 166, 1518, 181, 1533, 196, 1708, 
       290, 663, 655, 651, 357, 653, 320, 649, 1339, 659, 656, 661, 657, 652, 
       654, 664, 650, 660, 658, 662, 293, 1222, 402, 211, 364, 295, 403, 212, 
       368, 1172, 297, 767}], Line3DBox[{1502, 150, 1492}], 
      Line3DBox[{1516, 165, 1502}], Line3DBox[{1531, 180, 1516}], 
      Line3DBox[{1546, 195, 1531}], 
      Line3DBox[{405, 213, 1211, 373, 299, 407, 214, 1212, 377, 301, 409, 215,
        1214, 380, 303, 410, 969, 216, 383, 305, 411, 970, 217, 386, 307, 
       1226, 412, 218, 389, 309, 1227, 413, 219, 392, 1176, 311, 414, 220, 
       395, 1178, 313, 415, 221, 1221, 398, 315, 416, 222, 397, 314, 1560, 
       210, 1546}], Line3DBox[{405, 668}]}, {}, 
     {GrayLevel[0.2], 
      Line3DBox[{1353, 1898, 2073, 1352, 1994, 1561, 1354, 1995, 1562, 1355, 
       1996, 1563, 1356, 1997, 1564, 1357, 1998, 1565, 1358, 1999, 1566, 1359,
        1899, 2074, 1360, 2000, 1567, 1361, 2001, 1568, 1362, 2002, 1569, 
       1363, 2003, 1570, 1364, 2004, 1571, 1365, 2154, 1682, 1572, 1683}], 
      Line3DBox[{1367, 1900, 2075, 1366, 1901, 2076, 1368, 2005, 1573, 1369, 
       2006, 1574, 1370, 2007, 1575, 1371, 2008, 1576, 1372, 2009, 1577, 1373,
        1902, 2077, 1374, 1903, 2078, 1375, 2010, 1578, 1376, 2011, 1579, 
       1377, 2012, 1580, 1378, 2013, 1581, 1379, 2014, 1582, 1380}], 
      Line3DBox[{1382, 1904, 2079, 1381, 1905, 2080, 1383, 1906, 2081, 1384, 
       2015, 1583, 1385, 2016, 1584, 1386, 2017, 1585, 1387, 2018, 1586, 1388,
        1907, 2082, 1389, 1908, 2083, 1390, 1909, 2084, 1391, 2019, 1587, 
       1392, 2020, 1588, 1393, 2021, 1589, 1394, 2022, 1590, 1395}], 
      Line3DBox[{1397, 1910, 2085, 1396, 1911, 2086, 1398, 1912, 2087, 1399, 
       1913, 2088, 1400, 2023, 1591, 1401, 2024, 1592, 1402, 2025, 1593, 1403,
        1914, 2089, 1404, 1915, 2090, 1405, 1916, 2091, 1406, 1917, 2092, 
       1407, 2026, 1594, 1408, 2027, 1595, 1409, 2028, 1596, 1410}], 
      Line3DBox[{1412, 1874, 1875, 2193, 1411, 1918, 2093, 1413, 1919, 2094, 
       1414, 1920, 2095, 1415, 1921, 2096, 1416, 2029, 1597, 1417, 2030, 1598,
        1418, 1922, 2097, 1419, 1923, 2098, 1420, 1924, 2099, 1421, 1925, 
       2100, 1422, 1926, 2101, 1423, 2031, 1599, 1424, 2032, 1600, 1425}], 
      Line3DBox[{1439, 1602, 2034, 1438, 2112, 1936, 1437, 2111, 1935, 1436, 
       2110, 1934, 1435, 2109, 1933, 1434, 2108, 1932, 1433, 2107, 1931, 1432,
        1601, 2033, 1431, 2106, 1930, 1430, 2105, 1929, 1429, 2104, 1928, 
       1428, 2103, 1927, 1427, 1988, 2102, 1857, 1426, 2194, 1684, 1876, 1878,
        1877, 1709}], 
      Line3DBox[{1441, 1793, 1794, 1723, 1801, 2163, 1603, 1800, 1799, 1831, 
       2182, 1604, 1443, 1862, 1863, 2189, 1605, 1445, 2035, 1606, 1447, 2036,
        1607, 1449, 2037, 1608, 1451, 2038, 1609, 1453, 2039, 1610, 1455, 
       2040, 1611, 1457, 2041, 1612, 1459, 2042, 1613, 1461, 2043, 1614, 1463,
        2044, 1615, 1465, 2045, 1616, 1467}], 
      Line3DBox[{1466, 2125, 1947, 1464, 2124, 1946, 1462, 2123, 1945, 1460, 
       2122, 1944, 1458, 2121, 1943, 1456, 2120, 1942, 1454, 2119, 1941, 1452,
        2118, 1940, 1450, 2117, 1939, 1448, 2116, 1938, 1446, 2115, 1937, 
       1444, 1989, 2114, 1861, 1442, 1983, 2113, 1858, 1860, 1859, 1440, 1987,
        2187, 1851, 1792, 1848, 1847, 1849}], 
      Line3DBox[{1468, 1766, 1767, 1725, 1802, 1948, 2177, 1724, 1650, 1726, 
       1805, 2164, 1617, 1804, 1803, 1832, 2183, 1618, 1469, 1864, 1865, 1619,
        1470, 2046, 1620, 1471, 2047, 1621, 1472, 2048, 1622, 1473, 1949, 
       2126, 1474, 2049, 1623, 1475, 2050, 1624, 1476, 2051, 1625, 1477, 2052,
        1626, 1478, 2053, 1627, 1479, 2054, 1628, 1480}], 
      Line3DBox[{1481, 1749, 1768, 1651, 1728, 1806, 1807, 2178, 1727, 1652, 
       1730, 1808, 2148, 1809, 1729, 1653, 1731, 2179, 1812, 1813, 1811, 1810,
        1833, 1629, 1482, 1990, 2055, 1866, 1630, 1483, 2056, 1631, 1484, 
       2057, 1632, 1485, 1950, 2127, 1486, 1951, 2128, 1487, 2058, 1633, 1488,
        2059, 1634, 1489, 2060, 1635, 1490, 2061, 1636, 1491, 2062, 1637, 
       1492}], Line3DBox[{1502, 1644, 2067, 1501, 1643, 2066, 1500, 1642, 
       2065, 1499, 1641, 2064, 1498, 2131, 1954, 1497, 2130, 1953, 1496, 2129,
        1952, 1495, 1640, 2063, 1494, 1639, 1868, 1867, 2190, 1493, 1638, 
       1834, 1818, 2180, 1819, 1821, 1820, 1740, 1657, 1737, 1817, 2151, 1985,
        1738, 1656, 1734, 1816, 2150, 1815, 1735, 1655, 1732, 1984, 2149, 
       1814, 1733, 1654, 1769, 1750, 1887}], 
      Line3DBox[{1516, 1647, 2070, 1515, 1646, 2069, 1514, 1645, 2068, 1513, 
       2135, 1958, 1512, 2134, 1957, 1511, 2133, 1956, 1510, 2132, 1955, 1509,
        1871, 1870, 2191, 1508, 1826, 1869, 1825, 2181, 1991, 1507, 1853, 
       1667, 1835, 1666, 2152, 1836, 1506, 1665, 1741, 1664, 1754, 1505, 2166,
        1663, 1739, 1662, 1753, 1504, 2165, 1661, 1736, 1660, 1752, 1503, 
       1992, 2195, 1894}], 
      Line3DBox[{1518, 1822, 1824, 1823, 1852, 2184, 1517, 1837, 1668, 1880, 
       1885, 1669, 1897}], 
      Line3DBox[{1531, 1649, 2072, 1530, 1648, 2071, 1529, 2141, 1963, 1528, 
       2140, 1962, 1527, 2139, 1961, 1526, 2138, 1960, 1525, 2137, 1959, 1524,
        1830, 1872, 1829, 1873, 2192, 1523, 1856, 1675, 1838, 1674, 2153, 
       1986, 1522, 1673, 1744, 2168, 1965, 1757, 1521, 1672, 1743, 1671, 1756,
        1520, 1964, 2136, 1742, 1670, 1755, 1519, 1879, 1895}], 
      Line3DBox[{1533, 1686, 1687, 2155, 1532, 1827, 1828, 1855, 2188, 1854, 
       1534, 1839, 1881, 1840, 1884, 1890, 1889, 2196, 1993}], 
      Line3DBox[{1546, 1706, 1705, 2160, 1545, 1703, 2146, 1970, 1544, 1701, 
       2145, 1969, 1543, 1968, 2144, 1699, 1542, 1967, 2143, 1697, 1541, 1966,
        2142, 1695, 1540, 2157, 1693, 1692, 1539, 1679, 1841, 1843, 1842, 
       2185, 1538, 1678, 1747, 1762, 2167, 1975, 1537, 1677, 1746, 2169, 1761,
        1760, 1536, 1676, 1745, 1759, 1758, 1535, 1892}], 
      Line3DBox[CompressedData["
1:eJwVzVsvwgEYBvC3abgKhdz6RG0uuau5s5p7h75GbNaamc0FoVQOHwhRJDn7
dfHb++x5/oflfGmlmIiIHEuTEb/8ccIPm9MRd1MRWfmLb4651ZVsn/IiIz44
4sZWtL3LC7wxpKA7dAe8Ms8LZf21d2pynx4ZOrpd27Nc5Ykuadq2HdujfECT
BnO0SNrb7j6XPLDt+YZ+Vj7ngr3xf7hny960z8hnTMh1tzL+hrxhv5JPSbGq
W2Odf0lpNMw=
       "]], 
      Line3DBox[{1685, 1751, 1850, 1658, 1888, 1659, 1896}], 
      Line3DBox[{1708, 1680, 1688, 1710, 2162, 1971, 1547, 1681, 1844, 1846, 
       2186, 1845, 1548, 1797, 1798, 1748, 1976, 2170, 1763, 1549, 1764, 1765,
        2171, 1886, 1891}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{794, 2073, 971, 795, 2075, 984, 822, 2079, 998, 836, 2085, 
       1012, 850, 1329, 2193, 1026, 864, 1152, 2194, 1330, 1331, 1040, 878, 
       2187, 1308, 1309, 1271, 1272, 1054, 2163, 892, 1123, 1228, 1273, 2177, 
       1068, 906, 1124, 1229, 1276, 2178, 1080, 919, 1127, 1231, 2149, 1280, 
       1090, 931, 1332, 1333, 2195, 1234, 1349}], 
      Line3DBox[{796, 972, 1994, 797, 2076, 985, 823, 2080, 999, 837, 2086, 
       1013, 851, 2093, 1027, 865, 2102, 1313, 1041, 879, 2113, 1270, 1055, 
       2182, 893, 590, 1275, 531, 2164, 907, 1125, 1230, 2148, 533, 920, 1128,
        1232, 2150, 538, 932, 1130, 2165, 1235, 545, 943, 627, 781}], 
      Line3DBox[{798, 973, 1995, 799, 986, 2005, 824, 2081, 1000, 838, 2087, 
       1014, 852, 2094, 1028, 866, 2103, 1042, 880, 2114, 1314, 1056, 2189, 
       894, 1274, 1069, 2183, 908, 1310, 1126, 1277, 1278, 2179, 1279, 921, 
       1129, 1233, 2151, 1281, 1282, 933, 1131, 2166, 1236, 1286, 1287, 944, 
       2136, 1134, 1179, 1290, 1291, 954, 1346}], 
      Line3DBox[{800, 974, 1996, 801, 987, 2006, 825, 1001, 2015, 839, 2088, 
       1015, 853, 2095, 1029, 867, 2104, 1043, 881, 2115, 1057, 2035, 895, 
       605, 1865, 606, 534, 1833, 565, 232, 1740, 432, 1741, 236, 439, 1743, 
       240, 443, 1745, 244, 638, 707}], 
      Line3DBox[{802, 975, 1997, 803, 988, 2007, 826, 1002, 2016, 840, 1016, 
       2023, 854, 2096, 1030, 868, 2105, 1044, 882, 2116, 1058, 2036, 896, 
       1070, 2046, 909, 1315, 1316, 2055, 1317, 1318, 1283, 1285, 2180, 1284, 
       1296, 1297, 1132, 2152, 1237, 1133, 1238, 1245, 2168, 1135, 1239, 1136,
        1241, 1246, 2169, 1139, 1180, 1140, 1252, 1190, 1154, 2156, 1193, 
       1205, 1142, 1208, 1143, 1334, 1342, 1347}], 
      Line3DBox[{804, 976, 1998, 805, 989, 2008, 827, 1003, 2017, 841, 1017, 
       2024, 855, 1031, 2029, 869, 2106, 1045, 883, 2117, 1059, 2037, 897, 
       1071, 2047, 910, 1081, 2056, 922, 1319, 2190, 1320, 1321, 1322, 1323, 
       2181, 1289, 1288, 1299, 1300, 1301, 2153, 1240, 1137, 1242, 2167, 1247,
        1248, 1243, 1250, 1249, 1253, 2172, 1223, 1269, 1224, 1171, 1195, 
       1209, 1194, 1211}], 
      Line3DBox[{806, 977, 1999, 807, 990, 2009, 828, 1004, 2018, 842, 1018, 
       2025, 856, 1032, 2030, 870, 1046, 2033, 884, 2118, 1060, 2038, 898, 
       1072, 2048, 911, 1082, 2057, 923, 1091, 2063, 934, 1324, 2191, 1325, 
       1326, 1327, 2192, 1328, 1293, 1292, 1303, 1304, 2185, 1305, 1244, 1255,
        1254, 1256, 2173, 1196, 1225, 1197, 1173, 1199, 1210, 1198, 1212}], 
      Line3DBox[{8, 1359, 23, 1373, 38, 1388, 53, 1403, 68, 1418, 83, 1432, 
       98, 1452, 1453, 113, 1473, 128, 1485, 143, 1495, 158, 1509, 173, 1524, 
       188, 1539, 452, 203, 1553, 408, 300, 375, 1200, 1214}], 
      Line3DBox[{808, 2074, 978, 809, 2077, 991, 829, 2082, 1005, 843, 2089, 
       1019, 857, 2097, 1033, 871, 2107, 1047, 885, 2119, 1061, 2039, 899, 
       2126, 1073, 912, 2127, 1083, 924, 2129, 1092, 935, 2132, 1100, 945, 
       2137, 1108, 955, 1155, 2157, 1117, 965, 2174, 1257, 1258, 1174, 1184, 
       1213, 1121, 969}], 
      Line3DBox[{810, 979, 2000, 811, 2078, 992, 830, 2083, 1006, 844, 2090, 
       1020, 858, 2098, 1034, 872, 2108, 1048, 886, 2120, 1062, 2040, 900, 
       1074, 2049, 913, 2128, 1084, 925, 2130, 1093, 936, 2133, 1101, 946, 
       2138, 1109, 956, 2142, 1156, 1118, 966, 2175, 1259, 1260, 1175, 1185, 
       1215, 1122, 970}], 
      Line3DBox[{812, 980, 2001, 813, 993, 2010, 831, 2084, 1007, 845, 2091, 
       1021, 859, 2099, 1035, 873, 2109, 1049, 887, 2121, 1063, 2041, 901, 
       1075, 2050, 914, 1085, 2058, 926, 2131, 1094, 937, 2134, 1102, 947, 
       2139, 1110, 957, 2143, 1157, 1119, 967, 2176, 1261, 1144, 1262, 1186, 
       1216, 1187, 1226}], 
      Line3DBox[{814, 981, 2002, 815, 994, 2011, 832, 1008, 2019, 846, 2092, 
       1022, 860, 2100, 1036, 874, 2110, 1050, 888, 2122, 1064, 2042, 902, 
       1076, 2051, 915, 1086, 2059, 927, 1095, 2064, 938, 2135, 1103, 948, 
       2140, 1111, 958, 2144, 1158, 1120, 968, 1263, 2147, 1145, 1264, 1188, 
       1217, 1189, 1227}], 
      Line3DBox[{816, 982, 2003, 817, 995, 2012, 833, 1009, 2020, 847, 1023, 
       2026, 861, 2101, 1037, 875, 2111, 1051, 889, 2123, 1065, 2043, 903, 
       1077, 2052, 916, 1087, 2060, 928, 1096, 2065, 939, 1104, 2068, 949, 
       2141, 1112, 959, 2145, 1159, 1160, 1161, 2158, 1265, 1146, 1306, 1147, 
       1218, 1201, 1176}], 
      Line3DBox[{818, 983, 2004, 819, 996, 2013, 834, 1010, 2021, 848, 1024, 
       2027, 862, 1038, 2031, 876, 2112, 1052, 890, 2124, 1066, 2044, 904, 
       1078, 2053, 917, 1088, 2061, 929, 1097, 2066, 940, 1105, 2069, 950, 
       1113, 2071, 960, 2146, 1162, 1163, 1164, 2159, 1266, 1148, 1307, 1149, 
       1220, 1202, 1178}], 
      Line3DBox[{820, 1150, 2154, 1151, 821, 997, 2014, 835, 1011, 2022, 849, 
       1025, 2028, 863, 1039, 2032, 877, 1053, 2034, 891, 2125, 1067, 2045, 
       905, 1079, 2054, 918, 1089, 2062, 930, 1098, 2067, 941, 1106, 2070, 
       951, 1114, 2072, 961, 1165, 2160, 1166, 1167, 2161, 1267, 1268, 1177, 
       1204, 1219, 1203, 1221}], Line3DBox[{295, 365, 251, 2171, 1345}], 
      Line3DBox[{1172, 1337, 1344, 1338, 1343, 1350}], 
      Line3DBox[{1222, 1183, 1207, 1182, 1170, 1141, 1251, 2170, 964, 1295, 
       1294, 1336, 1138, 1335, 2196, 1351}], 
      Line3DBox[{664, 321, 1169, 579, 2186, 963, 1116, 1302, 597, 2188, 953, 
       596, 633, 786}], 
      Line3DBox[{1339, 1340, 1206, 1181, 1168, 1192, 1191, 2162, 962, 1115, 
       2155, 1153, 952, 1107, 1298, 1312, 2184, 1311, 942, 1099, 1341, 
       1348}]}, {}, {}}},
   VertexNormals->CompressedData["
1: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
6jCM4kgtMv1K8YcvYM+tir6sHI49V9oub/k6lwdc++oSPKW2gB60K6QIl2D3
ei5V2nfSDrrV1R8LDagj2ivPZv7X69MfG7VmSttkKC1HRVqlFtDd9shj57sn
oLPjmLNgrSPsObB518VlAQ3sowkVsZwAWrO1vrpUC8iJR+ZX2dTRCF57+/99
Fuz97OQoqTJquxdeChktoHC5WN5rYRPYvTGzcxt+DjzEX1aXMH1frb+wbwrT
d7qgdrHQ5isgf4+GpoFpDhkPliuXDUwjX6b9p94UZ4PzPmFBL7tUKLigoMS+
QUUON1SylxKZQTTE8bpUti/YrD4uDsTukZN3k7Y227SMNUTebnKbhFl6/qu2
7fPIlXTe3eumD6yfrZvk2/0R9uyommL3GiLs12TFb2bLTJT7/7nC2AoLTeL/
uiyoaKYxXOevQzwo4+eIbDKWkOesb/p/P7c/DSQ9udImUzBy21OQm4I68mLl
1Z72oYS9l1NTJjPgbs3QqjxDCfonwzetOUcF/uSK7qY4Lbixyym/at8jsLie
TN7C9kkR2ltmVjgpYxrWp9z7URHy/uz++P851mfs7fTE9chcuRYqrf1IEMFo
+er/9eYco3P/ogZlnCOENsqqP6DTDCfbBLD3L7A1CHHivwHVKdo1RPr76OVM
te3//OtFZ9XZ5OQg+pnE5ocidfSr5d7c/3XvQ+3dzWa1Mp5+p/ijV+4h6cnh
1P/r8v9eZ1ddvwhjbqXd/H1YfmyWemDrnoH08nZrWcWVg3uPrwcDlqdoylUU
r3YUo0s6rw6m+5SB1vGwR+xCbWixJf2cHQcVWS5VtUvfrAS1qlMcLF+oyMpG
1u/ZwW8oxcX6tIzbFwiZjjM+o1KHLij0eZ7+SEXCXO2Ne46XgfPMmszn6Eko
FdULyK2YR0M0p77g37wHUv+fv30RVCSUaTqYQF+PjDPUDue/KgXl/TvBsxUF
aCHu+KTgEBUtCb2//16sBF51e8epPqEiiuNezuH5ZmRqKa6uGVoCSwU9nCk7
k3CScpbnmuM8CtgfnefKHgpWo/R/n58gwBTF2KaBl4hm3EVX66Lk4biAt42z
ygt4r2tYk0ihovcLXi9oowrB6suf/O/6U+BCtmcYEp9HinWvbYP3BgLHgQWf
b1xUNHhuUkVN5ifa3ke/51VOMfDoajtMZRXBnKh3VNE4ll9S3Mw4wvOg6e1G
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
QRosElZST4dSkMaFyi8n3w/Dgb1mmeVMWdDTrZqfuYWCHGUqBLa3jMLD9jqn
lbEkML1Ikl9/b/3ZX9mWhU2jsP+SwJbJ7hRwfGaTM04lo37BsNODugTY2p2z
NKkXA9Hm3/XW32G3pXhvjvswCge6W77saYiHJKmRo2UjZHTto1PXnscEkDQy
bZRLD4N98aZ06++zt9y6vfWBEQGaJu6f4zgXCWQL883DbWQUKV/rKfWVAJ1C
LfuOOPuBZf6bJ+vvtrcVNneuv9sucCHOKZULn++mzV+9MGePe6UNsruJENKg
E3jI2gNuZhW+W3/P/erM/aM+33H/V9pPH+TxhpXTmywl8fqpqgi9ukOJCFHp
aQ2Pex1B6Hv39Po778zSvhPr77wfrd6iEtbtCjOJlyz34HWlt8Eq/fElrK9i
m4eYj9iAdAin9/r775KrV/e3nCWCs858SeBeO1B9PATP8HpT3aiwvcSFCPdc
68+8jDEDU4U9quvvwm/+sOa4/i6823TSdVZvSzg8Rcpzx+vwhHCueD9eh1a/
l94yHzeEd/ljL9bfi79T3URefy++rkWDWcfHGE5PSzIw4/W5Jsw7GofX57+5
iRNWcTrw0XdjzPo78oLhe2rX35HfjJg77kvqwUmxTTfH8t/BNY+Wq2rhVBQo
uvS2jOMp0NezWRjkLKJqBe3T5Sl4vVV6PFMYKYK79GofrecoyPXlH2vWh4Mw
KPcwXjXtNhxqGYhNwetHW77BNKJ9GPipnK08H9KAknCi2x+vkx6Wmog3LKNw
q46k8JiSBCNhrFlH8Xo4puDBDH2jUPo+8c3cuRhguKQe9396Ou94rP/v/4ci
kUohiQYVCmWEjINSlKxkpLIysvdMyB4hI5S9M7KloqddKbLXddmba1CZUd/X
9f59br9/z+26vV7Pc56v1/Oc+7m9rsc5g+27rq6qAaceDtJ/TDZ6OvjAqFc5
rQm2v0evfby4VokDXFPPC0FlN4jN3X9/5gv2Pup5dBuv4kDGoniQS9EBXkaF
C3/C9ktsbbtSiRvL1+rPwkeyHkNVD74xB9uXY19kmPWu4eFD+asxewYTcEkM
sa7F4k/TdmDP/ft4MJsyCXt2+z440YpFmGFx7lq/cmQWi3PyU38WVfq74N4x
kVn1eRL2JWkw9c0toO+KenN0Z59Dunv4IZ5kEvp7n/ventBu6Dg9Kmh/PAOU
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
    "]],
  Axes->True,
  AxesLabel->{None, None, None},
  AxesOrigin->{Automatic, Automatic, Automatic},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGrids->None,
  FaceGridsStyle->Automatic,
  ImageSize->{400.27404758383886`, 254.3237406945171},
  ImageSizeRaw->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{All, All, All},
  PlotRangePadding->{Automatic, Automatic, Automatic},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{-1.573833690053637, -2.7415181672531785`, 1.2071145988152567`},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{{3.762152971609014*^9, 
  3.762152990064107*^9}},ExpressionUUID->"f894f1b5-ffd0-49c7-abd9-\
d5bf2a1eab6f"]
}, Open  ]]
},
WindowSize->{Full, Full},
WindowMargins->{{236, Automatic}, {Automatic, 50}},
FrontEndVersion->"11.2 for Mac OS X x86 (32-bit, 64-bit Kernel) (September \
10, 2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 59013, 1411, 1800, "Input",ExpressionUUID->"1e5217ca-884a-4b8d-9a68-594e6b8775a1"],
Cell[CellGroupData[{
Cell[59596, 1435, 4003, 101, 241, "Input",ExpressionUUID->"cdc59cf9-2fed-4f31-b446-e9e834a172c8"],
Cell[63602, 1538, 7295, 141, 235, "Output",ExpressionUUID->"aa9b8af3-37bf-4c37-90d5-4bfcfd9bcb13"]
}, Open  ]],
Cell[CellGroupData[{
Cell[70934, 1684, 4567, 114, 241, "Input",ExpressionUUID->"6eb9261c-abf2-4237-b891-55b7d0fede0e"],
Cell[75504, 1800, 7175, 137, 236, "Output",ExpressionUUID->"49c9644a-ff17-484f-bd16-4133bf812155"]
}, Open  ]],
Cell[CellGroupData[{
Cell[82716, 1942, 4253, 109, 220, "Input",ExpressionUUID->"ea9ff4d5-32f0-42ce-bf88-5047148cddf1"],
Cell[86972, 2053, 7815, 149, 241, "Output",ExpressionUUID->"5cee1825-114d-4ff4-8f63-b6e7a160b752"]
}, Open  ]],
Cell[CellGroupData[{
Cell[94824, 2207, 3053, 80, 157, "Input",ExpressionUUID->"782409d4-9a9e-4079-b327-d2e40bc436ff"],
Cell[97880, 2289, 7622, 146, 235, "Output",ExpressionUUID->"bb953ca2-b3a7-4e33-9c39-9cb61360dbe5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[105539, 2440, 687, 19, 30, "Input",ExpressionUUID->"f7548887-e248-4ff3-ae71-709824d4853a"],
Cell[106229, 2461, 297, 8, 50, "Output",ExpressionUUID->"dc9ba25e-8eea-4c1f-b093-c33933fa171d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[106563, 2474, 273, 7, 30, "Input",ExpressionUUID->"14fa585d-e768-4bb3-9573-17c62b1dc0fd"],
Cell[106839, 2483, 172, 4, 50, "Output",ExpressionUUID->"a37c7c8e-ef16-4d76-a111-1456444879ad"]
}, Open  ]],
Cell[CellGroupData[{
Cell[107048, 2492, 3809, 90, 157, "Input",ExpressionUUID->"db2d7eb6-b1ef-418e-b8b0-c7fcfabb6f17"],
Cell[110860, 2584, 7999, 151, 241, "Output",ExpressionUUID->"f3a01dce-ddee-4045-acbc-bb29db6a8ea9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[118896, 2740, 503, 13, 30, "Input",ExpressionUUID->"dd8c14fb-d2ef-480d-9328-f3ff3551fa7a"],
Cell[119402, 2755, 147553, 2409, 271, "Output",ExpressionUUID->"f894f1b5-ffd0-49c7-abd9-d5bf2a1eab6f"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)

